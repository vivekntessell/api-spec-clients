/*
 * Tessell Monitoring Service API
 * Monitoring API
 *
 * The version of the OpenAPI document: v1beta
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.tessell.monitoring.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.tessell.monitoring.client.model.TopProcessesMetricValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

import lombok.*;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
/**
 * TopProcessesMetric
 */
@JsonPropertyOrder({
  TopProcessesMetric.JSON_PROPERTY_METRIC_NAME,
  TopProcessesMetric.JSON_PROPERTY_DISPLAY_NAME,
  TopProcessesMetric.JSON_PROPERTY_UNIT,
  TopProcessesMetric.JSON_PROPERTY_METRIC_VALUES
})
@JsonTypeName("TopProcessesMetric")
@lombok.experimental.SuperBuilder
@lombok.NoArgsConstructor
@lombok.AllArgsConstructor
@javax.annotation.Generated(value = "com.tessell.codegen.TessellJavaGenerator", date = "2024-05-02T15:57:03.958037+05:30[Asia/Kolkata]")
@JsonIgnoreProperties(ignoreUnknown = true)
public class TopProcessesMetric {
  public static final String JSON_PROPERTY_METRIC_NAME = "metricName";
  private String metricName;

  public static final String JSON_PROPERTY_DISPLAY_NAME = "displayName";
  private String displayName;

  public static final String JSON_PROPERTY_UNIT = "unit";
  private String unit;

  public static final String JSON_PROPERTY_METRIC_VALUES = "metricValues";
  private List<TopProcessesMetricValue> metricValues = null;


  public TopProcessesMetric metricName(String metricName) {
    
    this.metricName = metricName;
    return this;
  }

   /**
   * Name of the top process metric.
   * @return metricName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Name of the top process metric.")
  @JsonProperty(JSON_PROPERTY_METRIC_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getMetricName() {
    return metricName;
  }


  @JsonProperty(JSON_PROPERTY_METRIC_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMetricName(String metricName) {
    this.metricName = metricName;
  }


  public TopProcessesMetric displayName(String displayName) {
    
    this.displayName = displayName;
    return this;
  }

   /**
   * Name of the top process metric, e.g Top CPU Processes, Top Memory Processes
   * @return displayName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Name of the top process metric, e.g Top CPU Processes, Top Memory Processes")
  @JsonProperty(JSON_PROPERTY_DISPLAY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDisplayName() {
    return displayName;
  }


  @JsonProperty(JSON_PROPERTY_DISPLAY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDisplayName(String displayName) {
    this.displayName = displayName;
  }


  public TopProcessesMetric unit(String unit) {
    
    this.unit = unit;
    return this;
  }

   /**
   * Unit of the metric values
   * @return unit
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Unit of the metric values")
  @JsonProperty(JSON_PROPERTY_UNIT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getUnit() {
    return unit;
  }


  @JsonProperty(JSON_PROPERTY_UNIT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUnit(String unit) {
    this.unit = unit;
  }


  public TopProcessesMetric metricValues(List<TopProcessesMetricValue> metricValues) {
    
    this.metricValues = metricValues;
    return this;
  }

  public TopProcessesMetric addMetricValuesItem(TopProcessesMetricValue metricValuesItem) {
    if (this.metricValues == null) {
      this.metricValues = new ArrayList<>();
    }
    this.metricValues.add(metricValuesItem);
    return this;
  }

   /**
   * Array of top processes for a specific metric
   * @return metricValues
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Array of top processes for a specific metric")
  @JsonProperty(JSON_PROPERTY_METRIC_VALUES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<TopProcessesMetricValue> getMetricValues() {
    return metricValues;
  }


  @JsonProperty(JSON_PROPERTY_METRIC_VALUES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMetricValues(List<TopProcessesMetricValue> metricValues) {
    this.metricValues = metricValues;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TopProcessesMetric topProcessesMetric = (TopProcessesMetric) o;
    return Objects.equals(this.metricName, topProcessesMetric.metricName) &&
        Objects.equals(this.displayName, topProcessesMetric.displayName) &&
        Objects.equals(this.unit, topProcessesMetric.unit) &&
        Objects.equals(this.metricValues, topProcessesMetric.metricValues);
  }

  @Override
  public int hashCode() {
    return Objects.hash(metricName, displayName, unit, metricValues);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TopProcessesMetric {\n");
    sb.append("    metricName: ").append(toIndentedString(metricName)).append("\n");
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    unit: ").append(toIndentedString(unit)).append("\n");
    sb.append("    metricValues: ").append(toIndentedString(metricValues)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

