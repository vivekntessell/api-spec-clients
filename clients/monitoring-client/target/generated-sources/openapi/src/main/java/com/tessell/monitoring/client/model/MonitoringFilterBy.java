/*
 * Tessell Monitoring Service API
 * Monitoring API
 *
 * The version of the OpenAPI document: v1beta
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.tessell.monitoring.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.tessell.monitoring.client.model.PerfMetricType;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

import lombok.*;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
/**
 * MonitoringFilterBy
 */
@JsonPropertyOrder({
  MonitoringFilterBy.JSON_PROPERTY_METRIC_TYPE,
  MonitoringFilterBy.JSON_PROPERTY_METRIC_VALUE,
  MonitoringFilterBy.JSON_PROPERTY_METRIC_VALUE_MASKED
})
@JsonTypeName("MonitoringFilterBy")
@lombok.experimental.SuperBuilder
@lombok.NoArgsConstructor
@lombok.AllArgsConstructor
@javax.annotation.Generated(value = "com.tessell.codegen.TessellJavaGenerator", date = "2024-05-02T15:57:03.958037+05:30[Asia/Kolkata]")
@JsonIgnoreProperties(ignoreUnknown = true)
public class MonitoringFilterBy {
  public static final String JSON_PROPERTY_METRIC_TYPE = "metricType";
  private PerfMetricType metricType;

  public static final String JSON_PROPERTY_METRIC_VALUE = "metricValue";
  private String metricValue;

  public static final String JSON_PROPERTY_METRIC_VALUE_MASKED = "metricValueMasked";
  private Boolean metricValueMasked = false;


  public MonitoringFilterBy metricType(PerfMetricType metricType) {
    
    this.metricType = metricType;
    return this;
  }

   /**
   * Get metricType
   * @return metricType
  **/
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_METRIC_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public PerfMetricType getMetricType() {
    return metricType;
  }


  @JsonProperty(JSON_PROPERTY_METRIC_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setMetricType(PerfMetricType metricType) {
    this.metricType = metricType;
  }


  public MonitoringFilterBy metricValue(String metricValue) {
    
    this.metricValue = metricValue;
    return this;
  }

   /**
   * Value of the metric filter
   * @return metricValue
  **/
  @ApiModelProperty(required = true, value = "Value of the metric filter")
  @JsonProperty(JSON_PROPERTY_METRIC_VALUE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getMetricValue() {
    return metricValue;
  }


  @JsonProperty(JSON_PROPERTY_METRIC_VALUE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setMetricValue(String metricValue) {
    this.metricValue = metricValue;
  }


  public MonitoringFilterBy metricValueMasked(Boolean metricValueMasked) {
    
    this.metricValueMasked = metricValueMasked;
    return this;
  }

   /**
   * Boolean that indicates if the value passed in the filter is masked or not
   * @return metricValueMasked
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Boolean that indicates if the value passed in the filter is masked or not")
  @JsonProperty(JSON_PROPERTY_METRIC_VALUE_MASKED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getMetricValueMasked() {
    return metricValueMasked;
  }


  @JsonProperty(JSON_PROPERTY_METRIC_VALUE_MASKED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMetricValueMasked(Boolean metricValueMasked) {
    this.metricValueMasked = metricValueMasked;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MonitoringFilterBy monitoringFilterBy = (MonitoringFilterBy) o;
    return Objects.equals(this.metricType, monitoringFilterBy.metricType) &&
        Objects.equals(this.metricValue, monitoringFilterBy.metricValue) &&
        Objects.equals(this.metricValueMasked, monitoringFilterBy.metricValueMasked);
  }

  @Override
  public int hashCode() {
    return Objects.hash(metricType, metricValue, metricValueMasked);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MonitoringFilterBy {\n");
    sb.append("    metricType: ").append(toIndentedString(metricType)).append("\n");
    sb.append("    metricValue: ").append(toIndentedString(metricValue)).append("\n");
    sb.append("    metricValueMasked: ").append(toIndentedString(metricValueMasked)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

