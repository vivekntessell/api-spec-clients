/*
 * Tessell Monitoring Service API
 * Monitoring API
 *
 * The version of the OpenAPI document: v1beta
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.tessell.monitoring.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.tessell.monitoring.client.model.MetricValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

import lombok.*;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
/**
 * SlicedMetric
 */
@JsonPropertyOrder({
  SlicedMetric.JSON_PROPERTY_SLICED_ENTITY_NAME,
  SlicedMetric.JSON_PROPERTY_METRIC_VALUES
})
@JsonTypeName("SlicedMetric")
@lombok.experimental.SuperBuilder
@lombok.NoArgsConstructor
@lombok.AllArgsConstructor
@javax.annotation.Generated(value = "com.tessell.codegen.TessellJavaGenerator", date = "2024-05-02T15:57:03.958037+05:30[Asia/Kolkata]")
@JsonIgnoreProperties(ignoreUnknown = true)
public class SlicedMetric {
  public static final String JSON_PROPERTY_SLICED_ENTITY_NAME = "slicedEntityName";
  private String slicedEntityName;

  public static final String JSON_PROPERTY_METRIC_VALUES = "metricValues";
  private List<MetricValue> metricValues = null;


  public SlicedMetric slicedEntityName(String slicedEntityName) {
    
    this.slicedEntityName = slicedEntityName;
    return this;
  }

   /**
   * Name of the sliced entity in the metric distribution.
   * @return slicedEntityName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Name of the sliced entity in the metric distribution.")
  @JsonProperty(JSON_PROPERTY_SLICED_ENTITY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSlicedEntityName() {
    return slicedEntityName;
  }


  @JsonProperty(JSON_PROPERTY_SLICED_ENTITY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSlicedEntityName(String slicedEntityName) {
    this.slicedEntityName = slicedEntityName;
  }


  public SlicedMetric metricValues(List<MetricValue> metricValues) {
    
    this.metricValues = metricValues;
    return this;
  }

  public SlicedMetric addMetricValuesItem(MetricValue metricValuesItem) {
    if (this.metricValues == null) {
      this.metricValues = new ArrayList<>();
    }
    this.metricValues.add(metricValuesItem);
    return this;
  }

   /**
   * Array containing metric values associated with the sliced entity.
   * @return metricValues
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Array containing metric values associated with the sliced entity.")
  @JsonProperty(JSON_PROPERTY_METRIC_VALUES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<MetricValue> getMetricValues() {
    return metricValues;
  }


  @JsonProperty(JSON_PROPERTY_METRIC_VALUES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMetricValues(List<MetricValue> metricValues) {
    this.metricValues = metricValues;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SlicedMetric slicedMetric = (SlicedMetric) o;
    return Objects.equals(this.slicedEntityName, slicedMetric.slicedEntityName) &&
        Objects.equals(this.metricValues, slicedMetric.metricValues);
  }

  @Override
  public int hashCode() {
    return Objects.hash(slicedEntityName, metricValues);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SlicedMetric {\n");
    sb.append("    slicedEntityName: ").append(toIndentedString(slicedEntityName)).append("\n");
    sb.append("    metricValues: ").append(toIndentedString(metricValues)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

