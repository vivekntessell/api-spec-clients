/*
 * Tessell Monitoring Service API
 * Monitoring API
 *
 * The version of the OpenAPI document: v1beta
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.tessell.monitoring.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.tessell.monitoring.client.model.MonitoringEntityType;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.UUID;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

import lombok.*;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
/**
 * RemoveEntityMonitoringPayload
 */
@JsonPropertyOrder({
  RemoveEntityMonitoringPayload.JSON_PROPERTY_ENTITY_TYPE,
  RemoveEntityMonitoringPayload.JSON_PROPERTY_SERVICE_ID,
  RemoveEntityMonitoringPayload.JSON_PROPERTY_SERVICE_INSTANCE_ID,
  RemoveEntityMonitoringPayload.JSON_PROPERTY_COMPUTE_RESOURCE_ID
})
@JsonTypeName("RemoveEntityMonitoringPayload")
@lombok.experimental.SuperBuilder
@lombok.NoArgsConstructor
@lombok.AllArgsConstructor
@javax.annotation.Generated(value = "com.tessell.codegen.TessellJavaGenerator", date = "2024-05-02T15:57:03.958037+05:30[Asia/Kolkata]")
@JsonIgnoreProperties(ignoreUnknown = true)
public class RemoveEntityMonitoringPayload {
  public static final String JSON_PROPERTY_ENTITY_TYPE = "entityType";
  private MonitoringEntityType entityType;

  public static final String JSON_PROPERTY_SERVICE_ID = "serviceId";
  private UUID serviceId;

  public static final String JSON_PROPERTY_SERVICE_INSTANCE_ID = "serviceInstanceId";
  private UUID serviceInstanceId;

  public static final String JSON_PROPERTY_COMPUTE_RESOURCE_ID = "computeResourceId";
  private UUID computeResourceId;


  public RemoveEntityMonitoringPayload entityType(MonitoringEntityType entityType) {
    
    this.entityType = entityType;
    return this;
  }

   /**
   * Get entityType
   * @return entityType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_ENTITY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public MonitoringEntityType getEntityType() {
    return entityType;
  }


  @JsonProperty(JSON_PROPERTY_ENTITY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEntityType(MonitoringEntityType entityType) {
    this.entityType = entityType;
  }


  public RemoveEntityMonitoringPayload serviceId(UUID serviceId) {
    
    this.serviceId = serviceId;
    return this;
  }

   /**
   * The ID of the DB Service.
   * @return serviceId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The ID of the DB Service.")
  @JsonProperty(JSON_PROPERTY_SERVICE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public UUID getServiceId() {
    return serviceId;
  }


  @JsonProperty(JSON_PROPERTY_SERVICE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setServiceId(UUID serviceId) {
    this.serviceId = serviceId;
  }


  public RemoveEntityMonitoringPayload serviceInstanceId(UUID serviceInstanceId) {
    
    this.serviceInstanceId = serviceInstanceId;
    return this;
  }

   /**
   * The ID of the DB Service Instance.
   * @return serviceInstanceId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The ID of the DB Service Instance.")
  @JsonProperty(JSON_PROPERTY_SERVICE_INSTANCE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public UUID getServiceInstanceId() {
    return serviceInstanceId;
  }


  @JsonProperty(JSON_PROPERTY_SERVICE_INSTANCE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setServiceInstanceId(UUID serviceInstanceId) {
    this.serviceInstanceId = serviceInstanceId;
  }


  public RemoveEntityMonitoringPayload computeResourceId(UUID computeResourceId) {
    
    this.computeResourceId = computeResourceId;
    return this;
  }

   /**
   * The ID of the Compute Resource.
   * @return computeResourceId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The ID of the Compute Resource.")
  @JsonProperty(JSON_PROPERTY_COMPUTE_RESOURCE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public UUID getComputeResourceId() {
    return computeResourceId;
  }


  @JsonProperty(JSON_PROPERTY_COMPUTE_RESOURCE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setComputeResourceId(UUID computeResourceId) {
    this.computeResourceId = computeResourceId;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RemoveEntityMonitoringPayload removeEntityMonitoringPayload = (RemoveEntityMonitoringPayload) o;
    return Objects.equals(this.entityType, removeEntityMonitoringPayload.entityType) &&
        Objects.equals(this.serviceId, removeEntityMonitoringPayload.serviceId) &&
        Objects.equals(this.serviceInstanceId, removeEntityMonitoringPayload.serviceInstanceId) &&
        Objects.equals(this.computeResourceId, removeEntityMonitoringPayload.computeResourceId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(entityType, serviceId, serviceInstanceId, computeResourceId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RemoveEntityMonitoringPayload {\n");
    sb.append("    entityType: ").append(toIndentedString(entityType)).append("\n");
    sb.append("    serviceId: ").append(toIndentedString(serviceId)).append("\n");
    sb.append("    serviceInstanceId: ").append(toIndentedString(serviceInstanceId)).append("\n");
    sb.append("    computeResourceId: ").append(toIndentedString(computeResourceId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

