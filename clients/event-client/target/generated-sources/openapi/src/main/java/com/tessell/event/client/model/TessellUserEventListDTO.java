/*
 * Event Service API
 * Event Service API Specification
 *
 * The version of the OpenAPI document: 1.0
 * Contact: samir.das@tessell.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.tessell.event.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.tessell.event.client.model.TessellUserEventDTO;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

import lombok.*;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
/**
 * TessellUserEventListDTO
 */
@JsonPropertyOrder({
  TessellUserEventListDTO.JSON_PROPERTY_PARENT_EVENT_ID,
  TessellUserEventListDTO.JSON_PROPERTY_EVENTS
})
@JsonTypeName("UserEventList")
@lombok.Builder
@lombok.NoArgsConstructor
@lombok.AllArgsConstructor
@javax.annotation.Generated(value = "com.tessell.codegen.TessellJavaGenerator", date = "2024-05-02T15:56:47.078643+05:30[Asia/Kolkata]")
@JsonIgnoreProperties(ignoreUnknown = true)
public class TessellUserEventListDTO {
  public static final String JSON_PROPERTY_PARENT_EVENT_ID = "parentEventId";
  private String parentEventId;

  public static final String JSON_PROPERTY_EVENTS = "events";
  private List<TessellUserEventDTO> events = null;


  public TessellUserEventListDTO parentEventId(String parentEventId) {
    
    this.parentEventId = parentEventId;
    return this;
  }

   /**
   * Entity name
   * @return parentEventId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Entity name")
  @JsonProperty(JSON_PROPERTY_PARENT_EVENT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getParentEventId() {
    return parentEventId;
  }


  @JsonProperty(JSON_PROPERTY_PARENT_EVENT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setParentEventId(String parentEventId) {
    this.parentEventId = parentEventId;
  }


  public TessellUserEventListDTO events(List<TessellUserEventDTO> events) {
    
    this.events = events;
    return this;
  }

  public TessellUserEventListDTO addEventsItem(TessellUserEventDTO eventsItem) {
    if (this.events == null) {
      this.events = new ArrayList<TessellUserEventDTO>();
    }
    this.events.add(eventsItem);
    return this;
  }

   /**
   * Get events
   * @return events
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_EVENTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<TessellUserEventDTO> getEvents() {
    return events;
  }


  @JsonProperty(JSON_PROPERTY_EVENTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEvents(List<TessellUserEventDTO> events) {
    this.events = events;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TessellUserEventListDTO userEventList = (TessellUserEventListDTO) o;
    return Objects.equals(this.parentEventId, userEventList.parentEventId) &&
        Objects.equals(this.events, userEventList.events);
  }

  @Override
  public int hashCode() {
    return Objects.hash(parentEventId, events);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TessellUserEventListDTO {\n");
    sb.append("    parentEventId: ").append(toIndentedString(parentEventId)).append("\n");
    sb.append("    events: ").append(toIndentedString(events)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

