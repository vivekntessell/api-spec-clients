openapi: 3.0.3

info:
  title: Event Service API
  version: "1.0"
  contact:
    name: Samir Das
    email: samir.das@tessell.com
  description: Event Service API Specification

servers:
  - url: "http://localhost:8080"

paths:
  /event-service/events:
    get:
      summary: Reads event for the current user.
      tags:
        - eventController
      operationId: getEvents
      description: Reads event for the current user.
      parameters:
        - name: start-time
          in: query
          description: "Start timestamp, when searching events in a range"
          required: false
          schema:
            type: string
        - name: end-time
          in: query
          description: "End timestamp, when searching events in a range"
          required: false
          schema:
            type: string
        - schema:
            type: string
          in: query
          name: entityType
          description: Entity Type
        - schema:
            type: string
          in: query
          name: entityID
          description: Entity/Resource ID
        - schema:
            type: string
          in: query
          name: severity
          description: Severity of the event
        - schema:
            type: string
          in: query
          name: parentEventId
          description: Parent event identifier
        - schema:
            type: string
          in: query
          name: eventType
          description: Event Type
        - schema:
            type: integer
            format: int32
            default: 0
          in: query
          name: pageOffset
          description: Page offset
        - schema:
            type: integer
            default: 10
          in: query
          name: pageSize
          description: Page Size
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EventApiResponse"
        default:
          description: API error response
          content:
            application/json:
              schema:
                $ref: common-specification.yaml#/components/schemas/ApiError
    parameters: []
  "/event-service/event/{eventType}/suppress":
    patch:
      tags:
        - eventController
      summary: Suppress an event type
      operationId: suppressEvent
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Event"
        default:
          description: API error response
          content:
            application/json:
              schema:
                $ref: common-specification.yaml#/components/schemas/ApiError
      description: Suppress an event type
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                entityType:
                  type: string
                entityId:
                  type: string
                severity:
                  $ref: "#/components/schemas/Severity"
    parameters:
      - schema:
          type: string
        name: eventType
        in: path
        required: true
  "/event-service/event/{eventType}/unsuppress":
    patch:
      tags:
        - eventController
      summary: Unsuppress a previous suppressed event.
      operationId: unsuppressEvent
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Event"
        default:
          description: API error response
          content:
            application/json:
              schema:
                $ref: common-specification.yaml#/components/schemas/ApiError
      description: Unsuppress a previously suppressed event.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                entityType:
                  type: string
                entityId:
                  type: string
                severity:
                  $ref: "#/components/schemas/Severity"
    parameters:
      - schema:
          type: string
        name: eventType
        in: path
        required: true
  /event-service/notifications/count:
    get:
      summary: Get notification count
      tags:
        - notificationController
      operationId: getNotificationsCount
      description: Get the current count of active notifications in the specified time
      parameters:
        - name: start-time
          in: query
          description: "Start timestamp, when searching events in a range"
          required: false
          schema:
            type: string
        - name: end-time
          in: query
          description: "End timestamp, when searching events in a range"
          required: false
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotificationCount"
        default:
          description: API error response
          content:
            application/json:
              schema:
                $ref: common-specification.yaml#/components/schemas/ApiError
  /event-service/notifications/batch-acknowledge:
    post:
      summary: Acknowledge notifications
      tags:
        - notificationController
      operationId: batchAcknowledgeNotification
      description: Acknowledges notifications
      requestBody:
        description: "Batch Acknowledge Body"
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BatchAcknowledgeRequest"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AcknowledgeNotificationResponse"
        default:
          description: API error response
          content:
            application/json:
              schema:
                $ref: common-specification.yaml#/components/schemas/ApiError
  /event-service/notifications/summary:
    get:
      summary: Get notifications summary
      tags:
        - notificationController
      operationId: getNotificationSummary
      description: Get latest notifications summary for the current user.
      parameters:
        - name: start-time
          in: query
          description: "Start timestamp, when searching events in a range"
          required: false
          schema:
            type: string
        - name: end-time
          in: query
          description: "End timestamp, when searching events in a range"
          required: false
          schema:
            type: string
        - schema:
            type: integer
            default: 0
          in: query
          name: pageOffset
          description: Page offset
        - schema:
            type: integer
            default: 10
          in: query
          name: pageSize
          description: Page Size
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotificationSummaryApiResponse"
        default:
          description: API error response
          content:
            application/json:
              schema:
                $ref: common-specification.yaml#/components/schemas/ApiError
  /tessell-ops/event-service/notifications:
    get:
      summary: Returns the events for the user
      tags:
        - notificationController
      operationId: getNotificationsOps
      description: Reads notification for the current user.
      parameters:
        - name: start-time
          in: query
          description: "Start timestamp, when searching events in a range"
          required: false
          schema:
            type: string
        - name: end-time
          in: query
          description: "End timestamp, when searching events in a range"
          required: false
          schema:
            type: string
        - schema:
            type: string
          in: query
          name: entityType
          description: Entity Name
        - schema:
            type: string
          in: query
          name: entityName
          description: Entity Name
        - schema:
            type: string
          in: query
          name: severity
          description: Severity of the event
        - schema:
            type: string
          in: query
          name: eventType
          description: Event type
        - schema:
            type: integer
            format: int32
            default: 0
          in: query
          name: pageOffset
          description: Page offset
        - schema:
            type: integer
            default: 10
          in: query
          name: pageSize
          description: Page Size
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/NotificationApiResponse"
        default:
          description: API error response
          content:
            application/json:
              schema:
                $ref: common-specification.yaml#/components/schemas/ApiErrorOps
  /event-service/notifications:
    get:
      summary: Returns the events for the user
      tags:
        - notificationController
      operationId: getNotifications
      description: Reads notification for the current user.
      parameters:
        - name: start-time
          in: query
          description: "Start timestamp, when searching events in a range"
          required: false
          schema:
            type: string
        - name: end-time
          in: query
          description: "End timestamp, when searching events in a range"
          required: false
          schema:
            type: string
        - schema:
            type: string
          in: query
          name: entityType
          description: Entity Name
        - schema:
            type: string
          in: query
          name: entityName
          description: Entity Name
        - schema:
            type: string
          in: query
          name: severity
          description: Severity of the event
        - schema:
            type: string
          in: query
          name: eventType
          description: Event type
        - schema:
            type: integer
            format: int32
            default: 0
          in: query
          name: pageOffset
          description: Page offset
        - schema:
            type: integer
            default: 10
          in: query
          name: pageSize
          description: Page Size
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/NotificationApiResponse"
        default:
          description: API error response
          content:
            application/json:
              schema:
                $ref: common-specification.yaml#/components/schemas/ApiError
    parameters: []
components:
  schemas:
    BatchAcknowledgeRequest:
      title: Batch acknowledge request
      type: object
      description: Batch acknowledge request
      properties:
        ids:
          type: array
          items:
            type: string
        acknowledgeAll:
          type: boolean
          default: true
          description: acknowledges all the notifications of the user
    EventEntity:
      x-gorm: true
      title: Event Entity
      type: object
      description: Event object
      properties:
        id:
          type: string
          x-exclude-from: service
          description: event identifier
        tenantId:
          x-exclude-from: service
          x-gorm-column-attrs: not null
          type: string
          description: Tenant identifier
        userEventId:
          type: string
          description: User Event identifier
        subscriptionName:
          type: string
          description: Subscription name
        subscriptionId:
          type: string
          description: Subscription Id
        userId:
          type: string
          description: User identifier
        ownerName:
          type: string
          description: Owner of the entity
        userGroup:
          type: string
          description: User group
        eventType:
          x-gorm-column-attrs: not null
          type: string
        appName:
          type: string
          description: App that generated the event
        severity:
          x-gorm-column-attrs: not null
          allOf:
            - $ref: "#/components/schemas/Severity"
        entityId:
          type: string
          description: Entity identifier
        entityName:
          type: string
          description: Entity Name
        message:
          x-gorm-column-attrs: not null
          type: string
          description: message
        occurredAt:
          type: string
          format: date-time
          description: occurred at timestamp
        entityType:
          type: string
          description: entity type
        entityTypeDisplayName:
          type: string
          description: entity type display name
        parentEventId:
          type: string
          description: Parent event identifier
        order:
          type: integer
          description: Event order under the parent event
        entityMetadata:
          type: string
          description: Entity metadata
        eventMetadata:
          type: string
          description: Event metadata
        systemGenerated:
          type: boolean
          description: Is system generated event
        visibility:
          x-gorm-column-attrs: not null
          allOf:
            - $ref: "#/components/schemas/Visibility"
      x-gorm-table-name: TESSELL_EVENTS
    Event:
      title: Event
      type: object
      description: Event object
      required:
        - id
        - tenantId
        - subscriptionName
        - userId
        - ownerName
        - eventType
        - appName
        - severity
        - entityId
        - entityName
        - entityType
        - message
        - occurredAt
        - parentEventId
        - order
        - systemGenerated
      properties:
        id:
          type: string
          format: uuid
          x-exclude-from: service
          x-gorm-primary-key: true
          description: event identifier
        tenantId:
          x-exclude-from: service
          x-gorm-column-attrs: not null
          type: string
          description: Tenant identifier
        subscriptionName:
          type: string
          description: Subscription name
        userId:
          type: string
          description: User identifier
        userGroup:
          type: string
          description: User group
        ownerName:
          type: string
          description: Owner of the entity
        eventType:
          x-gorm-column-attrs: not null
          type: string
        appName:
          type: string
          description: App that generated the event
        severity:
          x-gorm-column-attrs: not null
          allOf:
            - $ref: "#/components/schemas/Severity"
        entityId:
          type: string
          description: Entity identifier
        entityName:
          type: string
          description: Entity name
        message:
          x-gorm-column-attrs: not null
          type: string
          description: message
        occurredAt:
          type: string
          format: date-time
          description: occurred at timestamp
        entityType:
          type: string
          description: entity type
        parentEventId:
          type: string
          description: Parent event identifier
        order:
          type: integer
          description: Event order under the parent event
        entityMetadata:
          type: string
          description: Entity metadata
        eventMetadata:
          type: string
          description: Event metadata
        systemGenerated:
          type: boolean
          description: Is system generated event
        visibility:
          $ref: "#/components/schemas/Visibility"
    UserEvent:
      title: User Event
      type: object
      description: User Event object
      required:
        - id
        - tenantId
        - userId
        - event
        - acknowledged
        - acknowledgedAt
      properties:
        id:
          type: string
          x-exclude-from: service
          x-gorm-primary-key: true
          description: notification identifier
        tenantId:
          x-exclude-from: service
          x-gorm-column-attrs: not null
          type: string
          description: Tenant identifier
        userId:
          type: string
          description: User identifier
        event:
          $ref: "#/components/schemas/Event"
          description: Event corresponding to this notification
        acknowledged:
          type: boolean
          description: is event acknowledged?
        acknowledgedAt:
          type: string
          format: date-time
          description: acknowledged timestamp
        notifyUser:
          type: boolean
          description: whether to notify the user
    UserEventEntity:
      x-gorm: true
      title: User Event Entity
      type: object
      description: User Event object
      properties:
        id:
          type: string
          x-exclude-from: service
          x-gorm-primary-key: true
          description: notification identifier
        tenantId:
          x-exclude-from: service
          x-gorm-column-attrs: not null
          type: string
          description: Tenant identifier
        userId:
          type: string
          description: User identifier
        event:
          $ref: "#/components/schemas/EventEntity"
          description: Event corresponding to this notification
        acknowledged:
          type: boolean
          description: is event acknowledged?
        acknowledgedAt:
          type: string
          format: date-time
          description: acknowledged timestamp
        notifyUser:
          type: boolean
          description: whether to notify the user
        subevents:
          type: array
          items:
            $ref: "#/components/schemas/EventEntity"
          description: all events with same parent ID
    NotificationCount:
      title: Notification Count
      type: object
      description: Notification count object
      required:
        - acknowledgedCount
        - count
      properties:
        count:
          type: integer
          description: Total number of events in the provided time range that are not acknowledged
    NotificationSummary:
      title: Notification Summary
      type: object
      description: Notification summary object
      required:
        - id
        - acknowledged
        - message
        - entityName
        - entityType
        - occurredAt
        - appName
      properties:
        id:
          type: string
          format: uuid
          description: notification identifier
        acknowledged:
          type: boolean
          description: is event acknowledged by the user?
        message:
          type: string
          description: message
        entityName:
          type: string
          description: Entity name
        entityType:
          type: string
          description: Entity type
        occurredAt:
          type: string
          format: date-time
          description: occurred at timestamp
        appName:
          type: string
          description: App that generated the event
    Severity:
      title: Severity
      type: string
      enum:
        - INFO
        - WARNING
        - CRITICAL
      description: Enumeration for severity level
    Visibility:
      title: Visibility
      type: string
      description: Visibility level
      enum:
        - USER
        - SYSTEM
    GetEventResponse:
      title: Get Events Response
      type: array
      items:
        $ref: "#/components/schemas/Event"
    GetNotificationResponse:
      title: Get Notifications Response
      type: array
      items:
        $ref: "#/components/schemas/UserEventList"

    #      additionalProperties:
    #        type: array
    #        items:
    #          $ref: "#/components/schemas/UserEvent"
    UserEventList:
      title: User events list
      type: object
      properties:
        parentEventId:
          type: string
          description: Entity name
        events:
          type: array
          items:
            $ref: "#/components/schemas/UserEvent"
    NotificationSummaryResponse:
      title: Get Notifications Summary Response
      type: array
      items:
        $ref: "#/components/schemas/NotificationSummary"
    AcknowledgeNotificationResponse:
      title: Acknowledge Notifications Summary Response
      type: array
      items:
        type: string
    ApiMetadata:
      properties:
        pagination:
          $ref: "#/components/schemas/ApiPaginationInfo"
        records:
          format: int32
          type: integer
        timeZone:
          type: string
      title: ApiMetadata
      type: object
    ApiPaginationInfo:
      title: ApiPaginationInfo
      type: object
      required:
        - pageSize
        - pageOffset
      properties:
        pageOffset:
          format: int32
          type: integer
        pageSize:
          format: int32
          type: integer
    EventApiResponse:
      title: EventApiResponse
      type: object
      properties:
        metadata:
          $ref: "#/components/schemas/ApiMetadata"
        response:
          $ref: "#/components/schemas/GetEventResponse"
    NotificationApiResponse:
      title: NotificationApiResponse
      type: object
      properties:
        metadata:
          $ref: "#/components/schemas/ApiMetadata"
        response:
          $ref: "#/components/schemas/GetNotificationResponse"
    NotificationSummaryApiResponse:
      title: NotificationSummaryApiResponse
      type: object
      properties:
        metadata:
          $ref: "#/components/schemas/ApiMetadata"
        response:
          $ref: "#/components/schemas/NotificationSummaryResponse"
tags:
  - name: eventController
  - name: notificationController
