/*
 * Tessell Database System REST Web Services' API Documentation
 * Tessell Database System REST Web Services' Api Documentation
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.tessell.database.system.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.tessell.database.system.client.model.ApplyStrategy;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.UUID;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

import lombok.*;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
/**
 * Application Details for any operation
 */
@ApiModel(description = "Application Details for any operation")
@JsonPropertyOrder({
  ApplyConfig.JSON_PROPERTY_OVERRIDDEN_TASK_IDS,
  ApplyConfig.JSON_PROPERTY_STRATEGY,
  ApplyConfig.JSON_PROPERTY_MAINTENANCE_WINDOW_ID,
  ApplyConfig.JSON_PROPERTY_TIME
})
@JsonTypeName("ApplyConfig")

@AllArgsConstructor
@NoArgsConstructor
@Getter
@Setter
@lombok.experimental.SuperBuilder
@javax.annotation.Generated(value = "com.tessell.codegen.TessellJavaGenerator", date = "2024-05-01T22:16:40.788615+05:30[Asia/Kolkata]")
@JsonIgnoreProperties(ignoreUnknown = true)
public class ApplyConfig {
  public static final String JSON_PROPERTY_OVERRIDDEN_TASK_IDS = "overriddenTaskIds";
  private List<UUID> overriddenTaskIds = null;

  public static final String JSON_PROPERTY_STRATEGY = "strategy";
  private ApplyStrategy strategy;

  public static final String JSON_PROPERTY_MAINTENANCE_WINDOW_ID = "maintenanceWindowId";
  private UUID maintenanceWindowId;

  public static final String JSON_PROPERTY_TIME = "time";
  private Date time;


  public ApplyConfig overriddenTaskIds(List<UUID> overriddenTaskIds) {
    
    this.overriddenTaskIds = overriddenTaskIds;
    return this;
  }

  public ApplyConfig addOverriddenTaskIdsItem(UUID overriddenTaskIdsItem) {
    if (this.overriddenTaskIds == null) {
      this.overriddenTaskIds = new ArrayList<>();
    }
    this.overriddenTaskIds.add(overriddenTaskIdsItem);
    return this;
  }

   /**
   * Task ids that this request will override
   * @return overriddenTaskIds
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Task ids that this request will override")
  @JsonProperty(JSON_PROPERTY_OVERRIDDEN_TASK_IDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UUID> getOverriddenTaskIds() {
    return overriddenTaskIds;
  }


  @JsonProperty(JSON_PROPERTY_OVERRIDDEN_TASK_IDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOverriddenTaskIds(List<UUID> overriddenTaskIds) {
    this.overriddenTaskIds = overriddenTaskIds;
  }


  public ApplyConfig strategy(ApplyStrategy strategy) {
    
    this.strategy = strategy;
    return this;
  }

   /**
   * Get strategy
   * @return strategy
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_STRATEGY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ApplyStrategy getStrategy() {
    return strategy;
  }


  @JsonProperty(JSON_PROPERTY_STRATEGY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStrategy(ApplyStrategy strategy) {
    this.strategy = strategy;
  }


  public ApplyConfig maintenanceWindowId(UUID maintenanceWindowId) {
    
    this.maintenanceWindowId = maintenanceWindowId;
    return this;
  }

   /**
   * Needed when strategy is MAINTENANCE_WINDOW
   * @return maintenanceWindowId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Needed when strategy is MAINTENANCE_WINDOW")
  @JsonProperty(JSON_PROPERTY_MAINTENANCE_WINDOW_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public UUID getMaintenanceWindowId() {
    return maintenanceWindowId;
  }


  @JsonProperty(JSON_PROPERTY_MAINTENANCE_WINDOW_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMaintenanceWindowId(UUID maintenanceWindowId) {
    this.maintenanceWindowId = maintenanceWindowId;
  }


  public ApplyConfig time(Date time) {
    
    this.time = time;
    return this;
  }

   /**
   * Needed when strategy is CUSTOM_DATE_TIME
   * @return time
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Needed when strategy is CUSTOM_DATE_TIME")
  @JsonProperty(JSON_PROPERTY_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Date getTime() {
    return time;
  }


  @JsonProperty(JSON_PROPERTY_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTime(Date time) {
    this.time = time;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ApplyConfig applyConfig = (ApplyConfig) o;
    return Objects.equals(this.overriddenTaskIds, applyConfig.overriddenTaskIds) &&
        Objects.equals(this.strategy, applyConfig.strategy) &&
        Objects.equals(this.maintenanceWindowId, applyConfig.maintenanceWindowId) &&
        Objects.equals(this.time, applyConfig.time);
  }

  @Override
  public int hashCode() {
    return Objects.hash(overriddenTaskIds, strategy, maintenanceWindowId, time);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ApplyConfig {\n");
    sb.append("    overriddenTaskIds: ").append(toIndentedString(overriddenTaskIds)).append("\n");
    sb.append("    strategy: ").append(toIndentedString(strategy)).append("\n");
    sb.append("    maintenanceWindowId: ").append(toIndentedString(maintenanceWindowId)).append("\n");
    sb.append("    time: ").append(toIndentedString(time)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

