/*
 * Tessell Database System REST Web Services' API Documentation
 * Tessell Database System REST Web Services' Api Documentation
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.tessell.database.system.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.tessell.database.system.client.model.ConnectionPoolCrudActionType;
import com.tessell.database.system.client.model.ConnectionPoolMetadata;
import com.tessell.database.system.client.model.CreateConnectionPoolWorkflowPayload;
import com.tessell.database.system.client.model.DatabaseEngineType;
import com.tessell.database.system.client.model.DeleteConnectionPoolWorkflowPayload;
import com.tessell.database.system.client.model.UpdateConnectionPoolWorkflowPayload;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import java.util.UUID;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

import lombok.*;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
/**
 * ConnectionPoolWorkflowPayload
 */
@JsonPropertyOrder({
  ConnectionPoolWorkflowPayload.JSON_PROPERTY_TESSELL_SERVICE_ID,
  ConnectionPoolWorkflowPayload.JSON_PROPERTY_SERVICE_NAME,
  ConnectionPoolWorkflowPayload.JSON_PROPERTY_DATABASE_ENGINE_TYPE,
  ConnectionPoolWorkflowPayload.JSON_PROPERTY_OWNER_ID,
  ConnectionPoolWorkflowPayload.JSON_PROPERTY_SUBSCRIPTION_ID,
  ConnectionPoolWorkflowPayload.JSON_PROPERTY_TENANT_ID,
  ConnectionPoolWorkflowPayload.JSON_PROPERTY_CLOUD_ACCOUNT_ID,
  ConnectionPoolWorkflowPayload.JSON_PROPERTY_CRUD_ACTION_TYPE,
  ConnectionPoolWorkflowPayload.JSON_PROPERTY_METADATA,
  ConnectionPoolWorkflowPayload.JSON_PROPERTY_CONN_POOLS_TO_CREATE,
  ConnectionPoolWorkflowPayload.JSON_PROPERTY_CONN_POOLS_TO_UPDATE,
  ConnectionPoolWorkflowPayload.JSON_PROPERTY_CONN_POOLS_TO_DELETE
})
@JsonTypeName("ConnectionPoolWorkflowPayload")

@AllArgsConstructor
@NoArgsConstructor
@Getter
@Setter
@lombok.experimental.SuperBuilder
@javax.annotation.Generated(value = "com.tessell.codegen.TessellJavaGenerator", date = "2024-05-01T22:16:40.788615+05:30[Asia/Kolkata]")
@JsonIgnoreProperties(ignoreUnknown = true)
public class ConnectionPoolWorkflowPayload {
  public static final String JSON_PROPERTY_TESSELL_SERVICE_ID = "tessellServiceId";
  private UUID tessellServiceId;

  public static final String JSON_PROPERTY_SERVICE_NAME = "serviceName";
  private String serviceName;

  public static final String JSON_PROPERTY_DATABASE_ENGINE_TYPE = "databaseEngineType";
  private DatabaseEngineType databaseEngineType;

  public static final String JSON_PROPERTY_OWNER_ID = "ownerId";
  private String ownerId;

  public static final String JSON_PROPERTY_SUBSCRIPTION_ID = "subscriptionId";
  private UUID subscriptionId;

  public static final String JSON_PROPERTY_TENANT_ID = "tenantId";
  private String tenantId;

  public static final String JSON_PROPERTY_CLOUD_ACCOUNT_ID = "cloudAccountId";
  private UUID cloudAccountId;

  public static final String JSON_PROPERTY_CRUD_ACTION_TYPE = "crudActionType";
  private ConnectionPoolCrudActionType crudActionType;

  public static final String JSON_PROPERTY_METADATA = "metadata";
  private ConnectionPoolMetadata metadata;

  public static final String JSON_PROPERTY_CONN_POOLS_TO_CREATE = "connPoolsToCreate";
  private List<CreateConnectionPoolWorkflowPayload> connPoolsToCreate = null;

  public static final String JSON_PROPERTY_CONN_POOLS_TO_UPDATE = "connPoolsToUpdate";
  private List<UpdateConnectionPoolWorkflowPayload> connPoolsToUpdate = null;

  public static final String JSON_PROPERTY_CONN_POOLS_TO_DELETE = "connPoolsToDelete";
  private List<DeleteConnectionPoolWorkflowPayload> connPoolsToDelete = null;


  public ConnectionPoolWorkflowPayload tessellServiceId(UUID tessellServiceId) {
    
    this.tessellServiceId = tessellServiceId;
    return this;
  }

   /**
   * Get tessellServiceId
   * @return tessellServiceId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_TESSELL_SERVICE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public UUID getTessellServiceId() {
    return tessellServiceId;
  }


  @JsonProperty(JSON_PROPERTY_TESSELL_SERVICE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTessellServiceId(UUID tessellServiceId) {
    this.tessellServiceId = tessellServiceId;
  }


  public ConnectionPoolWorkflowPayload serviceName(String serviceName) {
    
    this.serviceName = serviceName;
    return this;
  }

   /**
   * Get serviceName
   * @return serviceName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_SERVICE_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getServiceName() {
    return serviceName;
  }


  @JsonProperty(JSON_PROPERTY_SERVICE_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setServiceName(String serviceName) {
    this.serviceName = serviceName;
  }


  public ConnectionPoolWorkflowPayload databaseEngineType(DatabaseEngineType databaseEngineType) {
    
    this.databaseEngineType = databaseEngineType;
    return this;
  }

   /**
   * Get databaseEngineType
   * @return databaseEngineType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_DATABASE_ENGINE_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public DatabaseEngineType getDatabaseEngineType() {
    return databaseEngineType;
  }


  @JsonProperty(JSON_PROPERTY_DATABASE_ENGINE_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDatabaseEngineType(DatabaseEngineType databaseEngineType) {
    this.databaseEngineType = databaseEngineType;
  }


  public ConnectionPoolWorkflowPayload ownerId(String ownerId) {
    
    this.ownerId = ownerId;
    return this;
  }

   /**
   * Get ownerId
   * @return ownerId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_OWNER_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getOwnerId() {
    return ownerId;
  }


  @JsonProperty(JSON_PROPERTY_OWNER_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOwnerId(String ownerId) {
    this.ownerId = ownerId;
  }


  public ConnectionPoolWorkflowPayload subscriptionId(UUID subscriptionId) {
    
    this.subscriptionId = subscriptionId;
    return this;
  }

   /**
   * Get subscriptionId
   * @return subscriptionId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_SUBSCRIPTION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public UUID getSubscriptionId() {
    return subscriptionId;
  }


  @JsonProperty(JSON_PROPERTY_SUBSCRIPTION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSubscriptionId(UUID subscriptionId) {
    this.subscriptionId = subscriptionId;
  }


  public ConnectionPoolWorkflowPayload tenantId(String tenantId) {
    
    this.tenantId = tenantId;
    return this;
  }

   /**
   * Get tenantId
   * @return tenantId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_TENANT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTenantId() {
    return tenantId;
  }


  @JsonProperty(JSON_PROPERTY_TENANT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTenantId(String tenantId) {
    this.tenantId = tenantId;
  }


  public ConnectionPoolWorkflowPayload cloudAccountId(UUID cloudAccountId) {
    
    this.cloudAccountId = cloudAccountId;
    return this;
  }

   /**
   * Get cloudAccountId
   * @return cloudAccountId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_CLOUD_ACCOUNT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public UUID getCloudAccountId() {
    return cloudAccountId;
  }


  @JsonProperty(JSON_PROPERTY_CLOUD_ACCOUNT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCloudAccountId(UUID cloudAccountId) {
    this.cloudAccountId = cloudAccountId;
  }


  public ConnectionPoolWorkflowPayload crudActionType(ConnectionPoolCrudActionType crudActionType) {
    
    this.crudActionType = crudActionType;
    return this;
  }

   /**
   * Get crudActionType
   * @return crudActionType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_CRUD_ACTION_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ConnectionPoolCrudActionType getCrudActionType() {
    return crudActionType;
  }


  @JsonProperty(JSON_PROPERTY_CRUD_ACTION_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCrudActionType(ConnectionPoolCrudActionType crudActionType) {
    this.crudActionType = crudActionType;
  }


  public ConnectionPoolWorkflowPayload metadata(ConnectionPoolMetadata metadata) {
    
    this.metadata = metadata;
    return this;
  }

   /**
   * Get metadata
   * @return metadata
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_METADATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ConnectionPoolMetadata getMetadata() {
    return metadata;
  }


  @JsonProperty(JSON_PROPERTY_METADATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMetadata(ConnectionPoolMetadata metadata) {
    this.metadata = metadata;
  }


  public ConnectionPoolWorkflowPayload connPoolsToCreate(List<CreateConnectionPoolWorkflowPayload> connPoolsToCreate) {
    
    this.connPoolsToCreate = connPoolsToCreate;
    return this;
  }

  public ConnectionPoolWorkflowPayload addConnPoolsToCreateItem(CreateConnectionPoolWorkflowPayload connPoolsToCreateItem) {
    if (this.connPoolsToCreate == null) {
      this.connPoolsToCreate = new ArrayList<>();
    }
    this.connPoolsToCreate.add(connPoolsToCreateItem);
    return this;
  }

   /**
   * Get connPoolsToCreate
   * @return connPoolsToCreate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_CONN_POOLS_TO_CREATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<CreateConnectionPoolWorkflowPayload> getConnPoolsToCreate() {
    return connPoolsToCreate;
  }


  @JsonProperty(JSON_PROPERTY_CONN_POOLS_TO_CREATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setConnPoolsToCreate(List<CreateConnectionPoolWorkflowPayload> connPoolsToCreate) {
    this.connPoolsToCreate = connPoolsToCreate;
  }


  public ConnectionPoolWorkflowPayload connPoolsToUpdate(List<UpdateConnectionPoolWorkflowPayload> connPoolsToUpdate) {
    
    this.connPoolsToUpdate = connPoolsToUpdate;
    return this;
  }

  public ConnectionPoolWorkflowPayload addConnPoolsToUpdateItem(UpdateConnectionPoolWorkflowPayload connPoolsToUpdateItem) {
    if (this.connPoolsToUpdate == null) {
      this.connPoolsToUpdate = new ArrayList<>();
    }
    this.connPoolsToUpdate.add(connPoolsToUpdateItem);
    return this;
  }

   /**
   * Get connPoolsToUpdate
   * @return connPoolsToUpdate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_CONN_POOLS_TO_UPDATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UpdateConnectionPoolWorkflowPayload> getConnPoolsToUpdate() {
    return connPoolsToUpdate;
  }


  @JsonProperty(JSON_PROPERTY_CONN_POOLS_TO_UPDATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setConnPoolsToUpdate(List<UpdateConnectionPoolWorkflowPayload> connPoolsToUpdate) {
    this.connPoolsToUpdate = connPoolsToUpdate;
  }


  public ConnectionPoolWorkflowPayload connPoolsToDelete(List<DeleteConnectionPoolWorkflowPayload> connPoolsToDelete) {
    
    this.connPoolsToDelete = connPoolsToDelete;
    return this;
  }

  public ConnectionPoolWorkflowPayload addConnPoolsToDeleteItem(DeleteConnectionPoolWorkflowPayload connPoolsToDeleteItem) {
    if (this.connPoolsToDelete == null) {
      this.connPoolsToDelete = new ArrayList<>();
    }
    this.connPoolsToDelete.add(connPoolsToDeleteItem);
    return this;
  }

   /**
   * Get connPoolsToDelete
   * @return connPoolsToDelete
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_CONN_POOLS_TO_DELETE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<DeleteConnectionPoolWorkflowPayload> getConnPoolsToDelete() {
    return connPoolsToDelete;
  }


  @JsonProperty(JSON_PROPERTY_CONN_POOLS_TO_DELETE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setConnPoolsToDelete(List<DeleteConnectionPoolWorkflowPayload> connPoolsToDelete) {
    this.connPoolsToDelete = connPoolsToDelete;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ConnectionPoolWorkflowPayload connectionPoolWorkflowPayload = (ConnectionPoolWorkflowPayload) o;
    return Objects.equals(this.tessellServiceId, connectionPoolWorkflowPayload.tessellServiceId) &&
        Objects.equals(this.serviceName, connectionPoolWorkflowPayload.serviceName) &&
        Objects.equals(this.databaseEngineType, connectionPoolWorkflowPayload.databaseEngineType) &&
        Objects.equals(this.ownerId, connectionPoolWorkflowPayload.ownerId) &&
        Objects.equals(this.subscriptionId, connectionPoolWorkflowPayload.subscriptionId) &&
        Objects.equals(this.tenantId, connectionPoolWorkflowPayload.tenantId) &&
        Objects.equals(this.cloudAccountId, connectionPoolWorkflowPayload.cloudAccountId) &&
        Objects.equals(this.crudActionType, connectionPoolWorkflowPayload.crudActionType) &&
        Objects.equals(this.metadata, connectionPoolWorkflowPayload.metadata) &&
        Objects.equals(this.connPoolsToCreate, connectionPoolWorkflowPayload.connPoolsToCreate) &&
        Objects.equals(this.connPoolsToUpdate, connectionPoolWorkflowPayload.connPoolsToUpdate) &&
        Objects.equals(this.connPoolsToDelete, connectionPoolWorkflowPayload.connPoolsToDelete);
  }

  @Override
  public int hashCode() {
    return Objects.hash(tessellServiceId, serviceName, databaseEngineType, ownerId, subscriptionId, tenantId, cloudAccountId, crudActionType, metadata, connPoolsToCreate, connPoolsToUpdate, connPoolsToDelete);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ConnectionPoolWorkflowPayload {\n");
    sb.append("    tessellServiceId: ").append(toIndentedString(tessellServiceId)).append("\n");
    sb.append("    serviceName: ").append(toIndentedString(serviceName)).append("\n");
    sb.append("    databaseEngineType: ").append(toIndentedString(databaseEngineType)).append("\n");
    sb.append("    ownerId: ").append(toIndentedString(ownerId)).append("\n");
    sb.append("    subscriptionId: ").append(toIndentedString(subscriptionId)).append("\n");
    sb.append("    tenantId: ").append(toIndentedString(tenantId)).append("\n");
    sb.append("    cloudAccountId: ").append(toIndentedString(cloudAccountId)).append("\n");
    sb.append("    crudActionType: ").append(toIndentedString(crudActionType)).append("\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("    connPoolsToCreate: ").append(toIndentedString(connPoolsToCreate)).append("\n");
    sb.append("    connPoolsToUpdate: ").append(toIndentedString(connPoolsToUpdate)).append("\n");
    sb.append("    connPoolsToDelete: ").append(toIndentedString(connPoolsToDelete)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

