/*
 * Tessell Database System REST Web Services' API Documentation
 * Tessell Database System REST Web Services' Api Documentation
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.tessell.database.system.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.tessell.database.system.client.model.CollectionWorkflowActionTypeOps;
import com.tessell.database.system.client.model.DbCollectionCreatePayload;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.UUID;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

import lombok.*;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
/**
 * CollectionTaskPayloadOps
 */
@JsonPropertyOrder({
  CollectionTaskPayloadOps.JSON_PROPERTY_ACTION,
  CollectionTaskPayloadOps.JSON_PROPERTY_SERVICE_ID,
  CollectionTaskPayloadOps.JSON_PROPERTY_DATABASE_ID,
  CollectionTaskPayloadOps.JSON_PROPERTY_COLLECTION_ID,
  CollectionTaskPayloadOps.JSON_PROPERTY_TENANT_ID,
  CollectionTaskPayloadOps.JSON_PROPERTY_DB_COLLECTION_CREATE_PAYLOAD
})
@JsonTypeName("CollectionTaskPayloadOps")

@AllArgsConstructor
@NoArgsConstructor
@Getter
@Setter
@lombok.experimental.SuperBuilder
@javax.annotation.Generated(value = "com.tessell.codegen.TessellJavaGenerator", date = "2024-05-01T22:16:40.788615+05:30[Asia/Kolkata]")
@JsonIgnoreProperties(ignoreUnknown = true)
public class CollectionTaskPayloadOps {
  public static final String JSON_PROPERTY_ACTION = "action";
  private CollectionWorkflowActionTypeOps action;

  public static final String JSON_PROPERTY_SERVICE_ID = "serviceId";
  private UUID serviceId;

  public static final String JSON_PROPERTY_DATABASE_ID = "databaseId";
  private UUID databaseId;

  public static final String JSON_PROPERTY_COLLECTION_ID = "collectionId";
  private UUID collectionId;

  public static final String JSON_PROPERTY_TENANT_ID = "tenantId";
  private String tenantId;

  public static final String JSON_PROPERTY_DB_COLLECTION_CREATE_PAYLOAD = "DbCollectionCreatePayload";
  private DbCollectionCreatePayload dbCollectionCreatePayload;


  public CollectionTaskPayloadOps action(CollectionWorkflowActionTypeOps action) {
    
    this.action = action;
    return this;
  }

   /**
   * Get action
   * @return action
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_ACTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public CollectionWorkflowActionTypeOps getAction() {
    return action;
  }


  @JsonProperty(JSON_PROPERTY_ACTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAction(CollectionWorkflowActionTypeOps action) {
    this.action = action;
  }


  public CollectionTaskPayloadOps serviceId(UUID serviceId) {
    
    this.serviceId = serviceId;
    return this;
  }

   /**
   * Get serviceId
   * @return serviceId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_SERVICE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public UUID getServiceId() {
    return serviceId;
  }


  @JsonProperty(JSON_PROPERTY_SERVICE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setServiceId(UUID serviceId) {
    this.serviceId = serviceId;
  }


  public CollectionTaskPayloadOps databaseId(UUID databaseId) {
    
    this.databaseId = databaseId;
    return this;
  }

   /**
   * Get databaseId
   * @return databaseId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_DATABASE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public UUID getDatabaseId() {
    return databaseId;
  }


  @JsonProperty(JSON_PROPERTY_DATABASE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDatabaseId(UUID databaseId) {
    this.databaseId = databaseId;
  }


  public CollectionTaskPayloadOps collectionId(UUID collectionId) {
    
    this.collectionId = collectionId;
    return this;
  }

   /**
   * Get collectionId
   * @return collectionId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_COLLECTION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public UUID getCollectionId() {
    return collectionId;
  }


  @JsonProperty(JSON_PROPERTY_COLLECTION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCollectionId(UUID collectionId) {
    this.collectionId = collectionId;
  }


  public CollectionTaskPayloadOps tenantId(String tenantId) {
    
    this.tenantId = tenantId;
    return this;
  }

   /**
   * Get tenantId
   * @return tenantId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_TENANT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTenantId() {
    return tenantId;
  }


  @JsonProperty(JSON_PROPERTY_TENANT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTenantId(String tenantId) {
    this.tenantId = tenantId;
  }


  public CollectionTaskPayloadOps dbCollectionCreatePayload(DbCollectionCreatePayload dbCollectionCreatePayload) {
    
    this.dbCollectionCreatePayload = dbCollectionCreatePayload;
    return this;
  }

   /**
   * Get dbCollectionCreatePayload
   * @return dbCollectionCreatePayload
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_DB_COLLECTION_CREATE_PAYLOAD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public DbCollectionCreatePayload getDbCollectionCreatePayload() {
    return dbCollectionCreatePayload;
  }


  @JsonProperty(JSON_PROPERTY_DB_COLLECTION_CREATE_PAYLOAD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDbCollectionCreatePayload(DbCollectionCreatePayload dbCollectionCreatePayload) {
    this.dbCollectionCreatePayload = dbCollectionCreatePayload;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CollectionTaskPayloadOps collectionTaskPayloadOps = (CollectionTaskPayloadOps) o;
    return Objects.equals(this.action, collectionTaskPayloadOps.action) &&
        Objects.equals(this.serviceId, collectionTaskPayloadOps.serviceId) &&
        Objects.equals(this.databaseId, collectionTaskPayloadOps.databaseId) &&
        Objects.equals(this.collectionId, collectionTaskPayloadOps.collectionId) &&
        Objects.equals(this.tenantId, collectionTaskPayloadOps.tenantId) &&
        Objects.equals(this.dbCollectionCreatePayload, collectionTaskPayloadOps.dbCollectionCreatePayload);
  }

  @Override
  public int hashCode() {
    return Objects.hash(action, serviceId, databaseId, collectionId, tenantId, dbCollectionCreatePayload);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CollectionTaskPayloadOps {\n");
    sb.append("    action: ").append(toIndentedString(action)).append("\n");
    sb.append("    serviceId: ").append(toIndentedString(serviceId)).append("\n");
    sb.append("    databaseId: ").append(toIndentedString(databaseId)).append("\n");
    sb.append("    collectionId: ").append(toIndentedString(collectionId)).append("\n");
    sb.append("    tenantId: ").append(toIndentedString(tenantId)).append("\n");
    sb.append("    dbCollectionCreatePayload: ").append(toIndentedString(dbCollectionCreatePayload)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

