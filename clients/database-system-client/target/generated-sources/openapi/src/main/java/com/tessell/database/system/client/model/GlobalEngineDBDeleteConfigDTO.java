/*
 * Tessell Database System REST Web Services' API Documentation
 * Tessell Database System REST Web Services' Api Documentation
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.tessell.database.system.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.UUID;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

import lombok.*;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
/**
 * Tessell DB auto deletion configuration details
 */
@ApiModel(description = "Tessell DB auto deletion configuration details")
@JsonPropertyOrder({
  GlobalEngineDBDeleteConfigDTO.JSON_PROPERTY_DELETE_AFTER_MINS,
  GlobalEngineDBDeleteConfigDTO.JSON_PROPERTY_SKIP_D_BS,
  GlobalEngineDBDeleteConfigDTO.JSON_PROPERTY_INVALIDATE_CREATING_DATABASE_TIMEOUT_MINUTES,
  GlobalEngineDBDeleteConfigDTO.JSON_PROPERTY_INVALIDATE_CREATING_CLONE_TIMEOUT_MINUTES,
  GlobalEngineDBDeleteConfigDTO.JSON_PROPERTY_INVALIDATE_CREATION_FAILED_DATABASE_TIMEOUT_MINUTES,
  GlobalEngineDBDeleteConfigDTO.JSON_PROPERTY_INVALIDATE_SAMPLE_DATASET_LOADING_PER_MB_TIMEOUT_MINUTES,
  GlobalEngineDBDeleteConfigDTO.JSON_PROPERTY_INVALIDATE_SWITCHING_SERVICE_TIMEOUT_MINUTES,
  GlobalEngineDBDeleteConfigDTO.JSON_PROPERTY_INVALIDATE_CREATING_INSTANCE_TIMEOUT_MINUTES,
  GlobalEngineDBDeleteConfigDTO.JSON_PROPERTY_INVALIDATE_FAILED_INSTANCE_TIMEOUT_MINUTES,
  GlobalEngineDBDeleteConfigDTO.JSON_PROPERTY_INVALIDATE_DELETING_INSTANCE_TIMEOUT_MINUTES,
  GlobalEngineDBDeleteConfigDTO.JSON_PROPERTY_INVALIDATE_STARTING_DATABASE_TIMEOUT_MINUTES,
  GlobalEngineDBDeleteConfigDTO.JSON_PROPERTY_HA_INSTANCE_COUNT,
  GlobalEngineDBDeleteConfigDTO.JSON_PROPERTY_CONFIG
})
@JsonTypeName("GlobalEngineDBDeleteConfigDTO")

@AllArgsConstructor
@NoArgsConstructor
@Getter
@Setter
@lombok.experimental.SuperBuilder
@javax.annotation.Generated(value = "com.tessell.codegen.TessellJavaGenerator", date = "2024-05-01T22:16:40.788615+05:30[Asia/Kolkata]")
@JsonIgnoreProperties(ignoreUnknown = true)
public class GlobalEngineDBDeleteConfigDTO {
  public static final String JSON_PROPERTY_DELETE_AFTER_MINS = "deleteAfterMins";
  private Map<String, Integer> deleteAfterMins = null;

  public static final String JSON_PROPERTY_SKIP_D_BS = "skipDBs";
  private Map<String, List<UUID>> skipDBs = null;

  public static final String JSON_PROPERTY_INVALIDATE_CREATING_DATABASE_TIMEOUT_MINUTES = "invalidateCreatingDatabaseTimeoutMinutes";
  private Map<String, Integer> invalidateCreatingDatabaseTimeoutMinutes = null;

  public static final String JSON_PROPERTY_INVALIDATE_CREATING_CLONE_TIMEOUT_MINUTES = "invalidateCreatingCloneTimeoutMinutes";
  private Map<String, Integer> invalidateCreatingCloneTimeoutMinutes = null;

  public static final String JSON_PROPERTY_INVALIDATE_CREATION_FAILED_DATABASE_TIMEOUT_MINUTES = "invalidateCreationFailedDatabaseTimeoutMinutes";
  private Map<String, Integer> invalidateCreationFailedDatabaseTimeoutMinutes = null;

  public static final String JSON_PROPERTY_INVALIDATE_SAMPLE_DATASET_LOADING_PER_MB_TIMEOUT_MINUTES = "invalidateSampleDatasetLoadingPerMbTimeoutMinutes";
  private Map<String, Integer> invalidateSampleDatasetLoadingPerMbTimeoutMinutes = null;

  public static final String JSON_PROPERTY_INVALIDATE_SWITCHING_SERVICE_TIMEOUT_MINUTES = "invalidateSwitchingServiceTimeoutMinutes";
  private Map<String, Integer> invalidateSwitchingServiceTimeoutMinutes = null;

  public static final String JSON_PROPERTY_INVALIDATE_CREATING_INSTANCE_TIMEOUT_MINUTES = "invalidateCreatingInstanceTimeoutMinutes";
  private Map<String, Integer> invalidateCreatingInstanceTimeoutMinutes = null;

  public static final String JSON_PROPERTY_INVALIDATE_FAILED_INSTANCE_TIMEOUT_MINUTES = "invalidateFailedInstanceTimeoutMinutes";
  private Map<String, Integer> invalidateFailedInstanceTimeoutMinutes = null;

  public static final String JSON_PROPERTY_INVALIDATE_DELETING_INSTANCE_TIMEOUT_MINUTES = "invalidateDeletingInstanceTimeoutMinutes";
  private Map<String, Integer> invalidateDeletingInstanceTimeoutMinutes = null;

  public static final String JSON_PROPERTY_INVALIDATE_STARTING_DATABASE_TIMEOUT_MINUTES = "invalidateStartingDatabaseTimeoutMinutes";
  private Map<String, Integer> invalidateStartingDatabaseTimeoutMinutes = null;

  public static final String JSON_PROPERTY_HA_INSTANCE_COUNT = "haInstanceCount";
  private Map<String, Integer> haInstanceCount = null;

  public static final String JSON_PROPERTY_CONFIG = "config";
  private Object config;


  public GlobalEngineDBDeleteConfigDTO deleteAfterMins(Map<String, Integer> deleteAfterMins) {
    
    this.deleteAfterMins = deleteAfterMins;
    return this;
  }

  public GlobalEngineDBDeleteConfigDTO putDeleteAfterMinsItem(String key, Integer deleteAfterMinsItem) {
    if (this.deleteAfterMins == null) {
      this.deleteAfterMins = new HashMap<>();
    }
    this.deleteAfterMins.put(key, deleteAfterMinsItem);
    return this;
  }

   /**
   * Get deleteAfterMins
   * @return deleteAfterMins
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_DELETE_AFTER_MINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Map<String, Integer> getDeleteAfterMins() {
    return deleteAfterMins;
  }


  @JsonProperty(JSON_PROPERTY_DELETE_AFTER_MINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeleteAfterMins(Map<String, Integer> deleteAfterMins) {
    this.deleteAfterMins = deleteAfterMins;
  }


  public GlobalEngineDBDeleteConfigDTO skipDBs(Map<String, List<UUID>> skipDBs) {
    
    this.skipDBs = skipDBs;
    return this;
  }

  public GlobalEngineDBDeleteConfigDTO putSkipDBsItem(String key, List<UUID> skipDBsItem) {
    if (this.skipDBs == null) {
      this.skipDBs = new HashMap<>();
    }
    this.skipDBs.put(key, skipDBsItem);
    return this;
  }

   /**
   * Get skipDBs
   * @return skipDBs
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_SKIP_D_BS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Map<String, List<UUID>> getSkipDBs() {
    return skipDBs;
  }


  @JsonProperty(JSON_PROPERTY_SKIP_D_BS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSkipDBs(Map<String, List<UUID>> skipDBs) {
    this.skipDBs = skipDBs;
  }


  public GlobalEngineDBDeleteConfigDTO invalidateCreatingDatabaseTimeoutMinutes(Map<String, Integer> invalidateCreatingDatabaseTimeoutMinutes) {
    
    this.invalidateCreatingDatabaseTimeoutMinutes = invalidateCreatingDatabaseTimeoutMinutes;
    return this;
  }

  public GlobalEngineDBDeleteConfigDTO putInvalidateCreatingDatabaseTimeoutMinutesItem(String key, Integer invalidateCreatingDatabaseTimeoutMinutesItem) {
    if (this.invalidateCreatingDatabaseTimeoutMinutes == null) {
      this.invalidateCreatingDatabaseTimeoutMinutes = new HashMap<>();
    }
    this.invalidateCreatingDatabaseTimeoutMinutes.put(key, invalidateCreatingDatabaseTimeoutMinutesItem);
    return this;
  }

   /**
   * Get invalidateCreatingDatabaseTimeoutMinutes
   * @return invalidateCreatingDatabaseTimeoutMinutes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_INVALIDATE_CREATING_DATABASE_TIMEOUT_MINUTES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Map<String, Integer> getInvalidateCreatingDatabaseTimeoutMinutes() {
    return invalidateCreatingDatabaseTimeoutMinutes;
  }


  @JsonProperty(JSON_PROPERTY_INVALIDATE_CREATING_DATABASE_TIMEOUT_MINUTES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInvalidateCreatingDatabaseTimeoutMinutes(Map<String, Integer> invalidateCreatingDatabaseTimeoutMinutes) {
    this.invalidateCreatingDatabaseTimeoutMinutes = invalidateCreatingDatabaseTimeoutMinutes;
  }


  public GlobalEngineDBDeleteConfigDTO invalidateCreatingCloneTimeoutMinutes(Map<String, Integer> invalidateCreatingCloneTimeoutMinutes) {
    
    this.invalidateCreatingCloneTimeoutMinutes = invalidateCreatingCloneTimeoutMinutes;
    return this;
  }

  public GlobalEngineDBDeleteConfigDTO putInvalidateCreatingCloneTimeoutMinutesItem(String key, Integer invalidateCreatingCloneTimeoutMinutesItem) {
    if (this.invalidateCreatingCloneTimeoutMinutes == null) {
      this.invalidateCreatingCloneTimeoutMinutes = new HashMap<>();
    }
    this.invalidateCreatingCloneTimeoutMinutes.put(key, invalidateCreatingCloneTimeoutMinutesItem);
    return this;
  }

   /**
   * Get invalidateCreatingCloneTimeoutMinutes
   * @return invalidateCreatingCloneTimeoutMinutes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_INVALIDATE_CREATING_CLONE_TIMEOUT_MINUTES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Map<String, Integer> getInvalidateCreatingCloneTimeoutMinutes() {
    return invalidateCreatingCloneTimeoutMinutes;
  }


  @JsonProperty(JSON_PROPERTY_INVALIDATE_CREATING_CLONE_TIMEOUT_MINUTES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInvalidateCreatingCloneTimeoutMinutes(Map<String, Integer> invalidateCreatingCloneTimeoutMinutes) {
    this.invalidateCreatingCloneTimeoutMinutes = invalidateCreatingCloneTimeoutMinutes;
  }


  public GlobalEngineDBDeleteConfigDTO invalidateCreationFailedDatabaseTimeoutMinutes(Map<String, Integer> invalidateCreationFailedDatabaseTimeoutMinutes) {
    
    this.invalidateCreationFailedDatabaseTimeoutMinutes = invalidateCreationFailedDatabaseTimeoutMinutes;
    return this;
  }

  public GlobalEngineDBDeleteConfigDTO putInvalidateCreationFailedDatabaseTimeoutMinutesItem(String key, Integer invalidateCreationFailedDatabaseTimeoutMinutesItem) {
    if (this.invalidateCreationFailedDatabaseTimeoutMinutes == null) {
      this.invalidateCreationFailedDatabaseTimeoutMinutes = new HashMap<>();
    }
    this.invalidateCreationFailedDatabaseTimeoutMinutes.put(key, invalidateCreationFailedDatabaseTimeoutMinutesItem);
    return this;
  }

   /**
   * Get invalidateCreationFailedDatabaseTimeoutMinutes
   * @return invalidateCreationFailedDatabaseTimeoutMinutes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_INVALIDATE_CREATION_FAILED_DATABASE_TIMEOUT_MINUTES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Map<String, Integer> getInvalidateCreationFailedDatabaseTimeoutMinutes() {
    return invalidateCreationFailedDatabaseTimeoutMinutes;
  }


  @JsonProperty(JSON_PROPERTY_INVALIDATE_CREATION_FAILED_DATABASE_TIMEOUT_MINUTES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInvalidateCreationFailedDatabaseTimeoutMinutes(Map<String, Integer> invalidateCreationFailedDatabaseTimeoutMinutes) {
    this.invalidateCreationFailedDatabaseTimeoutMinutes = invalidateCreationFailedDatabaseTimeoutMinutes;
  }


  public GlobalEngineDBDeleteConfigDTO invalidateSampleDatasetLoadingPerMbTimeoutMinutes(Map<String, Integer> invalidateSampleDatasetLoadingPerMbTimeoutMinutes) {
    
    this.invalidateSampleDatasetLoadingPerMbTimeoutMinutes = invalidateSampleDatasetLoadingPerMbTimeoutMinutes;
    return this;
  }

  public GlobalEngineDBDeleteConfigDTO putInvalidateSampleDatasetLoadingPerMbTimeoutMinutesItem(String key, Integer invalidateSampleDatasetLoadingPerMbTimeoutMinutesItem) {
    if (this.invalidateSampleDatasetLoadingPerMbTimeoutMinutes == null) {
      this.invalidateSampleDatasetLoadingPerMbTimeoutMinutes = new HashMap<>();
    }
    this.invalidateSampleDatasetLoadingPerMbTimeoutMinutes.put(key, invalidateSampleDatasetLoadingPerMbTimeoutMinutesItem);
    return this;
  }

   /**
   * Get invalidateSampleDatasetLoadingPerMbTimeoutMinutes
   * @return invalidateSampleDatasetLoadingPerMbTimeoutMinutes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_INVALIDATE_SAMPLE_DATASET_LOADING_PER_MB_TIMEOUT_MINUTES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Map<String, Integer> getInvalidateSampleDatasetLoadingPerMbTimeoutMinutes() {
    return invalidateSampleDatasetLoadingPerMbTimeoutMinutes;
  }


  @JsonProperty(JSON_PROPERTY_INVALIDATE_SAMPLE_DATASET_LOADING_PER_MB_TIMEOUT_MINUTES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInvalidateSampleDatasetLoadingPerMbTimeoutMinutes(Map<String, Integer> invalidateSampleDatasetLoadingPerMbTimeoutMinutes) {
    this.invalidateSampleDatasetLoadingPerMbTimeoutMinutes = invalidateSampleDatasetLoadingPerMbTimeoutMinutes;
  }


  public GlobalEngineDBDeleteConfigDTO invalidateSwitchingServiceTimeoutMinutes(Map<String, Integer> invalidateSwitchingServiceTimeoutMinutes) {
    
    this.invalidateSwitchingServiceTimeoutMinutes = invalidateSwitchingServiceTimeoutMinutes;
    return this;
  }

  public GlobalEngineDBDeleteConfigDTO putInvalidateSwitchingServiceTimeoutMinutesItem(String key, Integer invalidateSwitchingServiceTimeoutMinutesItem) {
    if (this.invalidateSwitchingServiceTimeoutMinutes == null) {
      this.invalidateSwitchingServiceTimeoutMinutes = new HashMap<>();
    }
    this.invalidateSwitchingServiceTimeoutMinutes.put(key, invalidateSwitchingServiceTimeoutMinutesItem);
    return this;
  }

   /**
   * Get invalidateSwitchingServiceTimeoutMinutes
   * @return invalidateSwitchingServiceTimeoutMinutes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_INVALIDATE_SWITCHING_SERVICE_TIMEOUT_MINUTES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Map<String, Integer> getInvalidateSwitchingServiceTimeoutMinutes() {
    return invalidateSwitchingServiceTimeoutMinutes;
  }


  @JsonProperty(JSON_PROPERTY_INVALIDATE_SWITCHING_SERVICE_TIMEOUT_MINUTES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInvalidateSwitchingServiceTimeoutMinutes(Map<String, Integer> invalidateSwitchingServiceTimeoutMinutes) {
    this.invalidateSwitchingServiceTimeoutMinutes = invalidateSwitchingServiceTimeoutMinutes;
  }


  public GlobalEngineDBDeleteConfigDTO invalidateCreatingInstanceTimeoutMinutes(Map<String, Integer> invalidateCreatingInstanceTimeoutMinutes) {
    
    this.invalidateCreatingInstanceTimeoutMinutes = invalidateCreatingInstanceTimeoutMinutes;
    return this;
  }

  public GlobalEngineDBDeleteConfigDTO putInvalidateCreatingInstanceTimeoutMinutesItem(String key, Integer invalidateCreatingInstanceTimeoutMinutesItem) {
    if (this.invalidateCreatingInstanceTimeoutMinutes == null) {
      this.invalidateCreatingInstanceTimeoutMinutes = new HashMap<>();
    }
    this.invalidateCreatingInstanceTimeoutMinutes.put(key, invalidateCreatingInstanceTimeoutMinutesItem);
    return this;
  }

   /**
   * Get invalidateCreatingInstanceTimeoutMinutes
   * @return invalidateCreatingInstanceTimeoutMinutes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_INVALIDATE_CREATING_INSTANCE_TIMEOUT_MINUTES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Map<String, Integer> getInvalidateCreatingInstanceTimeoutMinutes() {
    return invalidateCreatingInstanceTimeoutMinutes;
  }


  @JsonProperty(JSON_PROPERTY_INVALIDATE_CREATING_INSTANCE_TIMEOUT_MINUTES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInvalidateCreatingInstanceTimeoutMinutes(Map<String, Integer> invalidateCreatingInstanceTimeoutMinutes) {
    this.invalidateCreatingInstanceTimeoutMinutes = invalidateCreatingInstanceTimeoutMinutes;
  }


  public GlobalEngineDBDeleteConfigDTO invalidateFailedInstanceTimeoutMinutes(Map<String, Integer> invalidateFailedInstanceTimeoutMinutes) {
    
    this.invalidateFailedInstanceTimeoutMinutes = invalidateFailedInstanceTimeoutMinutes;
    return this;
  }

  public GlobalEngineDBDeleteConfigDTO putInvalidateFailedInstanceTimeoutMinutesItem(String key, Integer invalidateFailedInstanceTimeoutMinutesItem) {
    if (this.invalidateFailedInstanceTimeoutMinutes == null) {
      this.invalidateFailedInstanceTimeoutMinutes = new HashMap<>();
    }
    this.invalidateFailedInstanceTimeoutMinutes.put(key, invalidateFailedInstanceTimeoutMinutesItem);
    return this;
  }

   /**
   * Get invalidateFailedInstanceTimeoutMinutes
   * @return invalidateFailedInstanceTimeoutMinutes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_INVALIDATE_FAILED_INSTANCE_TIMEOUT_MINUTES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Map<String, Integer> getInvalidateFailedInstanceTimeoutMinutes() {
    return invalidateFailedInstanceTimeoutMinutes;
  }


  @JsonProperty(JSON_PROPERTY_INVALIDATE_FAILED_INSTANCE_TIMEOUT_MINUTES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInvalidateFailedInstanceTimeoutMinutes(Map<String, Integer> invalidateFailedInstanceTimeoutMinutes) {
    this.invalidateFailedInstanceTimeoutMinutes = invalidateFailedInstanceTimeoutMinutes;
  }


  public GlobalEngineDBDeleteConfigDTO invalidateDeletingInstanceTimeoutMinutes(Map<String, Integer> invalidateDeletingInstanceTimeoutMinutes) {
    
    this.invalidateDeletingInstanceTimeoutMinutes = invalidateDeletingInstanceTimeoutMinutes;
    return this;
  }

  public GlobalEngineDBDeleteConfigDTO putInvalidateDeletingInstanceTimeoutMinutesItem(String key, Integer invalidateDeletingInstanceTimeoutMinutesItem) {
    if (this.invalidateDeletingInstanceTimeoutMinutes == null) {
      this.invalidateDeletingInstanceTimeoutMinutes = new HashMap<>();
    }
    this.invalidateDeletingInstanceTimeoutMinutes.put(key, invalidateDeletingInstanceTimeoutMinutesItem);
    return this;
  }

   /**
   * Get invalidateDeletingInstanceTimeoutMinutes
   * @return invalidateDeletingInstanceTimeoutMinutes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_INVALIDATE_DELETING_INSTANCE_TIMEOUT_MINUTES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Map<String, Integer> getInvalidateDeletingInstanceTimeoutMinutes() {
    return invalidateDeletingInstanceTimeoutMinutes;
  }


  @JsonProperty(JSON_PROPERTY_INVALIDATE_DELETING_INSTANCE_TIMEOUT_MINUTES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInvalidateDeletingInstanceTimeoutMinutes(Map<String, Integer> invalidateDeletingInstanceTimeoutMinutes) {
    this.invalidateDeletingInstanceTimeoutMinutes = invalidateDeletingInstanceTimeoutMinutes;
  }


  public GlobalEngineDBDeleteConfigDTO invalidateStartingDatabaseTimeoutMinutes(Map<String, Integer> invalidateStartingDatabaseTimeoutMinutes) {
    
    this.invalidateStartingDatabaseTimeoutMinutes = invalidateStartingDatabaseTimeoutMinutes;
    return this;
  }

  public GlobalEngineDBDeleteConfigDTO putInvalidateStartingDatabaseTimeoutMinutesItem(String key, Integer invalidateStartingDatabaseTimeoutMinutesItem) {
    if (this.invalidateStartingDatabaseTimeoutMinutes == null) {
      this.invalidateStartingDatabaseTimeoutMinutes = new HashMap<>();
    }
    this.invalidateStartingDatabaseTimeoutMinutes.put(key, invalidateStartingDatabaseTimeoutMinutesItem);
    return this;
  }

   /**
   * Get invalidateStartingDatabaseTimeoutMinutes
   * @return invalidateStartingDatabaseTimeoutMinutes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_INVALIDATE_STARTING_DATABASE_TIMEOUT_MINUTES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Map<String, Integer> getInvalidateStartingDatabaseTimeoutMinutes() {
    return invalidateStartingDatabaseTimeoutMinutes;
  }


  @JsonProperty(JSON_PROPERTY_INVALIDATE_STARTING_DATABASE_TIMEOUT_MINUTES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInvalidateStartingDatabaseTimeoutMinutes(Map<String, Integer> invalidateStartingDatabaseTimeoutMinutes) {
    this.invalidateStartingDatabaseTimeoutMinutes = invalidateStartingDatabaseTimeoutMinutes;
  }


  public GlobalEngineDBDeleteConfigDTO haInstanceCount(Map<String, Integer> haInstanceCount) {
    
    this.haInstanceCount = haInstanceCount;
    return this;
  }

  public GlobalEngineDBDeleteConfigDTO putHaInstanceCountItem(String key, Integer haInstanceCountItem) {
    if (this.haInstanceCount == null) {
      this.haInstanceCount = new HashMap<>();
    }
    this.haInstanceCount.put(key, haInstanceCountItem);
    return this;
  }

   /**
   * Get haInstanceCount
   * @return haInstanceCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_HA_INSTANCE_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Map<String, Integer> getHaInstanceCount() {
    return haInstanceCount;
  }


  @JsonProperty(JSON_PROPERTY_HA_INSTANCE_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setHaInstanceCount(Map<String, Integer> haInstanceCount) {
    this.haInstanceCount = haInstanceCount;
  }


  public GlobalEngineDBDeleteConfigDTO config(Object config) {
    
    this.config = config;
    return this;
  }

   /**
   * Get config
   * @return config
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_CONFIG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Object getConfig() {
    return config;
  }


  @JsonProperty(JSON_PROPERTY_CONFIG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setConfig(Object config) {
    this.config = config;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GlobalEngineDBDeleteConfigDTO globalEngineDBDeleteConfigDTO = (GlobalEngineDBDeleteConfigDTO) o;
    return Objects.equals(this.deleteAfterMins, globalEngineDBDeleteConfigDTO.deleteAfterMins) &&
        Objects.equals(this.skipDBs, globalEngineDBDeleteConfigDTO.skipDBs) &&
        Objects.equals(this.invalidateCreatingDatabaseTimeoutMinutes, globalEngineDBDeleteConfigDTO.invalidateCreatingDatabaseTimeoutMinutes) &&
        Objects.equals(this.invalidateCreatingCloneTimeoutMinutes, globalEngineDBDeleteConfigDTO.invalidateCreatingCloneTimeoutMinutes) &&
        Objects.equals(this.invalidateCreationFailedDatabaseTimeoutMinutes, globalEngineDBDeleteConfigDTO.invalidateCreationFailedDatabaseTimeoutMinutes) &&
        Objects.equals(this.invalidateSampleDatasetLoadingPerMbTimeoutMinutes, globalEngineDBDeleteConfigDTO.invalidateSampleDatasetLoadingPerMbTimeoutMinutes) &&
        Objects.equals(this.invalidateSwitchingServiceTimeoutMinutes, globalEngineDBDeleteConfigDTO.invalidateSwitchingServiceTimeoutMinutes) &&
        Objects.equals(this.invalidateCreatingInstanceTimeoutMinutes, globalEngineDBDeleteConfigDTO.invalidateCreatingInstanceTimeoutMinutes) &&
        Objects.equals(this.invalidateFailedInstanceTimeoutMinutes, globalEngineDBDeleteConfigDTO.invalidateFailedInstanceTimeoutMinutes) &&
        Objects.equals(this.invalidateDeletingInstanceTimeoutMinutes, globalEngineDBDeleteConfigDTO.invalidateDeletingInstanceTimeoutMinutes) &&
        Objects.equals(this.invalidateStartingDatabaseTimeoutMinutes, globalEngineDBDeleteConfigDTO.invalidateStartingDatabaseTimeoutMinutes) &&
        Objects.equals(this.haInstanceCount, globalEngineDBDeleteConfigDTO.haInstanceCount) &&
        Objects.equals(this.config, globalEngineDBDeleteConfigDTO.config);
  }

  @Override
  public int hashCode() {
    return Objects.hash(deleteAfterMins, skipDBs, invalidateCreatingDatabaseTimeoutMinutes, invalidateCreatingCloneTimeoutMinutes, invalidateCreationFailedDatabaseTimeoutMinutes, invalidateSampleDatasetLoadingPerMbTimeoutMinutes, invalidateSwitchingServiceTimeoutMinutes, invalidateCreatingInstanceTimeoutMinutes, invalidateFailedInstanceTimeoutMinutes, invalidateDeletingInstanceTimeoutMinutes, invalidateStartingDatabaseTimeoutMinutes, haInstanceCount, config);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GlobalEngineDBDeleteConfigDTO {\n");
    sb.append("    deleteAfterMins: ").append(toIndentedString(deleteAfterMins)).append("\n");
    sb.append("    skipDBs: ").append(toIndentedString(skipDBs)).append("\n");
    sb.append("    invalidateCreatingDatabaseTimeoutMinutes: ").append(toIndentedString(invalidateCreatingDatabaseTimeoutMinutes)).append("\n");
    sb.append("    invalidateCreatingCloneTimeoutMinutes: ").append(toIndentedString(invalidateCreatingCloneTimeoutMinutes)).append("\n");
    sb.append("    invalidateCreationFailedDatabaseTimeoutMinutes: ").append(toIndentedString(invalidateCreationFailedDatabaseTimeoutMinutes)).append("\n");
    sb.append("    invalidateSampleDatasetLoadingPerMbTimeoutMinutes: ").append(toIndentedString(invalidateSampleDatasetLoadingPerMbTimeoutMinutes)).append("\n");
    sb.append("    invalidateSwitchingServiceTimeoutMinutes: ").append(toIndentedString(invalidateSwitchingServiceTimeoutMinutes)).append("\n");
    sb.append("    invalidateCreatingInstanceTimeoutMinutes: ").append(toIndentedString(invalidateCreatingInstanceTimeoutMinutes)).append("\n");
    sb.append("    invalidateFailedInstanceTimeoutMinutes: ").append(toIndentedString(invalidateFailedInstanceTimeoutMinutes)).append("\n");
    sb.append("    invalidateDeletingInstanceTimeoutMinutes: ").append(toIndentedString(invalidateDeletingInstanceTimeoutMinutes)).append("\n");
    sb.append("    invalidateStartingDatabaseTimeoutMinutes: ").append(toIndentedString(invalidateStartingDatabaseTimeoutMinutes)).append("\n");
    sb.append("    haInstanceCount: ").append(toIndentedString(haInstanceCount)).append("\n");
    sb.append("    config: ").append(toIndentedString(config)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

