/*
 * Tessell Database System REST Web Services' API Documentation
 * Tessell Database System REST Web Services' Api Documentation
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.tessell.database.system.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.tessell.database.system.client.model.DatabaseEngineType;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

import lombok.*;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
/**
 * CreateSampleDatasetPayload
 */
@JsonPropertyOrder({
  CreateSampleDatasetPayload.JSON_PROPERTY_NAME,
  CreateSampleDatasetPayload.JSON_PROPERTY_DESCRIPTION,
  CreateSampleDatasetPayload.JSON_PROPERTY_LINK,
  CreateSampleDatasetPayload.JSON_PROPERTY_TOTAL_SIZE,
  CreateSampleDatasetPayload.JSON_PROPERTY_ENGINE,
  CreateSampleDatasetPayload.JSON_PROPERTY_SOFTWARE_IMAGES,
  CreateSampleDatasetPayload.JSON_PROPERTY_CLOUD_LOCATION,
  CreateSampleDatasetPayload.JSON_PROPERTY_DUMP_PATH,
  CreateSampleDatasetPayload.JSON_PROPERTY_SCRIPT_PATH
})
@JsonTypeName("CreateSampleDatasetPayload")

@AllArgsConstructor
@NoArgsConstructor
@Getter
@Setter
@lombok.experimental.SuperBuilder
@javax.annotation.Generated(value = "com.tessell.codegen.TessellJavaGenerator", date = "2024-05-01T22:16:40.788615+05:30[Asia/Kolkata]")
@JsonIgnoreProperties(ignoreUnknown = true)
public class CreateSampleDatasetPayload {
  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  private String description;

  public static final String JSON_PROPERTY_LINK = "link";
  private String link;

  public static final String JSON_PROPERTY_TOTAL_SIZE = "totalSize";
  private Long totalSize;

  public static final String JSON_PROPERTY_ENGINE = "engine";
  private DatabaseEngineType engine;

  public static final String JSON_PROPERTY_SOFTWARE_IMAGES = "softwareImages";
  private List<String> softwareImages = new ArrayList<>();

  public static final String JSON_PROPERTY_CLOUD_LOCATION = "cloudLocation";
  private String cloudLocation;

  public static final String JSON_PROPERTY_DUMP_PATH = "dumpPath";
  private String dumpPath;

  public static final String JSON_PROPERTY_SCRIPT_PATH = "scriptPath";
  private String scriptPath;


  public CreateSampleDatasetPayload name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Name of the dataset
   * @return name
  **/
  @ApiModelProperty(required = true, value = "Name of the dataset")
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setName(String name) {
    this.name = name;
  }


  public CreateSampleDatasetPayload description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * Short description of dataset
   * @return description
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Short description of dataset")
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDescription() {
    return description;
  }


  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDescription(String description) {
    this.description = description;
  }


  public CreateSampleDatasetPayload link(String link) {
    
    this.link = link;
    return this;
  }

   /**
   * Link to Tessell support page which describes the dataset
   * @return link
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Link to Tessell support page which describes the dataset")
  @JsonProperty(JSON_PROPERTY_LINK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getLink() {
    return link;
  }


  @JsonProperty(JSON_PROPERTY_LINK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLink(String link) {
    this.link = link;
  }


  public CreateSampleDatasetPayload totalSize(Long totalSize) {
    
    this.totalSize = totalSize;
    return this;
  }

   /**
   * Total size of dataset in bytes
   * @return totalSize
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Total size of dataset in bytes")
  @JsonProperty(JSON_PROPERTY_TOTAL_SIZE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getTotalSize() {
    return totalSize;
  }


  @JsonProperty(JSON_PROPERTY_TOTAL_SIZE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTotalSize(Long totalSize) {
    this.totalSize = totalSize;
  }


  public CreateSampleDatasetPayload engine(DatabaseEngineType engine) {
    
    this.engine = engine;
    return this;
  }

   /**
   * Get engine
   * @return engine
  **/
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_ENGINE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public DatabaseEngineType getEngine() {
    return engine;
  }


  @JsonProperty(JSON_PROPERTY_ENGINE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setEngine(DatabaseEngineType engine) {
    this.engine = engine;
  }


  public CreateSampleDatasetPayload softwareImages(List<String> softwareImages) {
    
    this.softwareImages = softwareImages;
    return this;
  }

  public CreateSampleDatasetPayload addSoftwareImagesItem(String softwareImagesItem) {
    this.softwareImages.add(softwareImagesItem);
    return this;
  }

   /**
   * Get softwareImages
   * @return softwareImages
  **/
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_SOFTWARE_IMAGES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<String> getSoftwareImages() {
    return softwareImages;
  }


  @JsonProperty(JSON_PROPERTY_SOFTWARE_IMAGES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSoftwareImages(List<String> softwareImages) {
    this.softwareImages = softwareImages;
  }


  public CreateSampleDatasetPayload cloudLocation(String cloudLocation) {
    
    this.cloudLocation = cloudLocation;
    return this;
  }

   /**
   * The AWS S3 URL where the sample dataset is stored.
   * @return cloudLocation
  **/
  @ApiModelProperty(required = true, value = "The AWS S3 URL where the sample dataset is stored.")
  @JsonProperty(JSON_PROPERTY_CLOUD_LOCATION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getCloudLocation() {
    return cloudLocation;
  }


  @JsonProperty(JSON_PROPERTY_CLOUD_LOCATION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCloudLocation(String cloudLocation) {
    this.cloudLocation = cloudLocation;
  }


  public CreateSampleDatasetPayload dumpPath(String dumpPath) {
    
    this.dumpPath = dumpPath;
    return this;
  }

   /**
   * Path of dataset dump with respect to AWS S3 tar.
   * @return dumpPath
  **/
  @ApiModelProperty(required = true, value = "Path of dataset dump with respect to AWS S3 tar.")
  @JsonProperty(JSON_PROPERTY_DUMP_PATH)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getDumpPath() {
    return dumpPath;
  }


  @JsonProperty(JSON_PROPERTY_DUMP_PATH)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDumpPath(String dumpPath) {
    this.dumpPath = dumpPath;
  }


  public CreateSampleDatasetPayload scriptPath(String scriptPath) {
    
    this.scriptPath = scriptPath;
    return this;
  }

   /**
   * Path of sanitization script with respect to AWS S3 tar.
   * @return scriptPath
  **/
  @ApiModelProperty(required = true, value = "Path of sanitization script with respect to AWS S3 tar.")
  @JsonProperty(JSON_PROPERTY_SCRIPT_PATH)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getScriptPath() {
    return scriptPath;
  }


  @JsonProperty(JSON_PROPERTY_SCRIPT_PATH)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setScriptPath(String scriptPath) {
    this.scriptPath = scriptPath;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateSampleDatasetPayload createSampleDatasetPayload = (CreateSampleDatasetPayload) o;
    return Objects.equals(this.name, createSampleDatasetPayload.name) &&
        Objects.equals(this.description, createSampleDatasetPayload.description) &&
        Objects.equals(this.link, createSampleDatasetPayload.link) &&
        Objects.equals(this.totalSize, createSampleDatasetPayload.totalSize) &&
        Objects.equals(this.engine, createSampleDatasetPayload.engine) &&
        Objects.equals(this.softwareImages, createSampleDatasetPayload.softwareImages) &&
        Objects.equals(this.cloudLocation, createSampleDatasetPayload.cloudLocation) &&
        Objects.equals(this.dumpPath, createSampleDatasetPayload.dumpPath) &&
        Objects.equals(this.scriptPath, createSampleDatasetPayload.scriptPath);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, description, link, totalSize, engine, softwareImages, cloudLocation, dumpPath, scriptPath);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateSampleDatasetPayload {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    link: ").append(toIndentedString(link)).append("\n");
    sb.append("    totalSize: ").append(toIndentedString(totalSize)).append("\n");
    sb.append("    engine: ").append(toIndentedString(engine)).append("\n");
    sb.append("    softwareImages: ").append(toIndentedString(softwareImages)).append("\n");
    sb.append("    cloudLocation: ").append(toIndentedString(cloudLocation)).append("\n");
    sb.append("    dumpPath: ").append(toIndentedString(dumpPath)).append("\n");
    sb.append("    scriptPath: ").append(toIndentedString(scriptPath)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

