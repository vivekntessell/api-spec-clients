/*
 * Tessell Database System REST Web Services' API Documentation
 * Tessell Database System REST Web Services' Api Documentation
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.tessell.database.system.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.UUID;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

import lombok.*;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
/**
 * CloneTessellServicePayloadAllOf
 */
@JsonPropertyOrder({
  CloneTessellServicePayloadAllOf.JSON_PROPERTY_SNAPSHOT_ID,
  CloneTessellServicePayloadAllOf.JSON_PROPERTY_PITR
})
@JsonTypeName("CloneTessellServicePayload_allOf")

@AllArgsConstructor
@NoArgsConstructor
@Getter
@Setter
@lombok.experimental.SuperBuilder
@javax.annotation.Generated(value = "com.tessell.codegen.TessellJavaGenerator", date = "2024-05-01T22:16:40.788615+05:30[Asia/Kolkata]")
@JsonIgnoreProperties(ignoreUnknown = true)
public class CloneTessellServicePayloadAllOf {
  public static final String JSON_PROPERTY_SNAPSHOT_ID = "snapshotId";
  private UUID snapshotId;

  public static final String JSON_PROPERTY_PITR = "pitr";
  private String pitr;


  public CloneTessellServicePayloadAllOf snapshotId(UUID snapshotId) {
    
    this.snapshotId = snapshotId;
    return this;
  }

   /**
   * Tessell service snapshot Id, using which the clone is to be created
   * @return snapshotId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Tessell service snapshot Id, using which the clone is to be created")
  @JsonProperty(JSON_PROPERTY_SNAPSHOT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public UUID getSnapshotId() {
    return snapshotId;
  }


  @JsonProperty(JSON_PROPERTY_SNAPSHOT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSnapshotId(UUID snapshotId) {
    this.snapshotId = snapshotId;
  }


  public CloneTessellServicePayloadAllOf pitr(String pitr) {
    
    this.pitr = pitr;
    return this;
  }

   /**
   * PITR Timestamp, using which the clone is to be created
   * @return pitr
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "PITR Timestamp, using which the clone is to be created")
  @JsonProperty(JSON_PROPERTY_PITR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPitr() {
    return pitr;
  }


  @JsonProperty(JSON_PROPERTY_PITR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPitr(String pitr) {
    this.pitr = pitr;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CloneTessellServicePayloadAllOf cloneTessellServicePayloadAllOf = (CloneTessellServicePayloadAllOf) o;
    return Objects.equals(this.snapshotId, cloneTessellServicePayloadAllOf.snapshotId) &&
        Objects.equals(this.pitr, cloneTessellServicePayloadAllOf.pitr);
  }

  @Override
  public int hashCode() {
    return Objects.hash(snapshotId, pitr);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CloneTessellServicePayloadAllOf {\n");
    sb.append("    snapshotId: ").append(toIndentedString(snapshotId)).append("\n");
    sb.append("    pitr: ").append(toIndentedString(pitr)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

