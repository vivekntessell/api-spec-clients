/*
 * Tessell Database System REST Web Services' API Documentation
 * Tessell Database System REST Web Services' Api Documentation
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.tessell.database.system.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

import lombok.*;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
/**
 * DB Service connectivity details
 */
@ApiModel(description = "DB Service connectivity details")
@JsonPropertyOrder({
  TessellServiceConnectivityInfoPayload.JSON_PROPERTY_ENABLE_S_S_L,
  TessellServiceConnectivityInfoPayload.JSON_PROPERTY_DNS_PREFIX,
  TessellServiceConnectivityInfoPayload.JSON_PROPERTY_SERVICE_PORT,
  TessellServiceConnectivityInfoPayload.JSON_PROPERTY_ENABLE_PUBLIC_ACCESS,
  TessellServiceConnectivityInfoPayload.JSON_PROPERTY_ALLOWED_IP_ADDRESSES
})
@JsonTypeName("TessellServiceConnectivityInfoPayload")

@AllArgsConstructor
@NoArgsConstructor
@Getter
@Setter
@lombok.experimental.SuperBuilder
@javax.annotation.Generated(value = "com.tessell.codegen.TessellJavaGenerator", date = "2024-05-01T22:16:40.788615+05:30[Asia/Kolkata]")
@JsonIgnoreProperties(ignoreUnknown = true)
public class TessellServiceConnectivityInfoPayload {
  public static final String JSON_PROPERTY_ENABLE_S_S_L = "enableSSL";
  private Boolean enableSSL = false;

  public static final String JSON_PROPERTY_DNS_PREFIX = "dnsPrefix";
  private String dnsPrefix;

  public static final String JSON_PROPERTY_SERVICE_PORT = "servicePort";
  private Integer servicePort;

  public static final String JSON_PROPERTY_ENABLE_PUBLIC_ACCESS = "enablePublicAccess";
  private Boolean enablePublicAccess = false;

  public static final String JSON_PROPERTY_ALLOWED_IP_ADDRESSES = "allowedIpAddresses";
  private List<String> allowedIpAddresses = null;


  public TessellServiceConnectivityInfoPayload enableSSL(Boolean enableSSL) {
    
    this.enableSSL = enableSSL;
    return this;
  }

   /**
   * Get enableSSL
   * @return enableSSL
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_ENABLE_S_S_L)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getEnableSSL() {
    return enableSSL;
  }


  @JsonProperty(JSON_PROPERTY_ENABLE_S_S_L)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEnableSSL(Boolean enableSSL) {
    this.enableSSL = enableSSL;
  }


  public TessellServiceConnectivityInfoPayload dnsPrefix(String dnsPrefix) {
    
    this.dnsPrefix = dnsPrefix;
    return this;
  }

   /**
   * If not specified, Tessell will use a randomly generated prefix
   * @return dnsPrefix
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "If not specified, Tessell will use a randomly generated prefix")
  @JsonProperty(JSON_PROPERTY_DNS_PREFIX)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDnsPrefix() {
    return dnsPrefix;
  }


  @JsonProperty(JSON_PROPERTY_DNS_PREFIX)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDnsPrefix(String dnsPrefix) {
    this.dnsPrefix = dnsPrefix;
  }


  public TessellServiceConnectivityInfoPayload servicePort(Integer servicePort) {
    
    this.servicePort = servicePort;
    return this;
  }

   /**
   * The connection port for the DB Service
   * minimum: 0
   * @return servicePort
  **/
  @ApiModelProperty(required = true, value = "The connection port for the DB Service")
  @JsonProperty(JSON_PROPERTY_SERVICE_PORT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getServicePort() {
    return servicePort;
  }


  @JsonProperty(JSON_PROPERTY_SERVICE_PORT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setServicePort(Integer servicePort) {
    this.servicePort = servicePort;
  }


  public TessellServiceConnectivityInfoPayload enablePublicAccess(Boolean enablePublicAccess) {
    
    this.enablePublicAccess = enablePublicAccess;
    return this;
  }

   /**
   * Specify whether to enable public access to the DB Service, default false
   * @return enablePublicAccess
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specify whether to enable public access to the DB Service, default false")
  @JsonProperty(JSON_PROPERTY_ENABLE_PUBLIC_ACCESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getEnablePublicAccess() {
    return enablePublicAccess;
  }


  @JsonProperty(JSON_PROPERTY_ENABLE_PUBLIC_ACCESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEnablePublicAccess(Boolean enablePublicAccess) {
    this.enablePublicAccess = enablePublicAccess;
  }


  public TessellServiceConnectivityInfoPayload allowedIpAddresses(List<String> allowedIpAddresses) {
    
    this.allowedIpAddresses = allowedIpAddresses;
    return this;
  }

  public TessellServiceConnectivityInfoPayload addAllowedIpAddressesItem(String allowedIpAddressesItem) {
    if (this.allowedIpAddresses == null) {
      this.allowedIpAddresses = new ArrayList<>();
    }
    this.allowedIpAddresses.add(allowedIpAddressesItem);
    return this;
  }

   /**
   * The list of allowed ipv4 addresses that can connect to the DB Service
   * @return allowedIpAddresses
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The list of allowed ipv4 addresses that can connect to the DB Service")
  @JsonProperty(JSON_PROPERTY_ALLOWED_IP_ADDRESSES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getAllowedIpAddresses() {
    return allowedIpAddresses;
  }


  @JsonProperty(JSON_PROPERTY_ALLOWED_IP_ADDRESSES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAllowedIpAddresses(List<String> allowedIpAddresses) {
    this.allowedIpAddresses = allowedIpAddresses;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TessellServiceConnectivityInfoPayload tessellServiceConnectivityInfoPayload = (TessellServiceConnectivityInfoPayload) o;
    return Objects.equals(this.enableSSL, tessellServiceConnectivityInfoPayload.enableSSL) &&
        Objects.equals(this.dnsPrefix, tessellServiceConnectivityInfoPayload.dnsPrefix) &&
        Objects.equals(this.servicePort, tessellServiceConnectivityInfoPayload.servicePort) &&
        Objects.equals(this.enablePublicAccess, tessellServiceConnectivityInfoPayload.enablePublicAccess) &&
        Objects.equals(this.allowedIpAddresses, tessellServiceConnectivityInfoPayload.allowedIpAddresses);
  }

  @Override
  public int hashCode() {
    return Objects.hash(enableSSL, dnsPrefix, servicePort, enablePublicAccess, allowedIpAddresses);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TessellServiceConnectivityInfoPayload {\n");
    sb.append("    enableSSL: ").append(toIndentedString(enableSSL)).append("\n");
    sb.append("    dnsPrefix: ").append(toIndentedString(dnsPrefix)).append("\n");
    sb.append("    servicePort: ").append(toIndentedString(servicePort)).append("\n");
    sb.append("    enablePublicAccess: ").append(toIndentedString(enablePublicAccess)).append("\n");
    sb.append("    allowedIpAddresses: ").append(toIndentedString(allowedIpAddresses)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

