/*
 * Tessell Database System REST Web Services' API Documentation
 * Tessell Database System REST Web Services' Api Documentation
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.tessell.database.system.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

import lombok.*;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
/**
 * PostgresqlConnectionPoolInfoConnectionDetails
 */
@JsonPropertyOrder({
  PostgresqlConnectionPoolInfoConnectionDetails.JSON_PROPERTY_TYPE,
  PostgresqlConnectionPoolInfoConnectionDetails.JSON_PROPERTY_CONNECT_DESCRIPTOR,
  PostgresqlConnectionPoolInfoConnectionDetails.JSON_PROPERTY_ENDPOINT,
  PostgresqlConnectionPoolInfoConnectionDetails.JSON_PROPERTY_DB_USERNAME,
  PostgresqlConnectionPoolInfoConnectionDetails.JSON_PROPERTY_PORT
})
@JsonTypeName("PostgresqlConnectionPoolInfo_connectionDetails")

@AllArgsConstructor
@NoArgsConstructor
@Getter
@Setter
@lombok.experimental.SuperBuilder
@javax.annotation.Generated(value = "com.tessell.codegen.TessellJavaGenerator", date = "2024-05-01T22:16:40.788615+05:30[Asia/Kolkata]")
@JsonIgnoreProperties(ignoreUnknown = true)
public class PostgresqlConnectionPoolInfoConnectionDetails {
  public static final String JSON_PROPERTY_TYPE = "type";
  private String type;

  public static final String JSON_PROPERTY_CONNECT_DESCRIPTOR = "connectDescriptor";
  private String connectDescriptor;

  public static final String JSON_PROPERTY_ENDPOINT = "endpoint";
  private String endpoint;

  public static final String JSON_PROPERTY_DB_USERNAME = "dbUsername";
  private String dbUsername;

  public static final String JSON_PROPERTY_PORT = "port";
  private Integer port;


  public PostgresqlConnectionPoolInfoConnectionDetails type(String type) {
    
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getType() {
    return type;
  }


  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setType(String type) {
    this.type = type;
  }


  public PostgresqlConnectionPoolInfoConnectionDetails connectDescriptor(String connectDescriptor) {
    
    this.connectDescriptor = connectDescriptor;
    return this;
  }

   /**
   * Get connectDescriptor
   * @return connectDescriptor
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_CONNECT_DESCRIPTOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getConnectDescriptor() {
    return connectDescriptor;
  }


  @JsonProperty(JSON_PROPERTY_CONNECT_DESCRIPTOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setConnectDescriptor(String connectDescriptor) {
    this.connectDescriptor = connectDescriptor;
  }


  public PostgresqlConnectionPoolInfoConnectionDetails endpoint(String endpoint) {
    
    this.endpoint = endpoint;
    return this;
  }

   /**
   * Get endpoint
   * @return endpoint
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_ENDPOINT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getEndpoint() {
    return endpoint;
  }


  @JsonProperty(JSON_PROPERTY_ENDPOINT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEndpoint(String endpoint) {
    this.endpoint = endpoint;
  }


  public PostgresqlConnectionPoolInfoConnectionDetails dbUsername(String dbUsername) {
    
    this.dbUsername = dbUsername;
    return this;
  }

   /**
   * Get dbUsername
   * @return dbUsername
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_DB_USERNAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDbUsername() {
    return dbUsername;
  }


  @JsonProperty(JSON_PROPERTY_DB_USERNAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDbUsername(String dbUsername) {
    this.dbUsername = dbUsername;
  }


  public PostgresqlConnectionPoolInfoConnectionDetails port(Integer port) {
    
    this.port = port;
    return this;
  }

   /**
   * Get port
   * @return port
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_PORT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getPort() {
    return port;
  }


  @JsonProperty(JSON_PROPERTY_PORT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPort(Integer port) {
    this.port = port;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PostgresqlConnectionPoolInfoConnectionDetails postgresqlConnectionPoolInfoConnectionDetails = (PostgresqlConnectionPoolInfoConnectionDetails) o;
    return Objects.equals(this.type, postgresqlConnectionPoolInfoConnectionDetails.type) &&
        Objects.equals(this.connectDescriptor, postgresqlConnectionPoolInfoConnectionDetails.connectDescriptor) &&
        Objects.equals(this.endpoint, postgresqlConnectionPoolInfoConnectionDetails.endpoint) &&
        Objects.equals(this.dbUsername, postgresqlConnectionPoolInfoConnectionDetails.dbUsername) &&
        Objects.equals(this.port, postgresqlConnectionPoolInfoConnectionDetails.port);
  }

  @Override
  public int hashCode() {
    return Objects.hash(type, connectDescriptor, endpoint, dbUsername, port);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PostgresqlConnectionPoolInfoConnectionDetails {\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    connectDescriptor: ").append(toIndentedString(connectDescriptor)).append("\n");
    sb.append("    endpoint: ").append(toIndentedString(endpoint)).append("\n");
    sb.append("    dbUsername: ").append(toIndentedString(dbUsername)).append("\n");
    sb.append("    port: ").append(toIndentedString(port)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

