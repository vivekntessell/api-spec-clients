/*
 * Tessell Database System REST Web Services' API Documentation
 * Tessell Database System REST Web Services' Api Documentation
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.tessell.database.system.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.tessell.database.system.client.model.ConnectionPoolStatus;
import com.tessell.database.system.client.model.PostgresqlConnectionPoolInfoConnectionDetails;
import com.tessell.database.system.client.model.PostgresqlConnectionPoolMode;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.UUID;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

import lombok.*;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
/**
 * PostgresqlConnectionPoolInfo
 */
@JsonPropertyOrder({
  PostgresqlConnectionPoolInfo.JSON_PROPERTY_ID,
  PostgresqlConnectionPoolInfo.JSON_PROPERTY_CONN_POOL_NAME,
  PostgresqlConnectionPoolInfo.JSON_PROPERTY_CONN_POOL_SIZE,
  PostgresqlConnectionPoolInfo.JSON_PROPERTY_CONN_POOL_MODE,
  PostgresqlConnectionPoolInfo.JSON_PROPERTY_DB_NAME,
  PostgresqlConnectionPoolInfo.JSON_PROPERTY_DB_USERNAME,
  PostgresqlConnectionPoolInfo.JSON_PROPERTY_SERVICE_NAME,
  PostgresqlConnectionPoolInfo.JSON_PROPERTY_STATUS,
  PostgresqlConnectionPoolInfo.JSON_PROPERTY_CONNECTION_DETAILS
})
@JsonTypeName("PostgresqlConnectionPoolInfo")

@AllArgsConstructor
@NoArgsConstructor
@Getter
@Setter
@lombok.experimental.SuperBuilder
@javax.annotation.Generated(value = "com.tessell.codegen.TessellJavaGenerator", date = "2024-05-01T22:16:40.788615+05:30[Asia/Kolkata]")
@JsonIgnoreProperties(ignoreUnknown = true)
public class PostgresqlConnectionPoolInfo {
  public static final String JSON_PROPERTY_ID = "id";
  private UUID id;

  public static final String JSON_PROPERTY_CONN_POOL_NAME = "connPoolName";
  private String connPoolName;

  public static final String JSON_PROPERTY_CONN_POOL_SIZE = "connPoolSize";
  private Integer connPoolSize;

  public static final String JSON_PROPERTY_CONN_POOL_MODE = "connPoolMode";
  private PostgresqlConnectionPoolMode connPoolMode;

  public static final String JSON_PROPERTY_DB_NAME = "dbName";
  private String dbName;

  public static final String JSON_PROPERTY_DB_USERNAME = "dbUsername";
  private String dbUsername;

  public static final String JSON_PROPERTY_SERVICE_NAME = "serviceName";
  private String serviceName;

  public static final String JSON_PROPERTY_STATUS = "status";
  private ConnectionPoolStatus status;

  public static final String JSON_PROPERTY_CONNECTION_DETAILS = "connectionDetails";
  private PostgresqlConnectionPoolInfoConnectionDetails connectionDetails;


  public PostgresqlConnectionPoolInfo id(UUID id) {
    
    this.id = id;
    return this;
  }

   /**
   * Unique id for the connection pool
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Unique id for the connection pool")
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public UUID getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(UUID id) {
    this.id = id;
  }


  public PostgresqlConnectionPoolInfo connPoolName(String connPoolName) {
    
    this.connPoolName = connPoolName;
    return this;
  }

   /**
   * Name of the connection pool
   * @return connPoolName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Name of the connection pool")
  @JsonProperty(JSON_PROPERTY_CONN_POOL_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getConnPoolName() {
    return connPoolName;
  }


  @JsonProperty(JSON_PROPERTY_CONN_POOL_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setConnPoolName(String connPoolName) {
    this.connPoolName = connPoolName;
  }


  public PostgresqlConnectionPoolInfo connPoolSize(Integer connPoolSize) {
    
    this.connPoolSize = connPoolSize;
    return this;
  }

   /**
   * Size of the connection pool
   * @return connPoolSize
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Size of the connection pool")
  @JsonProperty(JSON_PROPERTY_CONN_POOL_SIZE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getConnPoolSize() {
    return connPoolSize;
  }


  @JsonProperty(JSON_PROPERTY_CONN_POOL_SIZE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setConnPoolSize(Integer connPoolSize) {
    this.connPoolSize = connPoolSize;
  }


  public PostgresqlConnectionPoolInfo connPoolMode(PostgresqlConnectionPoolMode connPoolMode) {
    
    this.connPoolMode = connPoolMode;
    return this;
  }

   /**
   * Get connPoolMode
   * @return connPoolMode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_CONN_POOL_MODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public PostgresqlConnectionPoolMode getConnPoolMode() {
    return connPoolMode;
  }


  @JsonProperty(JSON_PROPERTY_CONN_POOL_MODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setConnPoolMode(PostgresqlConnectionPoolMode connPoolMode) {
    this.connPoolMode = connPoolMode;
  }


  public PostgresqlConnectionPoolInfo dbName(String dbName) {
    
    this.dbName = dbName;
    return this;
  }

   /**
   * Database name on which this connection pool exist
   * @return dbName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Database name on which this connection pool exist")
  @JsonProperty(JSON_PROPERTY_DB_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDbName() {
    return dbName;
  }


  @JsonProperty(JSON_PROPERTY_DB_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDbName(String dbName) {
    this.dbName = dbName;
  }


  public PostgresqlConnectionPoolInfo dbUsername(String dbUsername) {
    
    this.dbUsername = dbUsername;
    return this;
  }

   /**
   * Username for the connection pool
   * @return dbUsername
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Username for the connection pool")
  @JsonProperty(JSON_PROPERTY_DB_USERNAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDbUsername() {
    return dbUsername;
  }


  @JsonProperty(JSON_PROPERTY_DB_USERNAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDbUsername(String dbUsername) {
    this.dbUsername = dbUsername;
  }


  public PostgresqlConnectionPoolInfo serviceName(String serviceName) {
    
    this.serviceName = serviceName;
    return this;
  }

   /**
   * Get serviceName
   * @return serviceName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_SERVICE_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getServiceName() {
    return serviceName;
  }


  @JsonProperty(JSON_PROPERTY_SERVICE_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setServiceName(String serviceName) {
    this.serviceName = serviceName;
  }


  public PostgresqlConnectionPoolInfo status(ConnectionPoolStatus status) {
    
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ConnectionPoolStatus getStatus() {
    return status;
  }


  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStatus(ConnectionPoolStatus status) {
    this.status = status;
  }


  public PostgresqlConnectionPoolInfo connectionDetails(PostgresqlConnectionPoolInfoConnectionDetails connectionDetails) {
    
    this.connectionDetails = connectionDetails;
    return this;
  }

   /**
   * Get connectionDetails
   * @return connectionDetails
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_CONNECTION_DETAILS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public PostgresqlConnectionPoolInfoConnectionDetails getConnectionDetails() {
    return connectionDetails;
  }


  @JsonProperty(JSON_PROPERTY_CONNECTION_DETAILS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setConnectionDetails(PostgresqlConnectionPoolInfoConnectionDetails connectionDetails) {
    this.connectionDetails = connectionDetails;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PostgresqlConnectionPoolInfo postgresqlConnectionPoolInfo = (PostgresqlConnectionPoolInfo) o;
    return Objects.equals(this.id, postgresqlConnectionPoolInfo.id) &&
        Objects.equals(this.connPoolName, postgresqlConnectionPoolInfo.connPoolName) &&
        Objects.equals(this.connPoolSize, postgresqlConnectionPoolInfo.connPoolSize) &&
        Objects.equals(this.connPoolMode, postgresqlConnectionPoolInfo.connPoolMode) &&
        Objects.equals(this.dbName, postgresqlConnectionPoolInfo.dbName) &&
        Objects.equals(this.dbUsername, postgresqlConnectionPoolInfo.dbUsername) &&
        Objects.equals(this.serviceName, postgresqlConnectionPoolInfo.serviceName) &&
        Objects.equals(this.status, postgresqlConnectionPoolInfo.status) &&
        Objects.equals(this.connectionDetails, postgresqlConnectionPoolInfo.connectionDetails);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, connPoolName, connPoolSize, connPoolMode, dbName, dbUsername, serviceName, status, connectionDetails);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PostgresqlConnectionPoolInfo {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    connPoolName: ").append(toIndentedString(connPoolName)).append("\n");
    sb.append("    connPoolSize: ").append(toIndentedString(connPoolSize)).append("\n");
    sb.append("    connPoolMode: ").append(toIndentedString(connPoolMode)).append("\n");
    sb.append("    dbName: ").append(toIndentedString(dbName)).append("\n");
    sb.append("    dbUsername: ").append(toIndentedString(dbUsername)).append("\n");
    sb.append("    serviceName: ").append(toIndentedString(serviceName)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    connectionDetails: ").append(toIndentedString(connectionDetails)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

