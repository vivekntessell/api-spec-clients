/*
 * Tessell Database System REST Web Services' API Documentation
 * Tessell Database System REST Web Services' Api Documentation
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.tessell.database.system.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.tessell.database.system.client.model.PatchSchedule;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import java.util.UUID;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

import lombok.*;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
/**
 * PatchDbServicePayload
 */
@JsonPropertyOrder({
  PatchDbServicePayload.JSON_PROPERTY_SOFTWARE_IMAGE,
  PatchDbServicePayload.JSON_PROPERTY_SOFTWARE_IMAGE_VERSION,
  PatchDbServicePayload.JSON_PROPERTY_INSTANCE_IDS,
  PatchDbServicePayload.JSON_PROPERTY_PATCH_SCHEDULE
})
@JsonTypeName("PatchDbServicePayload")

@AllArgsConstructor
@NoArgsConstructor
@Getter
@Setter
@lombok.experimental.SuperBuilder
@javax.annotation.Generated(value = "com.tessell.codegen.TessellJavaGenerator", date = "2024-05-01T22:16:40.788615+05:30[Asia/Kolkata]")
@JsonIgnoreProperties(ignoreUnknown = true)
public class PatchDbServicePayload {
  public static final String JSON_PROPERTY_SOFTWARE_IMAGE = "softwareImage";
  private String softwareImage;

  public static final String JSON_PROPERTY_SOFTWARE_IMAGE_VERSION = "softwareImageVersion";
  private String softwareImageVersion;

  public static final String JSON_PROPERTY_INSTANCE_IDS = "instanceIds";
  private List<UUID> instanceIds = new ArrayList<>();

  public static final String JSON_PROPERTY_PATCH_SCHEDULE = "patchSchedule";
  private PatchSchedule patchSchedule;


  public PatchDbServicePayload softwareImage(String softwareImage) {
    
    this.softwareImage = softwareImage;
    return this;
  }

   /**
   * The name of the new software image the DB Service needs to be patched to
   * @return softwareImage
  **/
  @ApiModelProperty(required = true, value = "The name of the new software image the DB Service needs to be patched to")
  @JsonProperty(JSON_PROPERTY_SOFTWARE_IMAGE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getSoftwareImage() {
    return softwareImage;
  }


  @JsonProperty(JSON_PROPERTY_SOFTWARE_IMAGE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSoftwareImage(String softwareImage) {
    this.softwareImage = softwareImage;
  }


  public PatchDbServicePayload softwareImageVersion(String softwareImageVersion) {
    
    this.softwareImageVersion = softwareImageVersion;
    return this;
  }

   /**
   * The name of the new software image version the DB Service needs to be patched to
   * @return softwareImageVersion
  **/
  @ApiModelProperty(required = true, value = "The name of the new software image version the DB Service needs to be patched to")
  @JsonProperty(JSON_PROPERTY_SOFTWARE_IMAGE_VERSION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getSoftwareImageVersion() {
    return softwareImageVersion;
  }


  @JsonProperty(JSON_PROPERTY_SOFTWARE_IMAGE_VERSION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSoftwareImageVersion(String softwareImageVersion) {
    this.softwareImageVersion = softwareImageVersion;
  }


  public PatchDbServicePayload instanceIds(List<UUID> instanceIds) {
    
    this.instanceIds = instanceIds;
    return this;
  }

  public PatchDbServicePayload addInstanceIdsItem(UUID instanceIdsItem) {
    this.instanceIds.add(instanceIdsItem);
    return this;
  }

   /**
   * List of the DB Service Instance IDs that needs to be patched
   * @return instanceIds
  **/
  @ApiModelProperty(required = true, value = "List of the DB Service Instance IDs that needs to be patched")
  @JsonProperty(JSON_PROPERTY_INSTANCE_IDS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<UUID> getInstanceIds() {
    return instanceIds;
  }


  @JsonProperty(JSON_PROPERTY_INSTANCE_IDS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setInstanceIds(List<UUID> instanceIds) {
    this.instanceIds = instanceIds;
  }


  public PatchDbServicePayload patchSchedule(PatchSchedule patchSchedule) {
    
    this.patchSchedule = patchSchedule;
    return this;
  }

   /**
   * Get patchSchedule
   * @return patchSchedule
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_PATCH_SCHEDULE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public PatchSchedule getPatchSchedule() {
    return patchSchedule;
  }


  @JsonProperty(JSON_PROPERTY_PATCH_SCHEDULE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPatchSchedule(PatchSchedule patchSchedule) {
    this.patchSchedule = patchSchedule;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PatchDbServicePayload patchDbServicePayload = (PatchDbServicePayload) o;
    return Objects.equals(this.softwareImage, patchDbServicePayload.softwareImage) &&
        Objects.equals(this.softwareImageVersion, patchDbServicePayload.softwareImageVersion) &&
        Objects.equals(this.instanceIds, patchDbServicePayload.instanceIds) &&
        Objects.equals(this.patchSchedule, patchDbServicePayload.patchSchedule);
  }

  @Override
  public int hashCode() {
    return Objects.hash(softwareImage, softwareImageVersion, instanceIds, patchSchedule);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PatchDbServicePayload {\n");
    sb.append("    softwareImage: ").append(toIndentedString(softwareImage)).append("\n");
    sb.append("    softwareImageVersion: ").append(toIndentedString(softwareImageVersion)).append("\n");
    sb.append("    instanceIds: ").append(toIndentedString(instanceIds)).append("\n");
    sb.append("    patchSchedule: ").append(toIndentedString(patchSchedule)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

