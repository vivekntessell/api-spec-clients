/*
 * Tessell Database System REST Web Services' API Documentation
 * Tessell Database System REST Web Services' Api Documentation
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.tessell.database.system.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.tessell.database.system.client.model.SampleDatasetLoadingStatus;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.UUID;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

import lombok.*;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
/**
 * Payload for updating the ServiceSampleDatasetLoadingInfo for a service.
 */
@ApiModel(description = "Payload for updating the ServiceSampleDatasetLoadingInfo for a service.")
@JsonPropertyOrder({
  UpdateServiceSampleDatasetInfoPayload.JSON_PROPERTY_DATASET_ID,
  UpdateServiceSampleDatasetInfoPayload.JSON_PROPERTY_DATASET_SIZE,
  UpdateServiceSampleDatasetInfoPayload.JSON_PROPERTY_STATUS,
  UpdateServiceSampleDatasetInfoPayload.JSON_PROPERTY_DATABASE_ID
})
@JsonTypeName("UpdateServiceSampleDatasetInfoPayload")

@AllArgsConstructor
@NoArgsConstructor
@Getter
@Setter
@lombok.experimental.SuperBuilder
@javax.annotation.Generated(value = "com.tessell.codegen.TessellJavaGenerator", date = "2024-05-01T22:16:40.788615+05:30[Asia/Kolkata]")
@JsonIgnoreProperties(ignoreUnknown = true)
public class UpdateServiceSampleDatasetInfoPayload {
  public static final String JSON_PROPERTY_DATASET_ID = "datasetId";
  private UUID datasetId;

  public static final String JSON_PROPERTY_DATASET_SIZE = "datasetSize";
  private Long datasetSize;

  public static final String JSON_PROPERTY_STATUS = "status";
  private SampleDatasetLoadingStatus status;

  public static final String JSON_PROPERTY_DATABASE_ID = "databaseId";
  private UUID databaseId;


  public UpdateServiceSampleDatasetInfoPayload datasetId(UUID datasetId) {
    
    this.datasetId = datasetId;
    return this;
  }

   /**
   * Get datasetId
   * @return datasetId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_DATASET_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public UUID getDatasetId() {
    return datasetId;
  }


  @JsonProperty(JSON_PROPERTY_DATASET_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDatasetId(UUID datasetId) {
    this.datasetId = datasetId;
  }


  public UpdateServiceSampleDatasetInfoPayload datasetSize(Long datasetSize) {
    
    this.datasetSize = datasetSize;
    return this;
  }

   /**
   * Get datasetSize
   * @return datasetSize
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_DATASET_SIZE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getDatasetSize() {
    return datasetSize;
  }


  @JsonProperty(JSON_PROPERTY_DATASET_SIZE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDatasetSize(Long datasetSize) {
    this.datasetSize = datasetSize;
  }


  public UpdateServiceSampleDatasetInfoPayload status(SampleDatasetLoadingStatus status) {
    
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public SampleDatasetLoadingStatus getStatus() {
    return status;
  }


  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStatus(SampleDatasetLoadingStatus status) {
    this.status = status;
  }


  public UpdateServiceSampleDatasetInfoPayload databaseId(UUID databaseId) {
    
    this.databaseId = databaseId;
    return this;
  }

   /**
   * Get databaseId
   * @return databaseId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_DATABASE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public UUID getDatabaseId() {
    return databaseId;
  }


  @JsonProperty(JSON_PROPERTY_DATABASE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDatabaseId(UUID databaseId) {
    this.databaseId = databaseId;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UpdateServiceSampleDatasetInfoPayload updateServiceSampleDatasetInfoPayload = (UpdateServiceSampleDatasetInfoPayload) o;
    return Objects.equals(this.datasetId, updateServiceSampleDatasetInfoPayload.datasetId) &&
        Objects.equals(this.datasetSize, updateServiceSampleDatasetInfoPayload.datasetSize) &&
        Objects.equals(this.status, updateServiceSampleDatasetInfoPayload.status) &&
        Objects.equals(this.databaseId, updateServiceSampleDatasetInfoPayload.databaseId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(datasetId, datasetSize, status, databaseId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UpdateServiceSampleDatasetInfoPayload {\n");
    sb.append("    datasetId: ").append(toIndentedString(datasetId)).append("\n");
    sb.append("    datasetSize: ").append(toIndentedString(datasetSize)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    databaseId: ").append(toIndentedString(databaseId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

