/*
 * Tessell Availability Machine REST Web Services' API Documentation
 * Tessell Availability Machine REST Web Services' Api Documentation
 *
 * The version of the OpenAPI document: 1.0
 * Contact: sagar.sontakke@tessell.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.tessell.dmm.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.tessell.dmm.client.model.DataContentType;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.time.OffsetDateTime;
import java.util.Date;
import java.util.UUID;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

import lombok.*;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
/**
 * DB Service&#39;s data restore information
 */
@ApiModel(description = "DB Service's data restore information")
@JsonPropertyOrder({
  ServiceRestoreInfo.JSON_PROPERTY_TYPE,
  ServiceRestoreInfo.JSON_PROPERTY_CONTENT_TYPE,
  ServiceRestoreInfo.JSON_PROPERTY_BACKUP_ID,
  ServiceRestoreInfo.JSON_PROPERTY_PITR_TIME,
  ServiceRestoreInfo.JSON_PROPERTY_MAXIMUM_RECOVERABILITY,
  ServiceRestoreInfo.JSON_PROPERTY_RESTORED_AT
})
@JsonTypeName("ServiceRestoreInfo")
@lombok.Builder
@lombok.NoArgsConstructor
@lombok.AllArgsConstructor
@javax.annotation.Generated(value = "com.tessell.codegen.TessellJavaGenerator", date = "2024-05-02T15:56:39.699111+05:30[Asia/Kolkata]")
@JsonIgnoreProperties(ignoreUnknown = true)
public class ServiceRestoreInfo {
  /**
   * Gets or Sets type
   */
  public enum TypeEnum {
    RESTORE("restore"),
    
    CLONE("clone");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static TypeEnum fromValue(String value) {
      for (TypeEnum b : TypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_TYPE = "type";
  private TypeEnum type;

  public static final String JSON_PROPERTY_CONTENT_TYPE = "contentType";
  private DataContentType contentType;

  public static final String JSON_PROPERTY_BACKUP_ID = "backupId";
  private UUID backupId;

  public static final String JSON_PROPERTY_PITR_TIME = "pitrTime";
  private String pitrTime;

  public static final String JSON_PROPERTY_MAXIMUM_RECOVERABILITY = "maximumRecoverability";
  private Boolean maximumRecoverability = false;

  public static final String JSON_PROPERTY_RESTORED_AT = "restoredAt";
  private Date restoredAt;


  public ServiceRestoreInfo type(TypeEnum type) {
    
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public TypeEnum getType() {
    return type;
  }


  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setType(TypeEnum type) {
    this.type = type;
  }


  public ServiceRestoreInfo contentType(DataContentType contentType) {
    
    this.contentType = contentType;
    return this;
  }

   /**
   * Get contentType
   * @return contentType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_CONTENT_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public DataContentType getContentType() {
    return contentType;
  }


  @JsonProperty(JSON_PROPERTY_CONTENT_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setContentType(DataContentType contentType) {
    this.contentType = contentType;
  }


  public ServiceRestoreInfo backupId(UUID backupId) {
    
    this.backupId = backupId;
    return this;
  }

   /**
   * The backup Id using which this DB Service clone is created
   * @return backupId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The backup Id using which this DB Service clone is created")
  @JsonProperty(JSON_PROPERTY_BACKUP_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public UUID getBackupId() {
    return backupId;
  }


  @JsonProperty(JSON_PROPERTY_BACKUP_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBackupId(UUID backupId) {
    this.backupId = backupId;
  }


  public ServiceRestoreInfo pitrTime(String pitrTime) {
    
    this.pitrTime = pitrTime;
    return this;
  }

   /**
   * If the database was created using a Point-In-Time mechanism, it specifies the timestamp in UTC
   * @return pitrTime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "If the database was created using a Point-In-Time mechanism, it specifies the timestamp in UTC")
  @JsonProperty(JSON_PROPERTY_PITR_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPitrTime() {
    return pitrTime;
  }


  @JsonProperty(JSON_PROPERTY_PITR_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPitrTime(String pitrTime) {
    this.pitrTime = pitrTime;
  }


  public ServiceRestoreInfo maximumRecoverability(Boolean maximumRecoverability) {
    
    this.maximumRecoverability = maximumRecoverability;
    return this;
  }

   /**
   * Get maximumRecoverability
   * @return maximumRecoverability
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_MAXIMUM_RECOVERABILITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getMaximumRecoverability() {
    return maximumRecoverability;
  }


  @JsonProperty(JSON_PROPERTY_MAXIMUM_RECOVERABILITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMaximumRecoverability(Boolean maximumRecoverability) {
    this.maximumRecoverability = maximumRecoverability;
  }


  public ServiceRestoreInfo restoredAt(Date restoredAt) {
    
    this.restoredAt = restoredAt;
    return this;
  }

   /**
   * Timestamp when the DB Service was restored/cloned
   * @return restoredAt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Timestamp when the DB Service was restored/cloned")
  @JsonProperty(JSON_PROPERTY_RESTORED_AT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Date getRestoredAt() {
    return restoredAt;
  }


  @JsonProperty(JSON_PROPERTY_RESTORED_AT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRestoredAt(Date restoredAt) {
    this.restoredAt = restoredAt;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ServiceRestoreInfo serviceRestoreInfo = (ServiceRestoreInfo) o;
    return Objects.equals(this.type, serviceRestoreInfo.type) &&
        Objects.equals(this.contentType, serviceRestoreInfo.contentType) &&
        Objects.equals(this.backupId, serviceRestoreInfo.backupId) &&
        Objects.equals(this.pitrTime, serviceRestoreInfo.pitrTime) &&
        Objects.equals(this.maximumRecoverability, serviceRestoreInfo.maximumRecoverability) &&
        Objects.equals(this.restoredAt, serviceRestoreInfo.restoredAt);
  }

  @Override
  public int hashCode() {
    return Objects.hash(type, contentType, backupId, pitrTime, maximumRecoverability, restoredAt);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ServiceRestoreInfo {\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    contentType: ").append(toIndentedString(contentType)).append("\n");
    sb.append("    backupId: ").append(toIndentedString(backupId)).append("\n");
    sb.append("    pitrTime: ").append(toIndentedString(pitrTime)).append("\n");
    sb.append("    maximumRecoverability: ").append(toIndentedString(maximumRecoverability)).append("\n");
    sb.append("    restoredAt: ").append(toIndentedString(restoredAt)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

