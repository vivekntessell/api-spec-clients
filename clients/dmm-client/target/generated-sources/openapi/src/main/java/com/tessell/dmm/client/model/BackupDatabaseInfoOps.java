/*
 * Tessell Availability Machine REST Web Services' API Documentation
 * Tessell Availability Machine REST Web Services' Api Documentation
 *
 * The version of the OpenAPI document: 1.0
 * Contact: sagar.sontakke@tessell.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.tessell.dmm.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.UUID;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

import lombok.*;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
/**
 * BackupDatabaseInfoOps
 */
@JsonPropertyOrder({
  BackupDatabaseInfoOps.JSON_PROPERTY_DATABASE_ID,
  BackupDatabaseInfoOps.JSON_PROPERTY_DATABASE_NAME,
  BackupDatabaseInfoOps.JSON_PROPERTY_DATABASE_STATUS
})
@JsonTypeName("BackupDatabaseInfoOps")
@lombok.Builder
@lombok.NoArgsConstructor
@lombok.AllArgsConstructor
@javax.annotation.Generated(value = "com.tessell.codegen.TessellJavaGenerator", date = "2024-05-02T15:56:39.699111+05:30[Asia/Kolkata]")
@JsonIgnoreProperties(ignoreUnknown = true)
public class BackupDatabaseInfoOps {
  public static final String JSON_PROPERTY_DATABASE_ID = "databaseId";
  private UUID databaseId;

  public static final String JSON_PROPERTY_DATABASE_NAME = "databaseName";
  private String databaseName;

  public static final String JSON_PROPERTY_DATABASE_STATUS = "databaseStatus";
  private String databaseStatus;


  public BackupDatabaseInfoOps databaseId(UUID databaseId) {
    
    this.databaseId = databaseId;
    return this;
  }

   /**
   * Get databaseId
   * @return databaseId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_DATABASE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public UUID getDatabaseId() {
    return databaseId;
  }


  @JsonProperty(JSON_PROPERTY_DATABASE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDatabaseId(UUID databaseId) {
    this.databaseId = databaseId;
  }


  public BackupDatabaseInfoOps databaseName(String databaseName) {
    
    this.databaseName = databaseName;
    return this;
  }

   /**
   * Get databaseName
   * @return databaseName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_DATABASE_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDatabaseName() {
    return databaseName;
  }


  @JsonProperty(JSON_PROPERTY_DATABASE_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDatabaseName(String databaseName) {
    this.databaseName = databaseName;
  }


  public BackupDatabaseInfoOps databaseStatus(String databaseStatus) {
    
    this.databaseStatus = databaseStatus;
    return this;
  }

   /**
   * Get databaseStatus
   * @return databaseStatus
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_DATABASE_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDatabaseStatus() {
    return databaseStatus;
  }


  @JsonProperty(JSON_PROPERTY_DATABASE_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDatabaseStatus(String databaseStatus) {
    this.databaseStatus = databaseStatus;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BackupDatabaseInfoOps backupDatabaseInfoOps = (BackupDatabaseInfoOps) o;
    return Objects.equals(this.databaseId, backupDatabaseInfoOps.databaseId) &&
        Objects.equals(this.databaseName, backupDatabaseInfoOps.databaseName) &&
        Objects.equals(this.databaseStatus, backupDatabaseInfoOps.databaseStatus);
  }

  @Override
  public int hashCode() {
    return Objects.hash(databaseId, databaseName, databaseStatus);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BackupDatabaseInfoOps {\n");
    sb.append("    databaseId: ").append(toIndentedString(databaseId)).append("\n");
    sb.append("    databaseName: ").append(toIndentedString(databaseName)).append("\n");
    sb.append("    databaseStatus: ").append(toIndentedString(databaseStatus)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

