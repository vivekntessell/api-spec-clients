/*
 * Tessell Availability Machine REST Web Services' API Documentation
 * Tessell Availability Machine REST Web Services' Api Documentation
 *
 * The version of the OpenAPI document: 1.0
 * Contact: sagar.sontakke@tessell.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.tessell.dmm.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

import lombok.*;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
/**
 * Associated Script Version
 */
@ApiModel(description = "Associated Script Version")
@JsonPropertyOrder({
  TessellSanitizationScheduleServiceDTOScriptVersionInfo.JSON_PROPERTY_USE_ACTIVE_SCRIPT_VERSION,
  TessellSanitizationScheduleServiceDTOScriptVersionInfo.JSON_PROPERTY_SCRIPT_VERSION
})
@JsonTypeName("TessellSanitizationScheduleServiceDTO_scriptVersionInfo")
@lombok.Builder
@lombok.NoArgsConstructor
@lombok.AllArgsConstructor
@javax.annotation.Generated(value = "com.tessell.codegen.TessellJavaGenerator", date = "2024-05-02T15:56:39.699111+05:30[Asia/Kolkata]")
@JsonIgnoreProperties(ignoreUnknown = true)
public class TessellSanitizationScheduleServiceDTOScriptVersionInfo {
  public static final String JSON_PROPERTY_USE_ACTIVE_SCRIPT_VERSION = "useActiveScriptVersion";
  private Boolean useActiveScriptVersion;

  public static final String JSON_PROPERTY_SCRIPT_VERSION = "scriptVersion";
  private String scriptVersion;


  public TessellSanitizationScheduleServiceDTOScriptVersionInfo useActiveScriptVersion(Boolean useActiveScriptVersion) {
    
    this.useActiveScriptVersion = useActiveScriptVersion;
    return this;
  }

   /**
   * If true, use the version that is chosen as the Active Version for the script
   * @return useActiveScriptVersion
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "If true, use the version that is chosen as the Active Version for the script")
  @JsonProperty(JSON_PROPERTY_USE_ACTIVE_SCRIPT_VERSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getUseActiveScriptVersion() {
    return useActiveScriptVersion;
  }


  @JsonProperty(JSON_PROPERTY_USE_ACTIVE_SCRIPT_VERSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUseActiveScriptVersion(Boolean useActiveScriptVersion) {
    this.useActiveScriptVersion = useActiveScriptVersion;
  }


  public TessellSanitizationScheduleServiceDTOScriptVersionInfo scriptVersion(String scriptVersion) {
    
    this.scriptVersion = scriptVersion;
    return this;
  }

   /**
   * If useActiveVersion is false, use the specified version, else use the active version
   * @return scriptVersion
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "If useActiveVersion is false, use the specified version, else use the active version")
  @JsonProperty(JSON_PROPERTY_SCRIPT_VERSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getScriptVersion() {
    return scriptVersion;
  }


  @JsonProperty(JSON_PROPERTY_SCRIPT_VERSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setScriptVersion(String scriptVersion) {
    this.scriptVersion = scriptVersion;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TessellSanitizationScheduleServiceDTOScriptVersionInfo tessellSanitizationScheduleServiceDTOScriptVersionInfo = (TessellSanitizationScheduleServiceDTOScriptVersionInfo) o;
    return Objects.equals(this.useActiveScriptVersion, tessellSanitizationScheduleServiceDTOScriptVersionInfo.useActiveScriptVersion) &&
        Objects.equals(this.scriptVersion, tessellSanitizationScheduleServiceDTOScriptVersionInfo.scriptVersion);
  }

  @Override
  public int hashCode() {
    return Objects.hash(useActiveScriptVersion, scriptVersion);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TessellSanitizationScheduleServiceDTOScriptVersionInfo {\n");
    sb.append("    useActiveScriptVersion: ").append(toIndentedString(useActiveScriptVersion)).append("\n");
    sb.append("    scriptVersion: ").append(toIndentedString(scriptVersion)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

