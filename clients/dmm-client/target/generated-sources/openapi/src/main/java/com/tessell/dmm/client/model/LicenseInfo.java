/*
 * Tessell Availability Machine REST Web Services' API Documentation
 * Tessell Availability Machine REST Web Services' Api Documentation
 *
 * The version of the OpenAPI document: 1.0
 * Contact: sagar.sontakke@tessell.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.tessell.dmm.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.UUID;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

import lombok.*;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
/**
 * LicenseInfo
 */
@JsonPropertyOrder({
  LicenseInfo.JSON_PROPERTY_LICENSE_ID,
  LicenseInfo.JSON_PROPERTY_LOCK_HASH,
  LicenseInfo.JSON_PROPERTY_QUANTITY
})
@JsonTypeName("LicenseInfo")
@lombok.Builder
@lombok.NoArgsConstructor
@lombok.AllArgsConstructor
@javax.annotation.Generated(value = "com.tessell.codegen.TessellJavaGenerator", date = "2024-05-02T15:56:39.699111+05:30[Asia/Kolkata]")
@JsonIgnoreProperties(ignoreUnknown = true)
public class LicenseInfo {
  public static final String JSON_PROPERTY_LICENSE_ID = "licenseId";
  private UUID licenseId;

  public static final String JSON_PROPERTY_LOCK_HASH = "lockHash";
  private String lockHash;

  public static final String JSON_PROPERTY_QUANTITY = "quantity";
  private Double quantity;


  public LicenseInfo licenseId(UUID licenseId) {
    
    this.licenseId = licenseId;
    return this;
  }

   /**
   * Get licenseId
   * @return licenseId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_LICENSE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public UUID getLicenseId() {
    return licenseId;
  }


  @JsonProperty(JSON_PROPERTY_LICENSE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLicenseId(UUID licenseId) {
    this.licenseId = licenseId;
  }


  public LicenseInfo lockHash(String lockHash) {
    
    this.lockHash = lockHash;
    return this;
  }

   /**
   * Acquired licenses lock-hash
   * @return lockHash
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Acquired licenses lock-hash")
  @JsonProperty(JSON_PROPERTY_LOCK_HASH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getLockHash() {
    return lockHash;
  }


  @JsonProperty(JSON_PROPERTY_LOCK_HASH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLockHash(String lockHash) {
    this.lockHash = lockHash;
  }


  public LicenseInfo quantity(Double quantity) {
    
    this.quantity = quantity;
    return this;
  }

   /**
   * quantity of acquired license
   * @return quantity
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "quantity of acquired license")
  @JsonProperty(JSON_PROPERTY_QUANTITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getQuantity() {
    return quantity;
  }


  @JsonProperty(JSON_PROPERTY_QUANTITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setQuantity(Double quantity) {
    this.quantity = quantity;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LicenseInfo licenseInfo = (LicenseInfo) o;
    return Objects.equals(this.licenseId, licenseInfo.licenseId) &&
        Objects.equals(this.lockHash, licenseInfo.lockHash) &&
        Objects.equals(this.quantity, licenseInfo.quantity);
  }

  @Override
  public int hashCode() {
    return Objects.hash(licenseId, lockHash, quantity);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LicenseInfo {\n");
    sb.append("    licenseId: ").append(toIndentedString(licenseId)).append("\n");
    sb.append("    lockHash: ").append(toIndentedString(lockHash)).append("\n");
    sb.append("    quantity: ").append(toIndentedString(quantity)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

