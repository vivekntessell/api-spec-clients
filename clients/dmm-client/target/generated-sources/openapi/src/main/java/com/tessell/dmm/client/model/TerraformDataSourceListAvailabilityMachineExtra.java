/*
 * Tessell Availability Machine REST Web Services' API Documentation
 * Tessell Availability Machine REST Web Services' Api Documentation
 *
 * The version of the OpenAPI document: 1.0
 * Contact: sagar.sontakke@tessell.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.tessell.dmm.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

import lombok.*;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
/**
 * TerraformDataSourceListAvailabilityMachineExtra
 */
@JsonPropertyOrder({
  TerraformDataSourceListAvailabilityMachineExtra.JSON_PROPERTY_NAME,
  TerraformDataSourceListAvailabilityMachineExtra.JSON_PROPERTY_STATUS,
  TerraformDataSourceListAvailabilityMachineExtra.JSON_PROPERTY_ENGINE_TYPE,
  TerraformDataSourceListAvailabilityMachineExtra.JSON_PROPERTY_OWNERS,
  TerraformDataSourceListAvailabilityMachineExtra.JSON_PROPERTY_LOAD_ACLS
})
@JsonTypeName("TerraformDataSourceListAvailabilityMachineExtra")
@lombok.Builder
@lombok.NoArgsConstructor
@lombok.AllArgsConstructor
@javax.annotation.Generated(value = "com.tessell.codegen.TessellJavaGenerator", date = "2024-05-02T15:56:39.699111+05:30[Asia/Kolkata]")
@JsonIgnoreProperties(ignoreUnknown = true)
public class TerraformDataSourceListAvailabilityMachineExtra {
  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  /**
   * status
   */
  public enum StatusEnum {
    CREATING("CREATING"),
    
    FAILED("FAILED"),
    
    READY("READY"),
    
    STOPPING("STOPPING"),
    
    STOPPED("STOPPED"),
    
    DEGRADED("DEGRADED"),
    
    STARTING("STARTING"),
    
    DELETING("DELETING"),
    
    SWITCHOVER("SWITCHOVER"),
    
    REBUILDING("REBUILDING");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static StatusEnum fromValue(String value) {
      for (StatusEnum b : StatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_STATUS = "status";
  private StatusEnum status;

  /**
   * Availaility Machine&#39;s engine-types
   */
  public enum EngineTypeEnum {
    ORACLE("ORACLE"),
    
    POSTGRESQL("POSTGRESQL"),
    
    SQLSERVER("SQLSERVER"),
    
    MYSQL("MYSQL"),
    
    APACHE_KAFKA("APACHE_KAFKA"),
    
    MONGODB("MONGODB"),
    
    MILVUS("MILVUS");

    private String value;

    EngineTypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static EngineTypeEnum fromValue(String value) {
      for (EngineTypeEnum b : EngineTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_ENGINE_TYPE = "engineType";
  private EngineTypeEnum engineType;

  public static final String JSON_PROPERTY_OWNERS = "owners";
  private List<String> owners = null;

  public static final String JSON_PROPERTY_LOAD_ACLS = "loadAcls";
  private Boolean loadAcls = false;


  public TerraformDataSourceListAvailabilityMachineExtra name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Name of the Availability Machine
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Name of the Availability Machine")
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setName(String name) {
    this.name = name;
  }


  public TerraformDataSourceListAvailabilityMachineExtra status(StatusEnum status) {
    
    this.status = status;
    return this;
  }

   /**
   * status
   * @return status
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "status")
  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public StatusEnum getStatus() {
    return status;
  }


  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStatus(StatusEnum status) {
    this.status = status;
  }


  public TerraformDataSourceListAvailabilityMachineExtra engineType(EngineTypeEnum engineType) {
    
    this.engineType = engineType;
    return this;
  }

   /**
   * Availaility Machine&#39;s engine-types
   * @return engineType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Availaility Machine's engine-types")
  @JsonProperty(JSON_PROPERTY_ENGINE_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public EngineTypeEnum getEngineType() {
    return engineType;
  }


  @JsonProperty(JSON_PROPERTY_ENGINE_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEngineType(EngineTypeEnum engineType) {
    this.engineType = engineType;
  }


  public TerraformDataSourceListAvailabilityMachineExtra owners(List<String> owners) {
    
    this.owners = owners;
    return this;
  }

  public TerraformDataSourceListAvailabilityMachineExtra addOwnersItem(String ownersItem) {
    if (this.owners == null) {
      this.owners = new ArrayList<>();
    }
    this.owners.add(ownersItem);
    return this;
  }

   /**
   * List of Email Addresses for entity or resource owners
   * @return owners
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "List of Email Addresses for entity or resource owners")
  @JsonProperty(JSON_PROPERTY_OWNERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getOwners() {
    return owners;
  }


  @JsonProperty(JSON_PROPERTY_OWNERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOwners(List<String> owners) {
    this.owners = owners;
  }


  public TerraformDataSourceListAvailabilityMachineExtra loadAcls(Boolean loadAcls) {
    
    this.loadAcls = loadAcls;
    return this;
  }

   /**
   * Load ACL information
   * @return loadAcls
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Load ACL information")
  @JsonProperty(JSON_PROPERTY_LOAD_ACLS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getLoadAcls() {
    return loadAcls;
  }


  @JsonProperty(JSON_PROPERTY_LOAD_ACLS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLoadAcls(Boolean loadAcls) {
    this.loadAcls = loadAcls;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TerraformDataSourceListAvailabilityMachineExtra terraformDataSourceListAvailabilityMachineExtra = (TerraformDataSourceListAvailabilityMachineExtra) o;
    return Objects.equals(this.name, terraformDataSourceListAvailabilityMachineExtra.name) &&
        Objects.equals(this.status, terraformDataSourceListAvailabilityMachineExtra.status) &&
        Objects.equals(this.engineType, terraformDataSourceListAvailabilityMachineExtra.engineType) &&
        Objects.equals(this.owners, terraformDataSourceListAvailabilityMachineExtra.owners) &&
        Objects.equals(this.loadAcls, terraformDataSourceListAvailabilityMachineExtra.loadAcls);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, status, engineType, owners, loadAcls);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TerraformDataSourceListAvailabilityMachineExtra {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    engineType: ").append(toIndentedString(engineType)).append("\n");
    sb.append("    owners: ").append(toIndentedString(owners)).append("\n");
    sb.append("    loadAcls: ").append(toIndentedString(loadAcls)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

