/*
 * Tessell Availability Machine REST Web Services' API Documentation
 * Tessell Availability Machine REST Web Services' Api Documentation
 *
 * The version of the OpenAPI document: 1.0
 * Contact: sagar.sontakke@tessell.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.tessell.dmm.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.tessell.dmm.client.model.DapDailyCatalogServiceView;
import com.tessell.dmm.client.model.DapManualCatalogServiceView;
import com.tessell.dmm.client.model.DapMonthlyCatalogServiceView;
import com.tessell.dmm.client.model.DapPitrCatalogServiceView;
import com.tessell.dmm.client.model.DapQuarterlyCatalogServiceView;
import com.tessell.dmm.client.model.DapWeeklyCatalogServiceView;
import com.tessell.dmm.client.model.DapYearlyCatalogServiceView;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

import lombok.*;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
/**
 * DapDatabaseAvailabilityCatalogServiceView
 */
@JsonPropertyOrder({
  DapDatabaseAvailabilityCatalogServiceView.JSON_PROPERTY_DATABASE,
  DapDatabaseAvailabilityCatalogServiceView.JSON_PROPERTY_MANUAL,
  DapDatabaseAvailabilityCatalogServiceView.JSON_PROPERTY_PITR,
  DapDatabaseAvailabilityCatalogServiceView.JSON_PROPERTY_DAILY,
  DapDatabaseAvailabilityCatalogServiceView.JSON_PROPERTY_WEEKLY,
  DapDatabaseAvailabilityCatalogServiceView.JSON_PROPERTY_MONTHLY,
  DapDatabaseAvailabilityCatalogServiceView.JSON_PROPERTY_QUARTERLY,
  DapDatabaseAvailabilityCatalogServiceView.JSON_PROPERTY_YEARLY
})
@JsonTypeName("DapDatabaseAvailabilityCatalogServiceView")
@lombok.Builder
@lombok.NoArgsConstructor
@lombok.AllArgsConstructor
@javax.annotation.Generated(value = "com.tessell.codegen.TessellJavaGenerator", date = "2024-05-02T15:56:39.699111+05:30[Asia/Kolkata]")
@JsonIgnoreProperties(ignoreUnknown = true)
public class DapDatabaseAvailabilityCatalogServiceView {
  public static final String JSON_PROPERTY_DATABASE = "database";
  private String database;

  public static final String JSON_PROPERTY_MANUAL = "manual";
  private DapManualCatalogServiceView manual;

  public static final String JSON_PROPERTY_PITR = "pitr";
  private DapPitrCatalogServiceView pitr;

  public static final String JSON_PROPERTY_DAILY = "daily";
  private DapDailyCatalogServiceView daily;

  public static final String JSON_PROPERTY_WEEKLY = "weekly";
  private DapWeeklyCatalogServiceView weekly;

  public static final String JSON_PROPERTY_MONTHLY = "monthly";
  private DapMonthlyCatalogServiceView monthly;

  public static final String JSON_PROPERTY_QUARTERLY = "quarterly";
  private DapQuarterlyCatalogServiceView quarterly;

  public static final String JSON_PROPERTY_YEARLY = "yearly";
  private DapYearlyCatalogServiceView yearly;


  public DapDatabaseAvailabilityCatalogServiceView database(String database) {
    
    this.database = database;
    return this;
  }

   /**
   * Get database
   * @return database
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_DATABASE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDatabase() {
    return database;
  }


  @JsonProperty(JSON_PROPERTY_DATABASE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDatabase(String database) {
    this.database = database;
  }


  public DapDatabaseAvailabilityCatalogServiceView manual(DapManualCatalogServiceView manual) {
    
    this.manual = manual;
    return this;
  }

   /**
   * Get manual
   * @return manual
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_MANUAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public DapManualCatalogServiceView getManual() {
    return manual;
  }


  @JsonProperty(JSON_PROPERTY_MANUAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setManual(DapManualCatalogServiceView manual) {
    this.manual = manual;
  }


  public DapDatabaseAvailabilityCatalogServiceView pitr(DapPitrCatalogServiceView pitr) {
    
    this.pitr = pitr;
    return this;
  }

   /**
   * Get pitr
   * @return pitr
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_PITR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public DapPitrCatalogServiceView getPitr() {
    return pitr;
  }


  @JsonProperty(JSON_PROPERTY_PITR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPitr(DapPitrCatalogServiceView pitr) {
    this.pitr = pitr;
  }


  public DapDatabaseAvailabilityCatalogServiceView daily(DapDailyCatalogServiceView daily) {
    
    this.daily = daily;
    return this;
  }

   /**
   * Get daily
   * @return daily
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_DAILY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public DapDailyCatalogServiceView getDaily() {
    return daily;
  }


  @JsonProperty(JSON_PROPERTY_DAILY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDaily(DapDailyCatalogServiceView daily) {
    this.daily = daily;
  }


  public DapDatabaseAvailabilityCatalogServiceView weekly(DapWeeklyCatalogServiceView weekly) {
    
    this.weekly = weekly;
    return this;
  }

   /**
   * Get weekly
   * @return weekly
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_WEEKLY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public DapWeeklyCatalogServiceView getWeekly() {
    return weekly;
  }


  @JsonProperty(JSON_PROPERTY_WEEKLY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setWeekly(DapWeeklyCatalogServiceView weekly) {
    this.weekly = weekly;
  }


  public DapDatabaseAvailabilityCatalogServiceView monthly(DapMonthlyCatalogServiceView monthly) {
    
    this.monthly = monthly;
    return this;
  }

   /**
   * Get monthly
   * @return monthly
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_MONTHLY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public DapMonthlyCatalogServiceView getMonthly() {
    return monthly;
  }


  @JsonProperty(JSON_PROPERTY_MONTHLY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMonthly(DapMonthlyCatalogServiceView monthly) {
    this.monthly = monthly;
  }


  public DapDatabaseAvailabilityCatalogServiceView quarterly(DapQuarterlyCatalogServiceView quarterly) {
    
    this.quarterly = quarterly;
    return this;
  }

   /**
   * Get quarterly
   * @return quarterly
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_QUARTERLY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public DapQuarterlyCatalogServiceView getQuarterly() {
    return quarterly;
  }


  @JsonProperty(JSON_PROPERTY_QUARTERLY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setQuarterly(DapQuarterlyCatalogServiceView quarterly) {
    this.quarterly = quarterly;
  }


  public DapDatabaseAvailabilityCatalogServiceView yearly(DapYearlyCatalogServiceView yearly) {
    
    this.yearly = yearly;
    return this;
  }

   /**
   * Get yearly
   * @return yearly
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_YEARLY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public DapYearlyCatalogServiceView getYearly() {
    return yearly;
  }


  @JsonProperty(JSON_PROPERTY_YEARLY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setYearly(DapYearlyCatalogServiceView yearly) {
    this.yearly = yearly;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DapDatabaseAvailabilityCatalogServiceView dapDatabaseAvailabilityCatalogServiceView = (DapDatabaseAvailabilityCatalogServiceView) o;
    return Objects.equals(this.database, dapDatabaseAvailabilityCatalogServiceView.database) &&
        Objects.equals(this.manual, dapDatabaseAvailabilityCatalogServiceView.manual) &&
        Objects.equals(this.pitr, dapDatabaseAvailabilityCatalogServiceView.pitr) &&
        Objects.equals(this.daily, dapDatabaseAvailabilityCatalogServiceView.daily) &&
        Objects.equals(this.weekly, dapDatabaseAvailabilityCatalogServiceView.weekly) &&
        Objects.equals(this.monthly, dapDatabaseAvailabilityCatalogServiceView.monthly) &&
        Objects.equals(this.quarterly, dapDatabaseAvailabilityCatalogServiceView.quarterly) &&
        Objects.equals(this.yearly, dapDatabaseAvailabilityCatalogServiceView.yearly);
  }

  @Override
  public int hashCode() {
    return Objects.hash(database, manual, pitr, daily, weekly, monthly, quarterly, yearly);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DapDatabaseAvailabilityCatalogServiceView {\n");
    sb.append("    database: ").append(toIndentedString(database)).append("\n");
    sb.append("    manual: ").append(toIndentedString(manual)).append("\n");
    sb.append("    pitr: ").append(toIndentedString(pitr)).append("\n");
    sb.append("    daily: ").append(toIndentedString(daily)).append("\n");
    sb.append("    weekly: ").append(toIndentedString(weekly)).append("\n");
    sb.append("    monthly: ").append(toIndentedString(monthly)).append("\n");
    sb.append("    quarterly: ").append(toIndentedString(quarterly)).append("\n");
    sb.append("    yearly: ").append(toIndentedString(yearly)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

