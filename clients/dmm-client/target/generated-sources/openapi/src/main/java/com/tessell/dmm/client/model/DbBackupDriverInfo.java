/*
 * Tessell Availability Machine REST Web Services' API Documentation
 * Tessell Availability Machine REST Web Services' Api Documentation
 *
 * The version of the OpenAPI document: 1.0
 * Contact: sagar.sontakke@tessell.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.tessell.dmm.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.UUID;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

import lombok.*;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
/**
 * Backup metadata information for driver use
 */
@ApiModel(description = "Backup metadata information for driver use")
@JsonPropertyOrder({
  DbBackupDriverInfo.JSON_PROPERTY_DATA,
  DbBackupDriverInfo.JSON_PROPERTY_DATABASE_SOFTWARE_IMAGE_ID,
  DbBackupDriverInfo.JSON_PROPERTY_DATABASE_VERSION,
  DbBackupDriverInfo.JSON_PROPERTY_DATABASE_COMPUTE_ID,
  DbBackupDriverInfo.JSON_PROPERTY_DATABASE_NETWORK_PROFILE_ID,
  DbBackupDriverInfo.JSON_PROPERTY_DATABASE_OPTION_PROFILE_ID,
  DbBackupDriverInfo.JSON_PROPERTY_DATABASE_PARAMETER_PROFILE_ID,
  DbBackupDriverInfo.JSON_PROPERTY_CHARACTER_SET
})
@JsonTypeName("DbBackupDriverInfo")
@lombok.Builder
@lombok.NoArgsConstructor
@lombok.AllArgsConstructor
@javax.annotation.Generated(value = "com.tessell.codegen.TessellJavaGenerator", date = "2024-05-02T15:56:39.699111+05:30[Asia/Kolkata]")
@JsonIgnoreProperties(ignoreUnknown = true)
public class DbBackupDriverInfo {
  public static final String JSON_PROPERTY_DATA = "data";
  private Object data;

  public static final String JSON_PROPERTY_DATABASE_SOFTWARE_IMAGE_ID = "databaseSoftwareImageId";
  private UUID databaseSoftwareImageId;

  public static final String JSON_PROPERTY_DATABASE_VERSION = "databaseVersion";
  private String databaseVersion;

  public static final String JSON_PROPERTY_DATABASE_COMPUTE_ID = "databaseComputeId";
  private UUID databaseComputeId;

  public static final String JSON_PROPERTY_DATABASE_NETWORK_PROFILE_ID = "databaseNetworkProfileId";
  private UUID databaseNetworkProfileId;

  public static final String JSON_PROPERTY_DATABASE_OPTION_PROFILE_ID = "databaseOptionProfileId";
  private UUID databaseOptionProfileId;

  public static final String JSON_PROPERTY_DATABASE_PARAMETER_PROFILE_ID = "databaseParameterProfileId";
  private UUID databaseParameterProfileId;

  public static final String JSON_PROPERTY_CHARACTER_SET = "characterSet";
  private String characterSet;


  public DbBackupDriverInfo data(Object data) {
    
    this.data = data;
    return this;
  }

   /**
   * Get data
   * @return data
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_DATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Object getData() {
    return data;
  }


  @JsonProperty(JSON_PROPERTY_DATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setData(Object data) {
    this.data = data;
  }


  public DbBackupDriverInfo databaseSoftwareImageId(UUID databaseSoftwareImageId) {
    
    this.databaseSoftwareImageId = databaseSoftwareImageId;
    return this;
  }

   /**
   * Software Image Id of parent database at the time capturing the backup
   * @return databaseSoftwareImageId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Software Image Id of parent database at the time capturing the backup")
  @JsonProperty(JSON_PROPERTY_DATABASE_SOFTWARE_IMAGE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public UUID getDatabaseSoftwareImageId() {
    return databaseSoftwareImageId;
  }


  @JsonProperty(JSON_PROPERTY_DATABASE_SOFTWARE_IMAGE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDatabaseSoftwareImageId(UUID databaseSoftwareImageId) {
    this.databaseSoftwareImageId = databaseSoftwareImageId;
  }


  public DbBackupDriverInfo databaseVersion(String databaseVersion) {
    
    this.databaseVersion = databaseVersion;
    return this;
  }

   /**
   * Version of parent database at the time capturing the backup
   * @return databaseVersion
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Version of parent database at the time capturing the backup")
  @JsonProperty(JSON_PROPERTY_DATABASE_VERSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDatabaseVersion() {
    return databaseVersion;
  }


  @JsonProperty(JSON_PROPERTY_DATABASE_VERSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDatabaseVersion(String databaseVersion) {
    this.databaseVersion = databaseVersion;
  }


  public DbBackupDriverInfo databaseComputeId(UUID databaseComputeId) {
    
    this.databaseComputeId = databaseComputeId;
    return this;
  }

   /**
   * Compute Id of parent database at the time capturing the backup
   * @return databaseComputeId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Compute Id of parent database at the time capturing the backup")
  @JsonProperty(JSON_PROPERTY_DATABASE_COMPUTE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public UUID getDatabaseComputeId() {
    return databaseComputeId;
  }


  @JsonProperty(JSON_PROPERTY_DATABASE_COMPUTE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDatabaseComputeId(UUID databaseComputeId) {
    this.databaseComputeId = databaseComputeId;
  }


  public DbBackupDriverInfo databaseNetworkProfileId(UUID databaseNetworkProfileId) {
    
    this.databaseNetworkProfileId = databaseNetworkProfileId;
    return this;
  }

   /**
   * Network Profile Id of parent database at the time capturing the backup
   * @return databaseNetworkProfileId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Network Profile Id of parent database at the time capturing the backup")
  @JsonProperty(JSON_PROPERTY_DATABASE_NETWORK_PROFILE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public UUID getDatabaseNetworkProfileId() {
    return databaseNetworkProfileId;
  }


  @JsonProperty(JSON_PROPERTY_DATABASE_NETWORK_PROFILE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDatabaseNetworkProfileId(UUID databaseNetworkProfileId) {
    this.databaseNetworkProfileId = databaseNetworkProfileId;
  }


  public DbBackupDriverInfo databaseOptionProfileId(UUID databaseOptionProfileId) {
    
    this.databaseOptionProfileId = databaseOptionProfileId;
    return this;
  }

   /**
   * Option Profile Id of parent database at the time capturing the backup
   * @return databaseOptionProfileId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Option Profile Id of parent database at the time capturing the backup")
  @JsonProperty(JSON_PROPERTY_DATABASE_OPTION_PROFILE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public UUID getDatabaseOptionProfileId() {
    return databaseOptionProfileId;
  }


  @JsonProperty(JSON_PROPERTY_DATABASE_OPTION_PROFILE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDatabaseOptionProfileId(UUID databaseOptionProfileId) {
    this.databaseOptionProfileId = databaseOptionProfileId;
  }


  public DbBackupDriverInfo databaseParameterProfileId(UUID databaseParameterProfileId) {
    
    this.databaseParameterProfileId = databaseParameterProfileId;
    return this;
  }

   /**
   * Parameter Profile Id of parent database at the time capturing the backup
   * @return databaseParameterProfileId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Parameter Profile Id of parent database at the time capturing the backup")
  @JsonProperty(JSON_PROPERTY_DATABASE_PARAMETER_PROFILE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public UUID getDatabaseParameterProfileId() {
    return databaseParameterProfileId;
  }


  @JsonProperty(JSON_PROPERTY_DATABASE_PARAMETER_PROFILE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDatabaseParameterProfileId(UUID databaseParameterProfileId) {
    this.databaseParameterProfileId = databaseParameterProfileId;
  }


  public DbBackupDriverInfo characterSet(String characterSet) {
    
    this.characterSet = characterSet;
    return this;
  }

   /**
   * Character set of parent database at the time capturing the backup
   * @return characterSet
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Character set of parent database at the time capturing the backup")
  @JsonProperty(JSON_PROPERTY_CHARACTER_SET)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCharacterSet() {
    return characterSet;
  }


  @JsonProperty(JSON_PROPERTY_CHARACTER_SET)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCharacterSet(String characterSet) {
    this.characterSet = characterSet;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DbBackupDriverInfo dbBackupDriverInfo = (DbBackupDriverInfo) o;
    return Objects.equals(this.data, dbBackupDriverInfo.data) &&
        Objects.equals(this.databaseSoftwareImageId, dbBackupDriverInfo.databaseSoftwareImageId) &&
        Objects.equals(this.databaseVersion, dbBackupDriverInfo.databaseVersion) &&
        Objects.equals(this.databaseComputeId, dbBackupDriverInfo.databaseComputeId) &&
        Objects.equals(this.databaseNetworkProfileId, dbBackupDriverInfo.databaseNetworkProfileId) &&
        Objects.equals(this.databaseOptionProfileId, dbBackupDriverInfo.databaseOptionProfileId) &&
        Objects.equals(this.databaseParameterProfileId, dbBackupDriverInfo.databaseParameterProfileId) &&
        Objects.equals(this.characterSet, dbBackupDriverInfo.characterSet);
  }

  @Override
  public int hashCode() {
    return Objects.hash(data, databaseSoftwareImageId, databaseVersion, databaseComputeId, databaseNetworkProfileId, databaseOptionProfileId, databaseParameterProfileId, characterSet);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DbBackupDriverInfo {\n");
    sb.append("    data: ").append(toIndentedString(data)).append("\n");
    sb.append("    databaseSoftwareImageId: ").append(toIndentedString(databaseSoftwareImageId)).append("\n");
    sb.append("    databaseVersion: ").append(toIndentedString(databaseVersion)).append("\n");
    sb.append("    databaseComputeId: ").append(toIndentedString(databaseComputeId)).append("\n");
    sb.append("    databaseNetworkProfileId: ").append(toIndentedString(databaseNetworkProfileId)).append("\n");
    sb.append("    databaseOptionProfileId: ").append(toIndentedString(databaseOptionProfileId)).append("\n");
    sb.append("    databaseParameterProfileId: ").append(toIndentedString(databaseParameterProfileId)).append("\n");
    sb.append("    characterSet: ").append(toIndentedString(characterSet)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

