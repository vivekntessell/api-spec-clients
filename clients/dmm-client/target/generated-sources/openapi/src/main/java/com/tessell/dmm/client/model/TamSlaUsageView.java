/*
 * Tessell Availability Machine REST Web Services' API Documentation
 * Tessell Availability Machine REST Web Services' Api Documentation
 *
 * The version of the OpenAPI document: 1.0
 * Contact: sagar.sontakke@tessell.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.tessell.dmm.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.tessell.dmm.client.model.DatabaseEngineType;
import com.tessell.dmm.client.model.DmmStatus;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.UUID;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

import lombok.*;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
/**
 * TamSlaUsageView
 */
@JsonPropertyOrder({
  TamSlaUsageView.JSON_PROPERTY_AM_NAME,
  TamSlaUsageView.JSON_PROPERTY_AM_ID,
  TamSlaUsageView.JSON_PROPERTY_ENGINE_TYPE,
  TamSlaUsageView.JSON_PROPERTY_OWNER,
  TamSlaUsageView.JSON_PROPERTY_STATUS
})
@JsonTypeName("TamSlaUsageView")
@lombok.Builder
@lombok.NoArgsConstructor
@lombok.AllArgsConstructor
@javax.annotation.Generated(value = "com.tessell.codegen.TessellJavaGenerator", date = "2024-05-02T15:56:39.699111+05:30[Asia/Kolkata]")
@JsonIgnoreProperties(ignoreUnknown = true)
public class TamSlaUsageView {
  public static final String JSON_PROPERTY_AM_NAME = "amName";
  private String amName;

  public static final String JSON_PROPERTY_AM_ID = "amId";
  private UUID amId;

  public static final String JSON_PROPERTY_ENGINE_TYPE = "engineType";
  private DatabaseEngineType engineType;

  public static final String JSON_PROPERTY_OWNER = "owner";
  private String owner;

  public static final String JSON_PROPERTY_STATUS = "status";
  private DmmStatus status;


  public TamSlaUsageView amName(String amName) {
    
    this.amName = amName;
    return this;
  }

   /**
   * Name of the availability machine
   * @return amName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Name of the availability machine")
  @JsonProperty(JSON_PROPERTY_AM_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAmName() {
    return amName;
  }


  @JsonProperty(JSON_PROPERTY_AM_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAmName(String amName) {
    this.amName = amName;
  }


  public TamSlaUsageView amId(UUID amId) {
    
    this.amId = amId;
    return this;
  }

   /**
   * Get amId
   * @return amId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_AM_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public UUID getAmId() {
    return amId;
  }


  @JsonProperty(JSON_PROPERTY_AM_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAmId(UUID amId) {
    this.amId = amId;
  }


  public TamSlaUsageView engineType(DatabaseEngineType engineType) {
    
    this.engineType = engineType;
    return this;
  }

   /**
   * Get engineType
   * @return engineType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_ENGINE_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public DatabaseEngineType getEngineType() {
    return engineType;
  }


  @JsonProperty(JSON_PROPERTY_ENGINE_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEngineType(DatabaseEngineType engineType) {
    this.engineType = engineType;
  }


  public TamSlaUsageView owner(String owner) {
    
    this.owner = owner;
    return this;
  }

   /**
   * Email id of the AM owner
   * @return owner
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Email id of the AM owner")
  @JsonProperty(JSON_PROPERTY_OWNER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getOwner() {
    return owner;
  }


  @JsonProperty(JSON_PROPERTY_OWNER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOwner(String owner) {
    this.owner = owner;
  }


  public TamSlaUsageView status(DmmStatus status) {
    
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public DmmStatus getStatus() {
    return status;
  }


  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStatus(DmmStatus status) {
    this.status = status;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TamSlaUsageView tamSlaUsageView = (TamSlaUsageView) o;
    return Objects.equals(this.amName, tamSlaUsageView.amName) &&
        Objects.equals(this.amId, tamSlaUsageView.amId) &&
        Objects.equals(this.engineType, tamSlaUsageView.engineType) &&
        Objects.equals(this.owner, tamSlaUsageView.owner) &&
        Objects.equals(this.status, tamSlaUsageView.status);
  }

  @Override
  public int hashCode() {
    return Objects.hash(amName, amId, engineType, owner, status);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TamSlaUsageView {\n");
    sb.append("    amName: ").append(toIndentedString(amName)).append("\n");
    sb.append("    amId: ").append(toIndentedString(amId)).append("\n");
    sb.append("    engineType: ").append(toIndentedString(engineType)).append("\n");
    sb.append("    owner: ").append(toIndentedString(owner)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

