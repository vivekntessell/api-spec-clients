/*
 * Tessell Gateway Service API
 * Tessell Gateway Service API Specification
 *
 * The version of the OpenAPI document: 1.0
 * Contact: samir.das@tessell.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.tessell.gateway.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

import lombok.*;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
/**
 * JWT Credentials
 */
@ApiModel(description = "JWT Credentials")
@JsonPropertyOrder({
  JWTCredentials.JSON_PROPERTY_USER_NAME,
  JWTCredentials.JSON_PROPERTY_PUBLIC_KEY,
  JWTCredentials.JSON_PROPERTY_SEED,
  JWTCredentials.JSON_PROPERTY_JWT
})
@JsonTypeName("JWTCredentials")
@lombok.experimental.SuperBuilder
@lombok.NoArgsConstructor
@lombok.AllArgsConstructor
@javax.annotation.Generated(value = "com.tessell.codegen.TessellJavaGenerator", date = "2024-05-02T15:57:22.183784+05:30[Asia/Kolkata]")
@JsonIgnoreProperties(ignoreUnknown = true)
public class JWTCredentials {
  public static final String JSON_PROPERTY_USER_NAME = "userName";
  private String userName;

  public static final String JSON_PROPERTY_PUBLIC_KEY = "publicKey";
  private String publicKey;

  public static final String JSON_PROPERTY_SEED = "seed";
  private String seed;

  public static final String JSON_PROPERTY_JWT = "jwt";
  private String jwt;


  public JWTCredentials userName(String userName) {
    
    this.userName = userName;
    return this;
  }

   /**
   * Name of the user
   * @return userName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Name of the user")
  @JsonProperty(JSON_PROPERTY_USER_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getUserName() {
    return userName;
  }


  @JsonProperty(JSON_PROPERTY_USER_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUserName(String userName) {
    this.userName = userName;
  }


  public JWTCredentials publicKey(String publicKey) {
    
    this.publicKey = publicKey;
    return this;
  }

   /**
   * Public Key
   * @return publicKey
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Public Key")
  @JsonProperty(JSON_PROPERTY_PUBLIC_KEY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPublicKey() {
    return publicKey;
  }


  @JsonProperty(JSON_PROPERTY_PUBLIC_KEY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPublicKey(String publicKey) {
    this.publicKey = publicKey;
  }


  public JWTCredentials seed(String seed) {
    
    this.seed = seed;
    return this;
  }

   /**
   * Seed
   * @return seed
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Seed")
  @JsonProperty(JSON_PROPERTY_SEED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSeed() {
    return seed;
  }


  @JsonProperty(JSON_PROPERTY_SEED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSeed(String seed) {
    this.seed = seed;
  }


  public JWTCredentials jwt(String jwt) {
    
    this.jwt = jwt;
    return this;
  }

   /**
   * JWT of the user
   * @return jwt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "JWT of the user")
  @JsonProperty(JSON_PROPERTY_JWT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getJwt() {
    return jwt;
  }


  @JsonProperty(JSON_PROPERTY_JWT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setJwt(String jwt) {
    this.jwt = jwt;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    JWTCredentials jwTCredentials = (JWTCredentials) o;
    return Objects.equals(this.userName, jwTCredentials.userName) &&
        Objects.equals(this.publicKey, jwTCredentials.publicKey) &&
        Objects.equals(this.seed, jwTCredentials.seed) &&
        Objects.equals(this.jwt, jwTCredentials.jwt);
  }

  @Override
  public int hashCode() {
    return Objects.hash(userName, publicKey, seed, jwt);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class JWTCredentials {\n");
    sb.append("    userName: ").append(toIndentedString(userName)).append("\n");
    sb.append("    publicKey: ").append(toIndentedString(publicKey)).append("\n");
    sb.append("    seed: ").append(toIndentedString(seed)).append("\n");
    sb.append("    jwt: ").append(toIndentedString(jwt)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

