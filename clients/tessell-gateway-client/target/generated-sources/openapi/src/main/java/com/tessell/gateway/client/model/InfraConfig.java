/*
 * Tessell Gateway Service API
 * Tessell Gateway Service API Specification
 *
 * The version of the OpenAPI document: 1.0
 * Contact: samir.das@tessell.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.tessell.gateway.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

import lombok.*;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
/**
 * InfraConfig
 */
@JsonPropertyOrder({
  InfraConfig.JSON_PROPERTY_K8S_CONFIG,
  InfraConfig.JSON_PROPERTY_LOGGING_CONFIG,
  InfraConfig.JSON_PROPERTY_AGENT_CONFIG,
  InfraConfig.JSON_PROPERTY_NETWORK_PROFILE
})
@JsonTypeName("infraConfig")
@lombok.experimental.SuperBuilder
@lombok.NoArgsConstructor
@lombok.AllArgsConstructor
@javax.annotation.Generated(value = "com.tessell.codegen.TessellJavaGenerator", date = "2024-05-02T15:57:22.183784+05:30[Asia/Kolkata]")
@JsonIgnoreProperties(ignoreUnknown = true)
public class InfraConfig {
  public static final String JSON_PROPERTY_K8S_CONFIG = "k8sConfig";
  private Map<String, String> k8sConfig = null;

  public static final String JSON_PROPERTY_LOGGING_CONFIG = "loggingConfig";
  private Map<String, String> loggingConfig = null;

  public static final String JSON_PROPERTY_AGENT_CONFIG = "agentConfig";
  private Map<String, String> agentConfig = null;

  public static final String JSON_PROPERTY_NETWORK_PROFILE = "networkProfile";
  private Object networkProfile;


  public InfraConfig k8sConfig(Map<String, String> k8sConfig) {
    
    this.k8sConfig = k8sConfig;
    return this;
  }

  public InfraConfig putK8sConfigItem(String key, String k8sConfigItem) {
    if (this.k8sConfig == null) {
      this.k8sConfig = new HashMap<>();
    }
    this.k8sConfig.put(key, k8sConfigItem);
    return this;
  }

   /**
   * Get k8sConfig
   * @return k8sConfig
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_K8S_CONFIG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Map<String, String> getK8sConfig() {
    return k8sConfig;
  }


  @JsonProperty(JSON_PROPERTY_K8S_CONFIG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setK8sConfig(Map<String, String> k8sConfig) {
    this.k8sConfig = k8sConfig;
  }


  public InfraConfig loggingConfig(Map<String, String> loggingConfig) {
    
    this.loggingConfig = loggingConfig;
    return this;
  }

  public InfraConfig putLoggingConfigItem(String key, String loggingConfigItem) {
    if (this.loggingConfig == null) {
      this.loggingConfig = new HashMap<>();
    }
    this.loggingConfig.put(key, loggingConfigItem);
    return this;
  }

   /**
   * Get loggingConfig
   * @return loggingConfig
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_LOGGING_CONFIG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Map<String, String> getLoggingConfig() {
    return loggingConfig;
  }


  @JsonProperty(JSON_PROPERTY_LOGGING_CONFIG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLoggingConfig(Map<String, String> loggingConfig) {
    this.loggingConfig = loggingConfig;
  }


  public InfraConfig agentConfig(Map<String, String> agentConfig) {
    
    this.agentConfig = agentConfig;
    return this;
  }

  public InfraConfig putAgentConfigItem(String key, String agentConfigItem) {
    if (this.agentConfig == null) {
      this.agentConfig = new HashMap<>();
    }
    this.agentConfig.put(key, agentConfigItem);
    return this;
  }

   /**
   * Get agentConfig
   * @return agentConfig
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_AGENT_CONFIG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Map<String, String> getAgentConfig() {
    return agentConfig;
  }


  @JsonProperty(JSON_PROPERTY_AGENT_CONFIG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAgentConfig(Map<String, String> agentConfig) {
    this.agentConfig = agentConfig;
  }


  public InfraConfig networkProfile(Object networkProfile) {
    
    this.networkProfile = networkProfile;
    return this;
  }

   /**
   * Get networkProfile
   * @return networkProfile
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_NETWORK_PROFILE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Object getNetworkProfile() {
    return networkProfile;
  }


  @JsonProperty(JSON_PROPERTY_NETWORK_PROFILE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNetworkProfile(Object networkProfile) {
    this.networkProfile = networkProfile;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InfraConfig infraConfig = (InfraConfig) o;
    return Objects.equals(this.k8sConfig, infraConfig.k8sConfig) &&
        Objects.equals(this.loggingConfig, infraConfig.loggingConfig) &&
        Objects.equals(this.agentConfig, infraConfig.agentConfig) &&
        Objects.equals(this.networkProfile, infraConfig.networkProfile);
  }

  @Override
  public int hashCode() {
    return Objects.hash(k8sConfig, loggingConfig, agentConfig, networkProfile);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InfraConfig {\n");
    sb.append("    k8sConfig: ").append(toIndentedString(k8sConfig)).append("\n");
    sb.append("    loggingConfig: ").append(toIndentedString(loggingConfig)).append("\n");
    sb.append("    agentConfig: ").append(toIndentedString(agentConfig)).append("\n");
    sb.append("    networkProfile: ").append(toIndentedString(networkProfile)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

