/*
 * Tessell Tenant Onboarding Service API
 * Tenant Onboarding API
 *
 * The version of the OpenAPI document: v1beta
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.tessell.tenant.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.tessell.tenant.client.model.TimeUnit;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

import lombok.*;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
/**
 * SetupTenantRequestAllOf
 */
@JsonPropertyOrder({
  SetupTenantRequestAllOf.JSON_PROPERTY_SKIP_VERIFICATION_EMAIL,
  SetupTenantRequestAllOf.JSON_PROPERTY_VERIFICATION_CODE_EXPIRY,
  SetupTenantRequestAllOf.JSON_PROPERTY_REGISTER_TENANT
})
@JsonTypeName("SetupTenantRequest_allOf")
@lombok.experimental.SuperBuilder
@lombok.NoArgsConstructor
@lombok.AllArgsConstructor
@javax.annotation.Generated(value = "com.tessell.codegen.TessellJavaGenerator", date = "2024-05-02T15:57:18.240366+05:30[Asia/Kolkata]")
@JsonIgnoreProperties(ignoreUnknown = true)
public class SetupTenantRequestAllOf {
  public static final String JSON_PROPERTY_SKIP_VERIFICATION_EMAIL = "skipVerificationEmail";
  private Boolean skipVerificationEmail;

  public static final String JSON_PROPERTY_VERIFICATION_CODE_EXPIRY = "verificationCodeExpiry";
  private TimeUnit verificationCodeExpiry;

  public static final String JSON_PROPERTY_REGISTER_TENANT = "registerTenant";
  private Boolean registerTenant = false;


  public SetupTenantRequestAllOf skipVerificationEmail(Boolean skipVerificationEmail) {
    
    this.skipVerificationEmail = skipVerificationEmail;
    return this;
  }

   /**
   * Whether to skip sending verification email
   * @return skipVerificationEmail
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Whether to skip sending verification email")
  @JsonProperty(JSON_PROPERTY_SKIP_VERIFICATION_EMAIL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getSkipVerificationEmail() {
    return skipVerificationEmail;
  }


  @JsonProperty(JSON_PROPERTY_SKIP_VERIFICATION_EMAIL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSkipVerificationEmail(Boolean skipVerificationEmail) {
    this.skipVerificationEmail = skipVerificationEmail;
  }


  public SetupTenantRequestAllOf verificationCodeExpiry(TimeUnit verificationCodeExpiry) {
    
    this.verificationCodeExpiry = verificationCodeExpiry;
    return this;
  }

   /**
   * Get verificationCodeExpiry
   * @return verificationCodeExpiry
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_VERIFICATION_CODE_EXPIRY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public TimeUnit getVerificationCodeExpiry() {
    return verificationCodeExpiry;
  }


  @JsonProperty(JSON_PROPERTY_VERIFICATION_CODE_EXPIRY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setVerificationCodeExpiry(TimeUnit verificationCodeExpiry) {
    this.verificationCodeExpiry = verificationCodeExpiry;
  }


  public SetupTenantRequestAllOf registerTenant(Boolean registerTenant) {
    
    this.registerTenant = registerTenant;
    return this;
  }

   /**
   * include the tenant registration in this request itself. If true, then below details needs to be passed.
   * @return registerTenant
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "include the tenant registration in this request itself. If true, then below details needs to be passed.")
  @JsonProperty(JSON_PROPERTY_REGISTER_TENANT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getRegisterTenant() {
    return registerTenant;
  }


  @JsonProperty(JSON_PROPERTY_REGISTER_TENANT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRegisterTenant(Boolean registerTenant) {
    this.registerTenant = registerTenant;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SetupTenantRequestAllOf setupTenantRequestAllOf = (SetupTenantRequestAllOf) o;
    return Objects.equals(this.skipVerificationEmail, setupTenantRequestAllOf.skipVerificationEmail) &&
        Objects.equals(this.verificationCodeExpiry, setupTenantRequestAllOf.verificationCodeExpiry) &&
        Objects.equals(this.registerTenant, setupTenantRequestAllOf.registerTenant);
  }

  @Override
  public int hashCode() {
    return Objects.hash(skipVerificationEmail, verificationCodeExpiry, registerTenant);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SetupTenantRequestAllOf {\n");
    sb.append("    skipVerificationEmail: ").append(toIndentedString(skipVerificationEmail)).append("\n");
    sb.append("    verificationCodeExpiry: ").append(toIndentedString(verificationCodeExpiry)).append("\n");
    sb.append("    registerTenant: ").append(toIndentedString(registerTenant)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

