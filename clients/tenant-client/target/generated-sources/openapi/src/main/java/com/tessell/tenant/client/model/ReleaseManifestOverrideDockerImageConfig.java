/*
 * Tessell Tenant Onboarding Service API
 * Tenant Onboarding API
 *
 * The version of the OpenAPI document: v1beta
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.tessell.tenant.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.tessell.tenant.client.model.ReleaseManifestOverrideDockerImageConfigAllOf;
import com.tessell.tenant.client.model.ReleaseManifestOverrideItemConfig;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

import lombok.*;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
/**
 * ReleaseManifestOverrideDockerImageConfig
 */
@JsonPropertyOrder({
  ReleaseManifestOverrideDockerImageConfig.JSON_PROPERTY_NAME,
  ReleaseManifestOverrideDockerImageConfig.JSON_PROPERTY_TAG,
  ReleaseManifestOverrideDockerImageConfig.JSON_PROPERTY_REPOSITORY
})
@JsonTypeName("ReleaseManifestOverrideDockerImageConfig")
@lombok.experimental.SuperBuilder
@lombok.NoArgsConstructor
@lombok.AllArgsConstructor
@javax.annotation.Generated(value = "com.tessell.codegen.TessellJavaGenerator", date = "2024-05-02T15:57:18.240366+05:30[Asia/Kolkata]")
@JsonIgnoreProperties(ignoreUnknown = true)
public class ReleaseManifestOverrideDockerImageConfig {
  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_TAG = "tag";
  private String tag;

  /**
   * Which DockerHub repository to pull from
   */
  public enum RepositoryEnum {
    TESSELLDEV("tesselldev"),
    
    TESSELLPROD("tessellprod");

    private String value;

    RepositoryEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static RepositoryEnum fromValue(String value) {
      for (RepositoryEnum b : RepositoryEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_REPOSITORY = "repository";
  private RepositoryEnum repository;


  public ReleaseManifestOverrideDockerImageConfig name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setName(String name) {
    this.name = name;
  }


  public ReleaseManifestOverrideDockerImageConfig tag(String tag) {
    
    this.tag = tag;
    return this;
  }

   /**
   * Get tag
   * @return tag
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_TAG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTag() {
    return tag;
  }


  @JsonProperty(JSON_PROPERTY_TAG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTag(String tag) {
    this.tag = tag;
  }


  public ReleaseManifestOverrideDockerImageConfig repository(RepositoryEnum repository) {
    
    this.repository = repository;
    return this;
  }

   /**
   * Which DockerHub repository to pull from
   * @return repository
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Which DockerHub repository to pull from")
  @JsonProperty(JSON_PROPERTY_REPOSITORY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public RepositoryEnum getRepository() {
    return repository;
  }


  @JsonProperty(JSON_PROPERTY_REPOSITORY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRepository(RepositoryEnum repository) {
    this.repository = repository;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ReleaseManifestOverrideDockerImageConfig releaseManifestOverrideDockerImageConfig = (ReleaseManifestOverrideDockerImageConfig) o;
    return Objects.equals(this.name, releaseManifestOverrideDockerImageConfig.name) &&
        Objects.equals(this.tag, releaseManifestOverrideDockerImageConfig.tag) &&
        Objects.equals(this.repository, releaseManifestOverrideDockerImageConfig.repository);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, tag, repository);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ReleaseManifestOverrideDockerImageConfig {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    tag: ").append(toIndentedString(tag)).append("\n");
    sb.append("    repository: ").append(toIndentedString(repository)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

