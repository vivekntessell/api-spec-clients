/*
 * Tessell Tenant Onboarding Service API
 * Tenant Onboarding API
 *
 * The version of the OpenAPI document: v1beta
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.tessell.tenant.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.UUID;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

import lombok.*;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
/**
 * InfraDeploymentSetupConfig
 */
@JsonPropertyOrder({
  InfraDeploymentSetupConfig.JSON_PROPERTY_DEPLOYMENT_NAME,
  InfraDeploymentSetupConfig.JSON_PROPERTY_DEPLOYMENT_PLAN,
  InfraDeploymentSetupConfig.JSON_PROPERTY_IS_SHARED_CONTROL_PLANE,
  InfraDeploymentSetupConfig.JSON_PROPERTY_DEDICATED_CLOUD_ACCOUNT_ID,
  InfraDeploymentSetupConfig.JSON_PROPERTY_METADATA_REPO_RESOURCE_ID,
  InfraDeploymentSetupConfig.JSON_PROPERTY_NAMESPACE
})
@JsonTypeName("InfraDeploymentSetupConfig")
@lombok.experimental.SuperBuilder
@lombok.NoArgsConstructor
@lombok.AllArgsConstructor
@javax.annotation.Generated(value = "com.tessell.codegen.TessellJavaGenerator", date = "2024-05-02T15:57:18.240366+05:30[Asia/Kolkata]")
@JsonIgnoreProperties(ignoreUnknown = true)
public class InfraDeploymentSetupConfig {
  public static final String JSON_PROPERTY_DEPLOYMENT_NAME = "deploymentName";
  private String deploymentName;

  public static final String JSON_PROPERTY_DEPLOYMENT_PLAN = "deploymentPlan";
  private String deploymentPlan;

  public static final String JSON_PROPERTY_IS_SHARED_CONTROL_PLANE = "isSharedControlPlane";
  private Boolean isSharedControlPlane = false;

  public static final String JSON_PROPERTY_DEDICATED_CLOUD_ACCOUNT_ID = "dedicatedCloudAccountId";
  private UUID dedicatedCloudAccountId;

  public static final String JSON_PROPERTY_METADATA_REPO_RESOURCE_ID = "metadataRepoResourceId";
  private String metadataRepoResourceId;

  public static final String JSON_PROPERTY_NAMESPACE = "namespace";
  private String namespace;


  public InfraDeploymentSetupConfig deploymentName(String deploymentName) {
    
    this.deploymentName = deploymentName;
    return this;
  }

   /**
   * optional infra deployment name where the tenant will be onboarded
   * @return deploymentName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "optional infra deployment name where the tenant will be onboarded")
  @JsonProperty(JSON_PROPERTY_DEPLOYMENT_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDeploymentName() {
    return deploymentName;
  }


  @JsonProperty(JSON_PROPERTY_DEPLOYMENT_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeploymentName(String deploymentName) {
    this.deploymentName = deploymentName;
  }


  public InfraDeploymentSetupConfig deploymentPlan(String deploymentPlan) {
    
    this.deploymentPlan = deploymentPlan;
    return this;
  }

   /**
   * Get deploymentPlan
   * @return deploymentPlan
  **/
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_DEPLOYMENT_PLAN)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getDeploymentPlan() {
    return deploymentPlan;
  }


  @JsonProperty(JSON_PROPERTY_DEPLOYMENT_PLAN)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDeploymentPlan(String deploymentPlan) {
    this.deploymentPlan = deploymentPlan;
  }


  public InfraDeploymentSetupConfig isSharedControlPlane(Boolean isSharedControlPlane) {
    
    this.isSharedControlPlane = isSharedControlPlane;
    return this;
  }

   /**
   * Get isSharedControlPlane
   * @return isSharedControlPlane
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_IS_SHARED_CONTROL_PLANE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getIsSharedControlPlane() {
    return isSharedControlPlane;
  }


  @JsonProperty(JSON_PROPERTY_IS_SHARED_CONTROL_PLANE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIsSharedControlPlane(Boolean isSharedControlPlane) {
    this.isSharedControlPlane = isSharedControlPlane;
  }


  public InfraDeploymentSetupConfig dedicatedCloudAccountId(UUID dedicatedCloudAccountId) {
    
    this.dedicatedCloudAccountId = dedicatedCloudAccountId;
    return this;
  }

   /**
   * Cloud account id in case the deployment plan has dedicated cloud account to be used for
   * @return dedicatedCloudAccountId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Cloud account id in case the deployment plan has dedicated cloud account to be used for")
  @JsonProperty(JSON_PROPERTY_DEDICATED_CLOUD_ACCOUNT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public UUID getDedicatedCloudAccountId() {
    return dedicatedCloudAccountId;
  }


  @JsonProperty(JSON_PROPERTY_DEDICATED_CLOUD_ACCOUNT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDedicatedCloudAccountId(UUID dedicatedCloudAccountId) {
    this.dedicatedCloudAccountId = dedicatedCloudAccountId;
  }


  public InfraDeploymentSetupConfig metadataRepoResourceId(String metadataRepoResourceId) {
    
    this.metadataRepoResourceId = metadataRepoResourceId;
    return this;
  }

   /**
   * The identifier of the metadata repository to be used
   * @return metadataRepoResourceId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The identifier of the metadata repository to be used")
  @JsonProperty(JSON_PROPERTY_METADATA_REPO_RESOURCE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getMetadataRepoResourceId() {
    return metadataRepoResourceId;
  }


  @JsonProperty(JSON_PROPERTY_METADATA_REPO_RESOURCE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMetadataRepoResourceId(String metadataRepoResourceId) {
    this.metadataRepoResourceId = metadataRepoResourceId;
  }


  public InfraDeploymentSetupConfig namespace(String namespace) {
    
    this.namespace = namespace;
    return this;
  }

   /**
   * Namespace in which the PE or SCP tenant is to be onboarded
   * @return namespace
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Namespace in which the PE or SCP tenant is to be onboarded")
  @JsonProperty(JSON_PROPERTY_NAMESPACE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getNamespace() {
    return namespace;
  }


  @JsonProperty(JSON_PROPERTY_NAMESPACE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNamespace(String namespace) {
    this.namespace = namespace;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InfraDeploymentSetupConfig infraDeploymentSetupConfig = (InfraDeploymentSetupConfig) o;
    return Objects.equals(this.deploymentName, infraDeploymentSetupConfig.deploymentName) &&
        Objects.equals(this.deploymentPlan, infraDeploymentSetupConfig.deploymentPlan) &&
        Objects.equals(this.isSharedControlPlane, infraDeploymentSetupConfig.isSharedControlPlane) &&
        Objects.equals(this.dedicatedCloudAccountId, infraDeploymentSetupConfig.dedicatedCloudAccountId) &&
        Objects.equals(this.metadataRepoResourceId, infraDeploymentSetupConfig.metadataRepoResourceId) &&
        Objects.equals(this.namespace, infraDeploymentSetupConfig.namespace);
  }

  @Override
  public int hashCode() {
    return Objects.hash(deploymentName, deploymentPlan, isSharedControlPlane, dedicatedCloudAccountId, metadataRepoResourceId, namespace);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InfraDeploymentSetupConfig {\n");
    sb.append("    deploymentName: ").append(toIndentedString(deploymentName)).append("\n");
    sb.append("    deploymentPlan: ").append(toIndentedString(deploymentPlan)).append("\n");
    sb.append("    isSharedControlPlane: ").append(toIndentedString(isSharedControlPlane)).append("\n");
    sb.append("    dedicatedCloudAccountId: ").append(toIndentedString(dedicatedCloudAccountId)).append("\n");
    sb.append("    metadataRepoResourceId: ").append(toIndentedString(metadataRepoResourceId)).append("\n");
    sb.append("    namespace: ").append(toIndentedString(namespace)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

