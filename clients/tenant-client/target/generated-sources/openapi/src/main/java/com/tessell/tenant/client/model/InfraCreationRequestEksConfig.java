/*
 * Tessell Tenant Onboarding Service API
 * Tenant Onboarding API
 *
 * The version of the OpenAPI document: v1beta
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.tessell.tenant.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

import lombok.*;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
/**
 * This is the eks cluster config for shared infra creation
 */
@ApiModel(description = "This is the eks cluster config for shared infra creation")
@JsonPropertyOrder({
  InfraCreationRequestEksConfig.JSON_PROPERTY_TGS_SSL_CERT_ARN,
  InfraCreationRequestEksConfig.JSON_PROPERTY_PUSHPROX_SSL_CERT_ARN
})
@JsonTypeName("InfraCreationRequestEksConfig")
@lombok.experimental.SuperBuilder
@lombok.NoArgsConstructor
@lombok.AllArgsConstructor
@javax.annotation.Generated(value = "com.tessell.codegen.TessellJavaGenerator", date = "2024-05-02T15:57:18.240366+05:30[Asia/Kolkata]")
@JsonIgnoreProperties(ignoreUnknown = true)
public class InfraCreationRequestEksConfig {
  public static final String JSON_PROPERTY_TGS_SSL_CERT_ARN = "tgsSslCertArn";
  private String tgsSslCertArn;

  public static final String JSON_PROPERTY_PUSHPROX_SSL_CERT_ARN = "pushproxSslCertArn";
  private String pushproxSslCertArn;


  public InfraCreationRequestEksConfig tgsSslCertArn(String tgsSslCertArn) {
    
    this.tgsSslCertArn = tgsSslCertArn;
    return this;
  }

   /**
   * TGS SSL certificate to be used while creating nats load balancer
   * @return tgsSslCertArn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "TGS SSL certificate to be used while creating nats load balancer")
  @JsonProperty(JSON_PROPERTY_TGS_SSL_CERT_ARN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTgsSslCertArn() {
    return tgsSslCertArn;
  }


  @JsonProperty(JSON_PROPERTY_TGS_SSL_CERT_ARN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTgsSslCertArn(String tgsSslCertArn) {
    this.tgsSslCertArn = tgsSslCertArn;
  }


  public InfraCreationRequestEksConfig pushproxSslCertArn(String pushproxSslCertArn) {
    
    this.pushproxSslCertArn = pushproxSslCertArn;
    return this;
  }

   /**
   * Pushprox SSL certificate to be used while creating pushprox load balancer
   * @return pushproxSslCertArn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Pushprox SSL certificate to be used while creating pushprox load balancer")
  @JsonProperty(JSON_PROPERTY_PUSHPROX_SSL_CERT_ARN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPushproxSslCertArn() {
    return pushproxSslCertArn;
  }


  @JsonProperty(JSON_PROPERTY_PUSHPROX_SSL_CERT_ARN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPushproxSslCertArn(String pushproxSslCertArn) {
    this.pushproxSslCertArn = pushproxSslCertArn;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InfraCreationRequestEksConfig infraCreationRequestEksConfig = (InfraCreationRequestEksConfig) o;
    return Objects.equals(this.tgsSslCertArn, infraCreationRequestEksConfig.tgsSslCertArn) &&
        Objects.equals(this.pushproxSslCertArn, infraCreationRequestEksConfig.pushproxSslCertArn);
  }

  @Override
  public int hashCode() {
    return Objects.hash(tgsSslCertArn, pushproxSslCertArn);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InfraCreationRequestEksConfig {\n");
    sb.append("    tgsSslCertArn: ").append(toIndentedString(tgsSslCertArn)).append("\n");
    sb.append("    pushproxSslCertArn: ").append(toIndentedString(pushproxSslCertArn)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

