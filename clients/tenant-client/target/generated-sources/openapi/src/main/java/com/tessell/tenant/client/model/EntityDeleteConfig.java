/*
 * Tessell Tenant Onboarding Service API
 * Tenant Onboarding API
 *
 * The version of the OpenAPI document: v1beta
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.tessell.tenant.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.tessell.tenant.client.model.EntityType;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

import lombok.*;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
/**
 * Represents the object of each entity that needs to be cleaned up during tenant deletion
 */
@ApiModel(description = "Represents the object of each entity that needs to be cleaned up during tenant deletion")
@JsonPropertyOrder({
  EntityDeleteConfig.JSON_PROPERTY_ENTITY_TYPE,
  EntityDeleteConfig.JSON_PROPERTY_DEPENDENT_ENTITIES,
  EntityDeleteConfig.JSON_PROPERTY_GLOBAL,
  EntityDeleteConfig.JSON_PROPERTY_ENTITY_DELETE_URL,
  EntityDeleteConfig.JSON_PROPERTY_ENTITY_DELETE_STATUS_URL,
  EntityDeleteConfig.JSON_PROPERTY_TIMEOUT,
  EntityDeleteConfig.JSON_PROPERTY_SLEEP_TIME
})
@JsonTypeName("EntityDeleteConfig")
@lombok.experimental.SuperBuilder
@lombok.NoArgsConstructor
@lombok.AllArgsConstructor
@javax.annotation.Generated(value = "com.tessell.codegen.TessellJavaGenerator", date = "2024-05-02T15:57:18.240366+05:30[Asia/Kolkata]")
@JsonIgnoreProperties(ignoreUnknown = true)
public class EntityDeleteConfig {
  public static final String JSON_PROPERTY_ENTITY_TYPE = "entityType";
  private EntityType entityType;

  public static final String JSON_PROPERTY_DEPENDENT_ENTITIES = "dependentEntities";
  private List<EntityType> dependentEntities = null;

  public static final String JSON_PROPERTY_GLOBAL = "global";
  private Boolean global;

  public static final String JSON_PROPERTY_ENTITY_DELETE_URL = "entityDeleteUrl";
  private String entityDeleteUrl;

  public static final String JSON_PROPERTY_ENTITY_DELETE_STATUS_URL = "entityDeleteStatusUrl";
  private String entityDeleteStatusUrl;

  public static final String JSON_PROPERTY_TIMEOUT = "timeout";
  private Integer timeout;

  public static final String JSON_PROPERTY_SLEEP_TIME = "sleepTime";
  private Integer sleepTime;


  public EntityDeleteConfig entityType(EntityType entityType) {
    
    this.entityType = entityType;
    return this;
  }

   /**
   * Get entityType
   * @return entityType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_ENTITY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public EntityType getEntityType() {
    return entityType;
  }


  @JsonProperty(JSON_PROPERTY_ENTITY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEntityType(EntityType entityType) {
    this.entityType = entityType;
  }


  public EntityDeleteConfig dependentEntities(List<EntityType> dependentEntities) {
    
    this.dependentEntities = dependentEntities;
    return this;
  }

  public EntityDeleteConfig addDependentEntitiesItem(EntityType dependentEntitiesItem) {
    if (this.dependentEntities == null) {
      this.dependentEntities = new ArrayList<>();
    }
    this.dependentEntities.add(dependentEntitiesItem);
    return this;
  }

   /**
   * List of entity types which needs to be deleted after the entities of current type
   * @return dependentEntities
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "List of entity types which needs to be deleted after the entities of current type")
  @JsonProperty(JSON_PROPERTY_DEPENDENT_ENTITIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<EntityType> getDependentEntities() {
    return dependentEntities;
  }


  @JsonProperty(JSON_PROPERTY_DEPENDENT_ENTITIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDependentEntities(List<EntityType> dependentEntities) {
    this.dependentEntities = dependentEntities;
  }


  public EntityDeleteConfig global(Boolean global) {
    
    this.global = global;
    return this;
  }

   /**
   * False, if the entity type gets created within a subscription
   * @return global
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "False, if the entity type gets created within a subscription")
  @JsonProperty(JSON_PROPERTY_GLOBAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getGlobal() {
    return global;
  }


  @JsonProperty(JSON_PROPERTY_GLOBAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setGlobal(Boolean global) {
    this.global = global;
  }


  public EntityDeleteConfig entityDeleteUrl(String entityDeleteUrl) {
    
    this.entityDeleteUrl = entityDeleteUrl;
    return this;
  }

   /**
   * Url for submitting a bulk delete api
   * @return entityDeleteUrl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Url for submitting a bulk delete api")
  @JsonProperty(JSON_PROPERTY_ENTITY_DELETE_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getEntityDeleteUrl() {
    return entityDeleteUrl;
  }


  @JsonProperty(JSON_PROPERTY_ENTITY_DELETE_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEntityDeleteUrl(String entityDeleteUrl) {
    this.entityDeleteUrl = entityDeleteUrl;
  }


  public EntityDeleteConfig entityDeleteStatusUrl(String entityDeleteStatusUrl) {
    
    this.entityDeleteStatusUrl = entityDeleteStatusUrl;
    return this;
  }

   /**
   * Url for getting the status of entity bulk delete api
   * @return entityDeleteStatusUrl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Url for getting the status of entity bulk delete api")
  @JsonProperty(JSON_PROPERTY_ENTITY_DELETE_STATUS_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getEntityDeleteStatusUrl() {
    return entityDeleteStatusUrl;
  }


  @JsonProperty(JSON_PROPERTY_ENTITY_DELETE_STATUS_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEntityDeleteStatusUrl(String entityDeleteStatusUrl) {
    this.entityDeleteStatusUrl = entityDeleteStatusUrl;
  }


  public EntityDeleteConfig timeout(Integer timeout) {
    
    this.timeout = timeout;
    return this;
  }

   /**
   * Timeout in secs for bulk delete operation
   * @return timeout
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Timeout in secs for bulk delete operation")
  @JsonProperty(JSON_PROPERTY_TIMEOUT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getTimeout() {
    return timeout;
  }


  @JsonProperty(JSON_PROPERTY_TIMEOUT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTimeout(Integer timeout) {
    this.timeout = timeout;
  }


  public EntityDeleteConfig sleepTime(Integer sleepTime) {
    
    this.sleepTime = sleepTime;
    return this;
  }

   /**
   * Sleep time in secs between bulk status calls
   * @return sleepTime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Sleep time in secs between bulk status calls")
  @JsonProperty(JSON_PROPERTY_SLEEP_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getSleepTime() {
    return sleepTime;
  }


  @JsonProperty(JSON_PROPERTY_SLEEP_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSleepTime(Integer sleepTime) {
    this.sleepTime = sleepTime;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EntityDeleteConfig entityDeleteConfig = (EntityDeleteConfig) o;
    return Objects.equals(this.entityType, entityDeleteConfig.entityType) &&
        Objects.equals(this.dependentEntities, entityDeleteConfig.dependentEntities) &&
        Objects.equals(this.global, entityDeleteConfig.global) &&
        Objects.equals(this.entityDeleteUrl, entityDeleteConfig.entityDeleteUrl) &&
        Objects.equals(this.entityDeleteStatusUrl, entityDeleteConfig.entityDeleteStatusUrl) &&
        Objects.equals(this.timeout, entityDeleteConfig.timeout) &&
        Objects.equals(this.sleepTime, entityDeleteConfig.sleepTime);
  }

  @Override
  public int hashCode() {
    return Objects.hash(entityType, dependentEntities, global, entityDeleteUrl, entityDeleteStatusUrl, timeout, sleepTime);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EntityDeleteConfig {\n");
    sb.append("    entityType: ").append(toIndentedString(entityType)).append("\n");
    sb.append("    dependentEntities: ").append(toIndentedString(dependentEntities)).append("\n");
    sb.append("    global: ").append(toIndentedString(global)).append("\n");
    sb.append("    entityDeleteUrl: ").append(toIndentedString(entityDeleteUrl)).append("\n");
    sb.append("    entityDeleteStatusUrl: ").append(toIndentedString(entityDeleteStatusUrl)).append("\n");
    sb.append("    timeout: ").append(toIndentedString(timeout)).append("\n");
    sb.append("    sleepTime: ").append(toIndentedString(sleepTime)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

