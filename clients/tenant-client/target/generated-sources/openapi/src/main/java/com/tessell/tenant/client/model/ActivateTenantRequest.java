/*
 * Tessell Tenant Onboarding Service API
 * Tenant Onboarding API
 *
 * The version of the OpenAPI document: v1beta
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.tessell.tenant.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.tessell.tenant.client.model.AuthenticationType;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

import lombok.*;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
/**
 * ActivateTenantRequest
 */
@JsonPropertyOrder({
  ActivateTenantRequest.JSON_PROPERTY_CODE,
  ActivateTenantRequest.JSON_PROPERTY_EMAIL_ID,
  ActivateTenantRequest.JSON_PROPERTY_AUTH_TYPE,
  ActivateTenantRequest.JSON_PROPERTY_PASSWORD,
  ActivateTenantRequest.JSON_PROPERTY_OAUTH_TOKEN
})
@JsonTypeName("ActivateTenantRequest")
@lombok.experimental.SuperBuilder
@lombok.NoArgsConstructor
@lombok.AllArgsConstructor
@javax.annotation.Generated(value = "com.tessell.codegen.TessellJavaGenerator", date = "2024-05-02T15:57:18.240366+05:30[Asia/Kolkata]")
@JsonIgnoreProperties(ignoreUnknown = true)
public class ActivateTenantRequest {
  public static final String JSON_PROPERTY_CODE = "code";
  private String code;

  public static final String JSON_PROPERTY_EMAIL_ID = "emailId";
  private String emailId;

  public static final String JSON_PROPERTY_AUTH_TYPE = "authType";
  private AuthenticationType authType;

  public static final String JSON_PROPERTY_PASSWORD = "password";
  private String password;

  public static final String JSON_PROPERTY_OAUTH_TOKEN = "oauthToken";
  private String oauthToken;


  public ActivateTenantRequest code(String code) {
    
    this.code = code;
    return this;
  }

   /**
   * Code sent via email
   * @return code
  **/
  @ApiModelProperty(required = true, value = "Code sent via email")
  @JsonProperty(JSON_PROPERTY_CODE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getCode() {
    return code;
  }


  @JsonProperty(JSON_PROPERTY_CODE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCode(String code) {
    this.code = code;
  }


  public ActivateTenantRequest emailId(String emailId) {
    
    this.emailId = emailId;
    return this;
  }

   /**
   * Tenant user&#39;s email address
   * @return emailId
  **/
  @ApiModelProperty(required = true, value = "Tenant user's email address")
  @JsonProperty(JSON_PROPERTY_EMAIL_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getEmailId() {
    return emailId;
  }


  @JsonProperty(JSON_PROPERTY_EMAIL_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setEmailId(String emailId) {
    this.emailId = emailId;
  }


  public ActivateTenantRequest authType(AuthenticationType authType) {
    
    this.authType = authType;
    return this;
  }

   /**
   * Get authType
   * @return authType
  **/
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_AUTH_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public AuthenticationType getAuthType() {
    return authType;
  }


  @JsonProperty(JSON_PROPERTY_AUTH_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAuthType(AuthenticationType authType) {
    this.authType = authType;
  }


  public ActivateTenantRequest password(String password) {
    
    this.password = password;
    return this;
  }

   /**
   * Tenant user&#39;s login password
   * @return password
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Tenant user's login password")
  @JsonProperty(JSON_PROPERTY_PASSWORD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPassword() {
    return password;
  }


  @JsonProperty(JSON_PROPERTY_PASSWORD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPassword(String password) {
    this.password = password;
  }


  public ActivateTenantRequest oauthToken(String oauthToken) {
    
    this.oauthToken = oauthToken;
    return this;
  }

   /**
   * Oauth Token from the IDP
   * @return oauthToken
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Oauth Token from the IDP")
  @JsonProperty(JSON_PROPERTY_OAUTH_TOKEN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getOauthToken() {
    return oauthToken;
  }


  @JsonProperty(JSON_PROPERTY_OAUTH_TOKEN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOauthToken(String oauthToken) {
    this.oauthToken = oauthToken;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ActivateTenantRequest activateTenantRequest = (ActivateTenantRequest) o;
    return Objects.equals(this.code, activateTenantRequest.code) &&
        Objects.equals(this.emailId, activateTenantRequest.emailId) &&
        Objects.equals(this.authType, activateTenantRequest.authType) &&
        Objects.equals(this.password, activateTenantRequest.password) &&
        Objects.equals(this.oauthToken, activateTenantRequest.oauthToken);
  }

  @Override
  public int hashCode() {
    return Objects.hash(code, emailId, authType, password, oauthToken);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ActivateTenantRequest {\n");
    sb.append("    code: ").append(toIndentedString(code)).append("\n");
    sb.append("    emailId: ").append(toIndentedString(emailId)).append("\n");
    sb.append("    authType: ").append(toIndentedString(authType)).append("\n");
    sb.append("    password: ").append(toIndentedString(password)).append("\n");
    sb.append("    oauthToken: ").append(toIndentedString(oauthToken)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

