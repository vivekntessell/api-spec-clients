/*
 * Tessell Tenant Onboarding Service API
 * Tenant Onboarding API
 *
 * The version of the OpenAPI document: v1beta
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.tessell.tenant.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

import lombok.*;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
/**
 * InfraK8sNodeGroupConfigPayload
 */
@JsonPropertyOrder({
  InfraK8sNodeGroupConfigPayload.JSON_PROPERTY_NAME,
  InfraK8sNodeGroupConfigPayload.JSON_PROPERTY_MIN,
  InfraK8sNodeGroupConfigPayload.JSON_PROPERTY_MAX,
  InfraK8sNodeGroupConfigPayload.JSON_PROPERTY_DESIRED,
  InfraK8sNodeGroupConfigPayload.JSON_PROPERTY_INSTANCE_TYPES
})
@JsonTypeName("InfraK8sNodeGroupConfigPayload")
@lombok.experimental.SuperBuilder
@lombok.NoArgsConstructor
@lombok.AllArgsConstructor
@javax.annotation.Generated(value = "com.tessell.codegen.TessellJavaGenerator", date = "2024-05-02T15:57:18.240366+05:30[Asia/Kolkata]")
@JsonIgnoreProperties(ignoreUnknown = true)
public class InfraK8sNodeGroupConfigPayload {
  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_MIN = "min";
  private String min;

  public static final String JSON_PROPERTY_MAX = "max";
  private String max;

  public static final String JSON_PROPERTY_DESIRED = "desired";
  private String desired;

  public static final String JSON_PROPERTY_INSTANCE_TYPES = "instanceTypes";
  private List<String> instanceTypes = new ArrayList<>();


  public InfraK8sNodeGroupConfigPayload name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setName(String name) {
    this.name = name;
  }


  public InfraK8sNodeGroupConfigPayload min(String min) {
    
    this.min = min;
    return this;
  }

   /**
   * Get min
   * @return min
  **/
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_MIN)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getMin() {
    return min;
  }


  @JsonProperty(JSON_PROPERTY_MIN)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setMin(String min) {
    this.min = min;
  }


  public InfraK8sNodeGroupConfigPayload max(String max) {
    
    this.max = max;
    return this;
  }

   /**
   * Get max
   * @return max
  **/
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_MAX)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getMax() {
    return max;
  }


  @JsonProperty(JSON_PROPERTY_MAX)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setMax(String max) {
    this.max = max;
  }


  public InfraK8sNodeGroupConfigPayload desired(String desired) {
    
    this.desired = desired;
    return this;
  }

   /**
   * Get desired
   * @return desired
  **/
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_DESIRED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getDesired() {
    return desired;
  }


  @JsonProperty(JSON_PROPERTY_DESIRED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDesired(String desired) {
    this.desired = desired;
  }


  public InfraK8sNodeGroupConfigPayload instanceTypes(List<String> instanceTypes) {
    
    this.instanceTypes = instanceTypes;
    return this;
  }

  public InfraK8sNodeGroupConfigPayload addInstanceTypesItem(String instanceTypesItem) {
    this.instanceTypes.add(instanceTypesItem);
    return this;
  }

   /**
   * Get instanceTypes
   * @return instanceTypes
  **/
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_INSTANCE_TYPES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<String> getInstanceTypes() {
    return instanceTypes;
  }


  @JsonProperty(JSON_PROPERTY_INSTANCE_TYPES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setInstanceTypes(List<String> instanceTypes) {
    this.instanceTypes = instanceTypes;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InfraK8sNodeGroupConfigPayload infraK8sNodeGroupConfigPayload = (InfraK8sNodeGroupConfigPayload) o;
    return Objects.equals(this.name, infraK8sNodeGroupConfigPayload.name) &&
        Objects.equals(this.min, infraK8sNodeGroupConfigPayload.min) &&
        Objects.equals(this.max, infraK8sNodeGroupConfigPayload.max) &&
        Objects.equals(this.desired, infraK8sNodeGroupConfigPayload.desired) &&
        Objects.equals(this.instanceTypes, infraK8sNodeGroupConfigPayload.instanceTypes);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, min, max, desired, instanceTypes);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InfraK8sNodeGroupConfigPayload {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    min: ").append(toIndentedString(min)).append("\n");
    sb.append("    max: ").append(toIndentedString(max)).append("\n");
    sb.append("    desired: ").append(toIndentedString(desired)).append("\n");
    sb.append("    instanceTypes: ").append(toIndentedString(instanceTypes)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

