/*
 * Tessell Tenant Onboarding Service API
 * Tenant Onboarding API
 *
 * The version of the OpenAPI document: v1beta
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.tessell.tenant.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

import lombok.*;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
/**
 * DockerConfig
 */
@JsonPropertyOrder({
  DockerConfig.JSON_PROPERTY_REGISTRY,
  DockerConfig.JSON_PROPERTY_CREDENTIALS_JSON_BASE64,
  DockerConfig.JSON_PROPERTY_TAG_OVERRIDE
})
@JsonTypeName("DockerConfig")
@lombok.experimental.SuperBuilder
@lombok.NoArgsConstructor
@lombok.AllArgsConstructor
@javax.annotation.Generated(value = "com.tessell.codegen.TessellJavaGenerator", date = "2024-05-02T15:57:18.240366+05:30[Asia/Kolkata]")
@JsonIgnoreProperties(ignoreUnknown = true)
public class DockerConfig {
  public static final String JSON_PROPERTY_REGISTRY = "registry";
  private String registry;

  public static final String JSON_PROPERTY_CREDENTIALS_JSON_BASE64 = "credentialsJsonBase64";
  private String credentialsJsonBase64;

  public static final String JSON_PROPERTY_TAG_OVERRIDE = "tagOverride";
  private Map<String, String> tagOverride = null;


  public DockerConfig registry(String registry) {
    
    this.registry = registry;
    return this;
  }

   /**
   * Get registry
   * @return registry
  **/
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_REGISTRY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getRegistry() {
    return registry;
  }


  @JsonProperty(JSON_PROPERTY_REGISTRY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setRegistry(String registry) {
    this.registry = registry;
  }


  public DockerConfig credentialsJsonBase64(String credentialsJsonBase64) {
    
    this.credentialsJsonBase64 = credentialsJsonBase64;
    return this;
  }

   /**
   * Get credentialsJsonBase64
   * @return credentialsJsonBase64
  **/
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_CREDENTIALS_JSON_BASE64)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getCredentialsJsonBase64() {
    return credentialsJsonBase64;
  }


  @JsonProperty(JSON_PROPERTY_CREDENTIALS_JSON_BASE64)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCredentialsJsonBase64(String credentialsJsonBase64) {
    this.credentialsJsonBase64 = credentialsJsonBase64;
  }


  public DockerConfig tagOverride(Map<String, String> tagOverride) {
    
    this.tagOverride = tagOverride;
    return this;
  }

  public DockerConfig putTagOverrideItem(String key, String tagOverrideItem) {
    if (this.tagOverride == null) {
      this.tagOverride = new HashMap<>();
    }
    this.tagOverride.put(key, tagOverrideItem);
    return this;
  }

   /**
   * Get tagOverride
   * @return tagOverride
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_TAG_OVERRIDE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Map<String, String> getTagOverride() {
    return tagOverride;
  }


  @JsonProperty(JSON_PROPERTY_TAG_OVERRIDE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTagOverride(Map<String, String> tagOverride) {
    this.tagOverride = tagOverride;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DockerConfig dockerConfig = (DockerConfig) o;
    return Objects.equals(this.registry, dockerConfig.registry) &&
        Objects.equals(this.credentialsJsonBase64, dockerConfig.credentialsJsonBase64) &&
        Objects.equals(this.tagOverride, dockerConfig.tagOverride);
  }

  @Override
  public int hashCode() {
    return Objects.hash(registry, credentialsJsonBase64, tagOverride);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DockerConfig {\n");
    sb.append("    registry: ").append(toIndentedString(registry)).append("\n");
    sb.append("    credentialsJsonBase64: ").append(toIndentedString(credentialsJsonBase64)).append("\n");
    sb.append("    tagOverride: ").append(toIndentedString(tagOverride)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

