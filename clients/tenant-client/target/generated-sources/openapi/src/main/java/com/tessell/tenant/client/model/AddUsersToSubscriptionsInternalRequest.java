/*
 * Tessell Tenant Onboarding Service API
 * Tenant Onboarding API
 *
 * The version of the OpenAPI document: v1beta
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.tessell.tenant.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.tessell.tenant.client.model.UserRoleInternalView;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

import lombok.*;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
/**
 * AddUsersToSubscriptionsInternalRequest
 */
@JsonPropertyOrder({
  AddUsersToSubscriptionsInternalRequest.JSON_PROPERTY_SUBSCRIPTIONS,
  AddUsersToSubscriptionsInternalRequest.JSON_PROPERTY_USERS
})
@JsonTypeName("AddUsersToSubscriptionsInternalRequest")
@lombok.experimental.SuperBuilder
@lombok.NoArgsConstructor
@lombok.AllArgsConstructor
@javax.annotation.Generated(value = "com.tessell.codegen.TessellJavaGenerator", date = "2024-05-02T15:57:18.240366+05:30[Asia/Kolkata]")
@JsonIgnoreProperties(ignoreUnknown = true)
public class AddUsersToSubscriptionsInternalRequest {
  public static final String JSON_PROPERTY_SUBSCRIPTIONS = "subscriptions";
  private List<String> subscriptions = new ArrayList<>();

  public static final String JSON_PROPERTY_USERS = "users";
  private List<UserRoleInternalView> users = new ArrayList<>();


  public AddUsersToSubscriptionsInternalRequest subscriptions(List<String> subscriptions) {
    
    this.subscriptions = subscriptions;
    return this;
  }

  public AddUsersToSubscriptionsInternalRequest addSubscriptionsItem(String subscriptionsItem) {
    this.subscriptions.add(subscriptionsItem);
    return this;
  }

   /**
   * Get subscriptions
   * @return subscriptions
  **/
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_SUBSCRIPTIONS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<String> getSubscriptions() {
    return subscriptions;
  }


  @JsonProperty(JSON_PROPERTY_SUBSCRIPTIONS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSubscriptions(List<String> subscriptions) {
    this.subscriptions = subscriptions;
  }


  public AddUsersToSubscriptionsInternalRequest users(List<UserRoleInternalView> users) {
    
    this.users = users;
    return this;
  }

  public AddUsersToSubscriptionsInternalRequest addUsersItem(UserRoleInternalView usersItem) {
    this.users.add(usersItem);
    return this;
  }

   /**
   * Get users
   * @return users
  **/
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_USERS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<UserRoleInternalView> getUsers() {
    return users;
  }


  @JsonProperty(JSON_PROPERTY_USERS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setUsers(List<UserRoleInternalView> users) {
    this.users = users;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AddUsersToSubscriptionsInternalRequest addUsersToSubscriptionsInternalRequest = (AddUsersToSubscriptionsInternalRequest) o;
    return Objects.equals(this.subscriptions, addUsersToSubscriptionsInternalRequest.subscriptions) &&
        Objects.equals(this.users, addUsersToSubscriptionsInternalRequest.users);
  }

  @Override
  public int hashCode() {
    return Objects.hash(subscriptions, users);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AddUsersToSubscriptionsInternalRequest {\n");
    sb.append("    subscriptions: ").append(toIndentedString(subscriptions)).append("\n");
    sb.append("    users: ").append(toIndentedString(users)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

