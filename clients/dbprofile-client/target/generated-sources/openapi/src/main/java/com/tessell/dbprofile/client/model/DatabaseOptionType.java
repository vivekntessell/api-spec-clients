/*
 * REST API Documentation
 * REST API Documentation
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@tessell.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.tessell.dbprofile.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.tessell.dbprofile.client.model.DatabaseOptionSettingType;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

import lombok.*;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
/**
 * DatabaseOptionType
 */
@JsonPropertyOrder({
  DatabaseOptionType.JSON_PROPERTY_APPLY_NOW,
  DatabaseOptionType.JSON_PROPERTY_DESCRIPTION,
  DatabaseOptionType.JSON_PROPERTY_NAME,
  DatabaseOptionType.JSON_PROPERTY_OPTION_SETTINGS,
  DatabaseOptionType.JSON_PROPERTY_PERMANENT,
  DatabaseOptionType.JSON_PROPERTY_PERSISTENT
})
@JsonTypeName("DatabaseOptionType")
@lombok.Builder
@lombok.NoArgsConstructor
@lombok.AllArgsConstructor
@javax.annotation.Generated(value = "com.tessell.codegen.TessellJavaGenerator", date = "2024-05-02T15:56:18.047782+05:30[Asia/Kolkata]")
@JsonIgnoreProperties(ignoreUnknown = true)
public class DatabaseOptionType {
  public static final String JSON_PROPERTY_APPLY_NOW = "applyNow";
  private Boolean applyNow;

  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  private String description;

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_OPTION_SETTINGS = "optionSettings";
  private List<DatabaseOptionSettingType> optionSettings = null;

  public static final String JSON_PROPERTY_PERMANENT = "permanent";
  private Boolean permanent;

  public static final String JSON_PROPERTY_PERSISTENT = "persistent";
  private Boolean persistent;


  public DatabaseOptionType applyNow(Boolean applyNow) {
    
    this.applyNow = applyNow;
    return this;
  }

   /**
   * Get applyNow
   * @return applyNow
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_APPLY_NOW)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getApplyNow() {
    return applyNow;
  }


  @JsonProperty(JSON_PROPERTY_APPLY_NOW)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setApplyNow(Boolean applyNow) {
    this.applyNow = applyNow;
  }


  public DatabaseOptionType description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDescription() {
    return description;
  }


  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDescription(String description) {
    this.description = description;
  }


  public DatabaseOptionType name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setName(String name) {
    this.name = name;
  }


  public DatabaseOptionType optionSettings(List<DatabaseOptionSettingType> optionSettings) {
    
    this.optionSettings = optionSettings;
    return this;
  }

  public DatabaseOptionType addOptionSettingsItem(DatabaseOptionSettingType optionSettingsItem) {
    if (this.optionSettings == null) {
      this.optionSettings = new ArrayList<>();
    }
    this.optionSettings.add(optionSettingsItem);
    return this;
  }

   /**
   * Get optionSettings
   * @return optionSettings
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_OPTION_SETTINGS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<DatabaseOptionSettingType> getOptionSettings() {
    return optionSettings;
  }


  @JsonProperty(JSON_PROPERTY_OPTION_SETTINGS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOptionSettings(List<DatabaseOptionSettingType> optionSettings) {
    this.optionSettings = optionSettings;
  }


  public DatabaseOptionType permanent(Boolean permanent) {
    
    this.permanent = permanent;
    return this;
  }

   /**
   * Get permanent
   * @return permanent
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_PERMANENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getPermanent() {
    return permanent;
  }


  @JsonProperty(JSON_PROPERTY_PERMANENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPermanent(Boolean permanent) {
    this.permanent = permanent;
  }


  public DatabaseOptionType persistent(Boolean persistent) {
    
    this.persistent = persistent;
    return this;
  }

   /**
   * Get persistent
   * @return persistent
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_PERSISTENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getPersistent() {
    return persistent;
  }


  @JsonProperty(JSON_PROPERTY_PERSISTENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPersistent(Boolean persistent) {
    this.persistent = persistent;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DatabaseOptionType databaseOptionType = (DatabaseOptionType) o;
    return Objects.equals(this.applyNow, databaseOptionType.applyNow) &&
        Objects.equals(this.description, databaseOptionType.description) &&
        Objects.equals(this.name, databaseOptionType.name) &&
        Objects.equals(this.optionSettings, databaseOptionType.optionSettings) &&
        Objects.equals(this.permanent, databaseOptionType.permanent) &&
        Objects.equals(this.persistent, databaseOptionType.persistent);
  }

  @Override
  public int hashCode() {
    return Objects.hash(applyNow, description, name, optionSettings, permanent, persistent);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DatabaseOptionType {\n");
    sb.append("    applyNow: ").append(toIndentedString(applyNow)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    optionSettings: ").append(toIndentedString(optionSettings)).append("\n");
    sb.append("    permanent: ").append(toIndentedString(permanent)).append("\n");
    sb.append("    persistent: ").append(toIndentedString(persistent)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

