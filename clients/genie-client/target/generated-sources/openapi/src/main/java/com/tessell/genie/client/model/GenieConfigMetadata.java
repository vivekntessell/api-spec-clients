/*
 * API spec for Tessell Genie Service
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.tessell.genie.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.tessell.genie.client.model.GenieConfigJson;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.time.OffsetDateTime;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

import lombok.*;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
/**
 * Genie config for a tenant
 */
@ApiModel(description = "Genie config for a tenant")
@JsonPropertyOrder({
  GenieConfigMetadata.JSON_PROPERTY_TENANT_I_D,
  GenieConfigMetadata.JSON_PROPERTY_CONFIGIRATION,
  GenieConfigMetadata.JSON_PROPERTY_DATE_CREATED,
  GenieConfigMetadata.JSON_PROPERTY_DATE_MODIFIED
})
@JsonTypeName("GenieConfigMetadata")
@lombok.Builder
@lombok.NoArgsConstructor
@lombok.AllArgsConstructor
@javax.annotation.Generated(value = "com.tessell.codegen.TessellJavaGenerator", date = "2024-05-02T15:56:49.034198+05:30[Asia/Kolkata]")
@JsonIgnoreProperties(ignoreUnknown = true)
public class GenieConfigMetadata {
  public static final String JSON_PROPERTY_TENANT_I_D = "tenantID";
  private String tenantID;

  public static final String JSON_PROPERTY_CONFIGIRATION = "configiration";
  private GenieConfigJson configiration;

  public static final String JSON_PROPERTY_DATE_CREATED = "dateCreated";
  private OffsetDateTime dateCreated;

  public static final String JSON_PROPERTY_DATE_MODIFIED = "dateModified";
  private OffsetDateTime dateModified;


  public GenieConfigMetadata tenantID(String tenantID) {
    
    this.tenantID = tenantID;
    return this;
  }

   /**
   * Tenant Id
   * @return tenantID
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Tenant Id")
  @JsonProperty(JSON_PROPERTY_TENANT_I_D)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTenantID() {
    return tenantID;
  }


  @JsonProperty(JSON_PROPERTY_TENANT_I_D)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTenantID(String tenantID) {
    this.tenantID = tenantID;
  }


  public GenieConfigMetadata configiration(GenieConfigJson configiration) {
    
    this.configiration = configiration;
    return this;
  }

   /**
   * Genie configuration
   * @return configiration
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Genie configuration")
  @JsonProperty(JSON_PROPERTY_CONFIGIRATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public GenieConfigJson getConfigiration() {
    return configiration;
  }


  @JsonProperty(JSON_PROPERTY_CONFIGIRATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setConfigiration(GenieConfigJson configiration) {
    this.configiration = configiration;
  }


  public GenieConfigMetadata dateCreated(OffsetDateTime dateCreated) {
    
    this.dateCreated = dateCreated;
    return this;
  }

   /**
   * entry creation timestamp
   * @return dateCreated
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "entry creation timestamp")
  @JsonProperty(JSON_PROPERTY_DATE_CREATED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getDateCreated() {
    return dateCreated;
  }


  @JsonProperty(JSON_PROPERTY_DATE_CREATED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDateCreated(OffsetDateTime dateCreated) {
    this.dateCreated = dateCreated;
  }


  public GenieConfigMetadata dateModified(OffsetDateTime dateModified) {
    
    this.dateModified = dateModified;
    return this;
  }

   /**
   * entry modification timestamp
   * @return dateModified
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "entry modification timestamp")
  @JsonProperty(JSON_PROPERTY_DATE_MODIFIED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getDateModified() {
    return dateModified;
  }


  @JsonProperty(JSON_PROPERTY_DATE_MODIFIED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDateModified(OffsetDateTime dateModified) {
    this.dateModified = dateModified;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GenieConfigMetadata genieConfigMetadata = (GenieConfigMetadata) o;
    return Objects.equals(this.tenantID, genieConfigMetadata.tenantID) &&
        Objects.equals(this.configiration, genieConfigMetadata.configiration) &&
        Objects.equals(this.dateCreated, genieConfigMetadata.dateCreated) &&
        Objects.equals(this.dateModified, genieConfigMetadata.dateModified);
  }

  @Override
  public int hashCode() {
    return Objects.hash(tenantID, configiration, dateCreated, dateModified);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GenieConfigMetadata {\n");
    sb.append("    tenantID: ").append(toIndentedString(tenantID)).append("\n");
    sb.append("    configiration: ").append(toIndentedString(configiration)).append("\n");
    sb.append("    dateCreated: ").append(toIndentedString(dateCreated)).append("\n");
    sb.append("    dateModified: ").append(toIndentedString(dateModified)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

