/*
 * API spec for Tessell Genie Service
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.tessell.genie.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.tessell.genie.client.model.OsType;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

import lombok.*;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
/**
 * Genie Configuration instance object
 */
@ApiModel(description = "Genie Configuration instance object")
@JsonPropertyOrder({
  GenieConfigurationInstance.JSON_PROPERTY_COMPUTE_I_D,
  GenieConfigurationInstance.JSON_PROPERTY_COMPUTE_NAME,
  GenieConfigurationInstance.JSON_PROPERTY_FRPC_CONFIG,
  GenieConfigurationInstance.JSON_PROPERTY_CLIENT_I_D,
  GenieConfigurationInstance.JSON_PROPERTY_PEM_FILE,
  GenieConfigurationInstance.JSON_PROPERTY_WIN_R_M_FILE,
  GenieConfigurationInstance.JSON_PROPERTY_INSTANCE_DETAILS,
  GenieConfigurationInstance.JSON_PROPERTY_GENERAL_INFO,
  GenieConfigurationInstance.JSON_PROPERTY_OS,
  GenieConfigurationInstance.JSON_PROPERTY_LOGS,
  GenieConfigurationInstance.JSON_PROPERTY_USER,
  GenieConfigurationInstance.JSON_PROPERTY_RDP_USER_NAME,
  GenieConfigurationInstance.JSON_PROPERTY_RDP_PASSWORD
})
@JsonTypeName("GenieConfigurationInstance")
@lombok.Builder
@lombok.NoArgsConstructor
@lombok.AllArgsConstructor
@javax.annotation.Generated(value = "com.tessell.codegen.TessellJavaGenerator", date = "2024-05-02T15:56:49.034198+05:30[Asia/Kolkata]")
@JsonIgnoreProperties(ignoreUnknown = true)
public class GenieConfigurationInstance {
  public static final String JSON_PROPERTY_COMPUTE_I_D = "computeID";
  private String computeID;

  public static final String JSON_PROPERTY_COMPUTE_NAME = "computeName";
  private String computeName;

  public static final String JSON_PROPERTY_FRPC_CONFIG = "frpcConfig";
  private String frpcConfig;

  public static final String JSON_PROPERTY_CLIENT_I_D = "clientID";
  private String clientID;

  public static final String JSON_PROPERTY_PEM_FILE = "pemFile";
  private String pemFile;

  public static final String JSON_PROPERTY_WIN_R_M_FILE = "winRMFile";
  private String winRMFile;

  public static final String JSON_PROPERTY_INSTANCE_DETAILS = "instanceDetails";
  private String instanceDetails;

  public static final String JSON_PROPERTY_GENERAL_INFO = "generalInfo";
  private String generalInfo;

  public static final String JSON_PROPERTY_OS = "os";
  private OsType os;

  public static final String JSON_PROPERTY_LOGS = "logs";
  private String logs;

  public static final String JSON_PROPERTY_USER = "user";
  private String user;

  public static final String JSON_PROPERTY_RDP_USER_NAME = "rdpUserName";
  private String rdpUserName;

  public static final String JSON_PROPERTY_RDP_PASSWORD = "rdpPassword";
  private String rdpPassword;


  public GenieConfigurationInstance computeID(String computeID) {
    
    this.computeID = computeID;
    return this;
  }

   /**
   * Compute Resource Id of the DB Service Instance.
   * @return computeID
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Compute Resource Id of the DB Service Instance.")
  @JsonProperty(JSON_PROPERTY_COMPUTE_I_D)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getComputeID() {
    return computeID;
  }


  @JsonProperty(JSON_PROPERTY_COMPUTE_I_D)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setComputeID(String computeID) {
    this.computeID = computeID;
  }


  public GenieConfigurationInstance computeName(String computeName) {
    
    this.computeName = computeName;
    return this;
  }

   /**
   * Compute Resource name of the DB Service instance.
   * @return computeName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Compute Resource name of the DB Service instance.")
  @JsonProperty(JSON_PROPERTY_COMPUTE_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getComputeName() {
    return computeName;
  }


  @JsonProperty(JSON_PROPERTY_COMPUTE_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setComputeName(String computeName) {
    this.computeName = computeName;
  }


  public GenieConfigurationInstance frpcConfig(String frpcConfig) {
    
    this.frpcConfig = frpcConfig;
    return this;
  }

   /**
   * FRPC configuration
   * @return frpcConfig
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "FRPC configuration")
  @JsonProperty(JSON_PROPERTY_FRPC_CONFIG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getFrpcConfig() {
    return frpcConfig;
  }


  @JsonProperty(JSON_PROPERTY_FRPC_CONFIG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFrpcConfig(String frpcConfig) {
    this.frpcConfig = frpcConfig;
  }


  public GenieConfigurationInstance clientID(String clientID) {
    
    this.clientID = clientID;
    return this;
  }

   /**
   * FRPC client ID to authenticate with frps
   * @return clientID
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "FRPC client ID to authenticate with frps")
  @JsonProperty(JSON_PROPERTY_CLIENT_I_D)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getClientID() {
    return clientID;
  }


  @JsonProperty(JSON_PROPERTY_CLIENT_I_D)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setClientID(String clientID) {
    this.clientID = clientID;
  }


  public GenieConfigurationInstance pemFile(String pemFile) {
    
    this.pemFile = pemFile;
    return this;
  }

   /**
   * File that contains private key
   * @return pemFile
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "File that contains private key")
  @JsonProperty(JSON_PROPERTY_PEM_FILE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPemFile() {
    return pemFile;
  }


  @JsonProperty(JSON_PROPERTY_PEM_FILE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPemFile(String pemFile) {
    this.pemFile = pemFile;
  }


  public GenieConfigurationInstance winRMFile(String winRMFile) {
    
    this.winRMFile = winRMFile;
    return this;
  }

   /**
   * Python file to establish winRM session with the host
   * @return winRMFile
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Python file to establish winRM session with the host")
  @JsonProperty(JSON_PROPERTY_WIN_R_M_FILE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getWinRMFile() {
    return winRMFile;
  }


  @JsonProperty(JSON_PROPERTY_WIN_R_M_FILE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setWinRMFile(String winRMFile) {
    this.winRMFile = winRMFile;
  }


  public GenieConfigurationInstance instanceDetails(String instanceDetails) {
    
    this.instanceDetails = instanceDetails;
    return this;
  }

   /**
   * Instance details, success and errors
   * @return instanceDetails
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Instance details, success and errors")
  @JsonProperty(JSON_PROPERTY_INSTANCE_DETAILS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getInstanceDetails() {
    return instanceDetails;
  }


  @JsonProperty(JSON_PROPERTY_INSTANCE_DETAILS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInstanceDetails(String instanceDetails) {
    this.instanceDetails = instanceDetails;
  }


  public GenieConfigurationInstance generalInfo(String generalInfo) {
    
    this.generalInfo = generalInfo;
    return this;
  }

   /**
   * General Info about the connection
   * @return generalInfo
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "General Info about the connection")
  @JsonProperty(JSON_PROPERTY_GENERAL_INFO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getGeneralInfo() {
    return generalInfo;
  }


  @JsonProperty(JSON_PROPERTY_GENERAL_INFO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setGeneralInfo(String generalInfo) {
    this.generalInfo = generalInfo;
  }


  public GenieConfigurationInstance os(OsType os) {
    
    this.os = os;
    return this;
  }

   /**
   * Get os
   * @return os
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_OS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OsType getOs() {
    return os;
  }


  @JsonProperty(JSON_PROPERTY_OS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOs(OsType os) {
    this.os = os;
  }


  public GenieConfigurationInstance logs(String logs) {
    
    this.logs = logs;
    return this;
  }

   /**
   * Logs generated during enabling Genie - success and error
   * @return logs
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Logs generated during enabling Genie - success and error")
  @JsonProperty(JSON_PROPERTY_LOGS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getLogs() {
    return logs;
  }


  @JsonProperty(JSON_PROPERTY_LOGS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLogs(String logs) {
    this.logs = logs;
  }


  public GenieConfigurationInstance user(String user) {
    
    this.user = user;
    return this;
  }

   /**
   * Linux user
   * @return user
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Linux user")
  @JsonProperty(JSON_PROPERTY_USER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getUser() {
    return user;
  }


  @JsonProperty(JSON_PROPERTY_USER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUser(String user) {
    this.user = user;
  }


  public GenieConfigurationInstance rdpUserName(String rdpUserName) {
    
    this.rdpUserName = rdpUserName;
    return this;
  }

   /**
   * User name created on the VM for Genie
   * @return rdpUserName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "User name created on the VM for Genie")
  @JsonProperty(JSON_PROPERTY_RDP_USER_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getRdpUserName() {
    return rdpUserName;
  }


  @JsonProperty(JSON_PROPERTY_RDP_USER_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRdpUserName(String rdpUserName) {
    this.rdpUserName = rdpUserName;
  }


  public GenieConfigurationInstance rdpPassword(String rdpPassword) {
    
    this.rdpPassword = rdpPassword;
    return this;
  }

   /**
   * Admin password for the user
   * @return rdpPassword
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Admin password for the user")
  @JsonProperty(JSON_PROPERTY_RDP_PASSWORD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getRdpPassword() {
    return rdpPassword;
  }


  @JsonProperty(JSON_PROPERTY_RDP_PASSWORD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRdpPassword(String rdpPassword) {
    this.rdpPassword = rdpPassword;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GenieConfigurationInstance genieConfigurationInstance = (GenieConfigurationInstance) o;
    return Objects.equals(this.computeID, genieConfigurationInstance.computeID) &&
        Objects.equals(this.computeName, genieConfigurationInstance.computeName) &&
        Objects.equals(this.frpcConfig, genieConfigurationInstance.frpcConfig) &&
        Objects.equals(this.clientID, genieConfigurationInstance.clientID) &&
        Objects.equals(this.pemFile, genieConfigurationInstance.pemFile) &&
        Objects.equals(this.winRMFile, genieConfigurationInstance.winRMFile) &&
        Objects.equals(this.instanceDetails, genieConfigurationInstance.instanceDetails) &&
        Objects.equals(this.generalInfo, genieConfigurationInstance.generalInfo) &&
        Objects.equals(this.os, genieConfigurationInstance.os) &&
        Objects.equals(this.logs, genieConfigurationInstance.logs) &&
        Objects.equals(this.user, genieConfigurationInstance.user) &&
        Objects.equals(this.rdpUserName, genieConfigurationInstance.rdpUserName) &&
        Objects.equals(this.rdpPassword, genieConfigurationInstance.rdpPassword);
  }

  @Override
  public int hashCode() {
    return Objects.hash(computeID, computeName, frpcConfig, clientID, pemFile, winRMFile, instanceDetails, generalInfo, os, logs, user, rdpUserName, rdpPassword);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GenieConfigurationInstance {\n");
    sb.append("    computeID: ").append(toIndentedString(computeID)).append("\n");
    sb.append("    computeName: ").append(toIndentedString(computeName)).append("\n");
    sb.append("    frpcConfig: ").append(toIndentedString(frpcConfig)).append("\n");
    sb.append("    clientID: ").append(toIndentedString(clientID)).append("\n");
    sb.append("    pemFile: ").append(toIndentedString(pemFile)).append("\n");
    sb.append("    winRMFile: ").append(toIndentedString(winRMFile)).append("\n");
    sb.append("    instanceDetails: ").append(toIndentedString(instanceDetails)).append("\n");
    sb.append("    generalInfo: ").append(toIndentedString(generalInfo)).append("\n");
    sb.append("    os: ").append(toIndentedString(os)).append("\n");
    sb.append("    logs: ").append(toIndentedString(logs)).append("\n");
    sb.append("    user: ").append(toIndentedString(user)).append("\n");
    sb.append("    rdpUserName: ").append(toIndentedString(rdpUserName)).append("\n");
    sb.append("    rdpPassword: ").append(toIndentedString(rdpPassword)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

