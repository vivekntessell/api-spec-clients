/*
 * API spec for Tessell Genie Service
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.tessell.genie.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

import lombok.*;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
/**
 * Genie Configuration object
 */
@ApiModel(description = "Genie Configuration object")
@JsonPropertyOrder({
  GenieConfigJson.JSON_PROPERTY_INSTALL_FRP,
  GenieConfigJson.JSON_PROPERTY_VM_ACCESS_FOR_CUSTOMER,
  GenieConfigJson.JSON_PROPERTY_APPROVAL_FOR_GENIE_EXTERNAL,
  GenieConfigJson.JSON_PROPERTY_APPROVAL_FOR_GENIE_INTERNAL
})
@JsonTypeName("GenieConfigJson")
@lombok.Builder
@lombok.NoArgsConstructor
@lombok.AllArgsConstructor
@javax.annotation.Generated(value = "com.tessell.codegen.TessellJavaGenerator", date = "2024-05-02T15:56:49.034198+05:30[Asia/Kolkata]")
@JsonIgnoreProperties(ignoreUnknown = true)
public class GenieConfigJson {
  public static final String JSON_PROPERTY_INSTALL_FRP = "installFrp";
  private String installFrp;

  public static final String JSON_PROPERTY_VM_ACCESS_FOR_CUSTOMER = "vmAccessForCustomer";
  private String vmAccessForCustomer;

  public static final String JSON_PROPERTY_APPROVAL_FOR_GENIE_EXTERNAL = "approvalForGenieExternal";
  private String approvalForGenieExternal;

  public static final String JSON_PROPERTY_APPROVAL_FOR_GENIE_INTERNAL = "approvalForGenieInternal";
  private String approvalForGenieInternal;


  public GenieConfigJson installFrp(String installFrp) {
    
    this.installFrp = installFrp;
    return this;
  }

   /**
   * If FRP client software can be installed or updated on the provisioned VMs
   * @return installFrp
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "If FRP client software can be installed or updated on the provisioned VMs")
  @JsonProperty(JSON_PROPERTY_INSTALL_FRP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getInstallFrp() {
    return installFrp;
  }


  @JsonProperty(JSON_PROPERTY_INSTALL_FRP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInstallFrp(String installFrp) {
    this.installFrp = installFrp;
  }


  public GenieConfigJson vmAccessForCustomer(String vmAccessForCustomer) {
    
    this.vmAccessForCustomer = vmAccessForCustomer;
    return this;
  }

   /**
   * Check if Genie for customer feature is enabled
   * @return vmAccessForCustomer
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Check if Genie for customer feature is enabled")
  @JsonProperty(JSON_PROPERTY_VM_ACCESS_FOR_CUSTOMER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getVmAccessForCustomer() {
    return vmAccessForCustomer;
  }


  @JsonProperty(JSON_PROPERTY_VM_ACCESS_FOR_CUSTOMER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setVmAccessForCustomer(String vmAccessForCustomer) {
    this.vmAccessForCustomer = vmAccessForCustomer;
  }


  public GenieConfigJson approvalForGenieExternal(String approvalForGenieExternal) {
    
    this.approvalForGenieExternal = approvalForGenieExternal;
    return this;
  }

   /**
   * If approval from Tessell is required when Genie is requested by external customer
   * @return approvalForGenieExternal
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "If approval from Tessell is required when Genie is requested by external customer")
  @JsonProperty(JSON_PROPERTY_APPROVAL_FOR_GENIE_EXTERNAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getApprovalForGenieExternal() {
    return approvalForGenieExternal;
  }


  @JsonProperty(JSON_PROPERTY_APPROVAL_FOR_GENIE_EXTERNAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setApprovalForGenieExternal(String approvalForGenieExternal) {
    this.approvalForGenieExternal = approvalForGenieExternal;
  }


  public GenieConfigJson approvalForGenieInternal(String approvalForGenieInternal) {
    
    this.approvalForGenieInternal = approvalForGenieInternal;
    return this;
  }

   /**
   * If approval from Customer is required when Genie is requested by internal support team
   * @return approvalForGenieInternal
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "If approval from Customer is required when Genie is requested by internal support team")
  @JsonProperty(JSON_PROPERTY_APPROVAL_FOR_GENIE_INTERNAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getApprovalForGenieInternal() {
    return approvalForGenieInternal;
  }


  @JsonProperty(JSON_PROPERTY_APPROVAL_FOR_GENIE_INTERNAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setApprovalForGenieInternal(String approvalForGenieInternal) {
    this.approvalForGenieInternal = approvalForGenieInternal;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GenieConfigJson genieConfigJson = (GenieConfigJson) o;
    return Objects.equals(this.installFrp, genieConfigJson.installFrp) &&
        Objects.equals(this.vmAccessForCustomer, genieConfigJson.vmAccessForCustomer) &&
        Objects.equals(this.approvalForGenieExternal, genieConfigJson.approvalForGenieExternal) &&
        Objects.equals(this.approvalForGenieInternal, genieConfigJson.approvalForGenieInternal);
  }

  @Override
  public int hashCode() {
    return Objects.hash(installFrp, vmAccessForCustomer, approvalForGenieExternal, approvalForGenieInternal);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GenieConfigJson {\n");
    sb.append("    installFrp: ").append(toIndentedString(installFrp)).append("\n");
    sb.append("    vmAccessForCustomer: ").append(toIndentedString(vmAccessForCustomer)).append("\n");
    sb.append("    approvalForGenieExternal: ").append(toIndentedString(approvalForGenieExternal)).append("\n");
    sb.append("    approvalForGenieInternal: ").append(toIndentedString(approvalForGenieInternal)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

