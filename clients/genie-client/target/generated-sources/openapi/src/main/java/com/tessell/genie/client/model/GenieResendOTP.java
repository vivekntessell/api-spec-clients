/*
 * API spec for Tessell Genie Service
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.tessell.genie.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

import lombok.*;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
/**
 * GenieResendOTP
 */
@JsonPropertyOrder({
  GenieResendOTP.JSON_PROPERTY_REQUEST_I_D,
  GenieResendOTP.JSON_PROPERTY_USER,
  GenieResendOTP.JSON_PROPERTY_TICKET_ID,
  GenieResendOTP.JSON_PROPERTY_TICKET_SUMMARY
})
@JsonTypeName("GenieResendOTP")
@lombok.Builder
@lombok.NoArgsConstructor
@lombok.AllArgsConstructor
@javax.annotation.Generated(value = "com.tessell.codegen.TessellJavaGenerator", date = "2024-05-02T15:56:49.034198+05:30[Asia/Kolkata]")
@JsonIgnoreProperties(ignoreUnknown = true)
public class GenieResendOTP {
  public static final String JSON_PROPERTY_REQUEST_I_D = "requestID";
  private String requestID;

  public static final String JSON_PROPERTY_USER = "user";
  private String user;

  public static final String JSON_PROPERTY_TICKET_ID = "ticketId";
  private String ticketId;

  public static final String JSON_PROPERTY_TICKET_SUMMARY = "ticketSummary";
  private String ticketSummary;


  public GenieResendOTP requestID(String requestID) {
    
    this.requestID = requestID;
    return this;
  }

   /**
   * Request ID for which OTP has to be sent again
   * @return requestID
  **/
  @ApiModelProperty(required = true, value = "Request ID for which OTP has to be sent again")
  @JsonProperty(JSON_PROPERTY_REQUEST_I_D)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getRequestID() {
    return requestID;
  }


  @JsonProperty(JSON_PROPERTY_REQUEST_I_D)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setRequestID(String requestID) {
    this.requestID = requestID;
  }


  public GenieResendOTP user(String user) {
    
    this.user = user;
    return this;
  }

   /**
   * User that has taken the action
   * @return user
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "User that has taken the action")
  @JsonProperty(JSON_PROPERTY_USER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getUser() {
    return user;
  }


  @JsonProperty(JSON_PROPERTY_USER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUser(String user) {
    this.user = user;
  }


  public GenieResendOTP ticketId(String ticketId) {
    
    this.ticketId = ticketId;
    return this;
  }

   /**
   * Jira or freshdesk ticket filed to request Genie
   * @return ticketId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Jira or freshdesk ticket filed to request Genie")
  @JsonProperty(JSON_PROPERTY_TICKET_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTicketId() {
    return ticketId;
  }


  @JsonProperty(JSON_PROPERTY_TICKET_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTicketId(String ticketId) {
    this.ticketId = ticketId;
  }


  public GenieResendOTP ticketSummary(String ticketSummary) {
    
    this.ticketSummary = ticketSummary;
    return this;
  }

   /**
   * Jira or freshdesk ticket summary
   * @return ticketSummary
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Jira or freshdesk ticket summary")
  @JsonProperty(JSON_PROPERTY_TICKET_SUMMARY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTicketSummary() {
    return ticketSummary;
  }


  @JsonProperty(JSON_PROPERTY_TICKET_SUMMARY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTicketSummary(String ticketSummary) {
    this.ticketSummary = ticketSummary;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GenieResendOTP genieResendOTP = (GenieResendOTP) o;
    return Objects.equals(this.requestID, genieResendOTP.requestID) &&
        Objects.equals(this.user, genieResendOTP.user) &&
        Objects.equals(this.ticketId, genieResendOTP.ticketId) &&
        Objects.equals(this.ticketSummary, genieResendOTP.ticketSummary);
  }

  @Override
  public int hashCode() {
    return Objects.hash(requestID, user, ticketId, ticketSummary);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GenieResendOTP {\n");
    sb.append("    requestID: ").append(toIndentedString(requestID)).append("\n");
    sb.append("    user: ").append(toIndentedString(user)).append("\n");
    sb.append("    ticketId: ").append(toIndentedString(ticketId)).append("\n");
    sb.append("    ticketSummary: ").append(toIndentedString(ticketSummary)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

