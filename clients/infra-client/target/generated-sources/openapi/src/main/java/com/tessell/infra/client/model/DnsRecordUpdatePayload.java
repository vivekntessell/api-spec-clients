/*
 * Tessell Infra Management Service API
 * Tessell Infra APIs
 *
 * The version of the OpenAPI document: v1beta
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.tessell.infra.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.UUID;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

import lombok.*;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
/**
 * Payload for updating the dns record
 */
@ApiModel(description = "Payload for updating the dns record")
@JsonPropertyOrder({
  DnsRecordUpdatePayload.JSON_PROPERTY_IP,
  DnsRecordUpdatePayload.JSON_PROPERTY_DNS_NAME,
  DnsRecordUpdatePayload.JSON_PROPERTY_DOMAIN_NAME,
  DnsRecordUpdatePayload.JSON_PROPERTY_TTL,
  DnsRecordUpdatePayload.JSON_PROPERTY_REGION,
  DnsRecordUpdatePayload.JSON_PROPERTY_DNS_SERVICE,
  DnsRecordUpdatePayload.JSON_PROPERTY_CLOUD_ACCOUNT_ID
})
@JsonTypeName("DnsRecordUpdatePayload")
@lombok.experimental.SuperBuilder
@lombok.NoArgsConstructor
@lombok.AllArgsConstructor
@javax.annotation.Generated(value = "com.tessell.codegen.TessellJavaGenerator", date = "2024-05-02T15:56:55.674992+05:30[Asia/Kolkata]")
@JsonIgnoreProperties(ignoreUnknown = true)
public class DnsRecordUpdatePayload {
  public static final String JSON_PROPERTY_IP = "ip";
  private String ip;

  public static final String JSON_PROPERTY_DNS_NAME = "dnsName";
  private String dnsName;

  public static final String JSON_PROPERTY_DOMAIN_NAME = "domainName";
  private String domainName;

  public static final String JSON_PROPERTY_TTL = "ttl";
  private Integer ttl = null;

  public static final String JSON_PROPERTY_REGION = "region";
  private String region;

  /**
   * DNS service being used
   */
  public enum DnsServiceEnum {
    AZURE_DNS("AZURE_DNS"),
    
    ROUTE_53("ROUTE_53"),
    
    NO_DNS("NO_DNS");

    private String value;

    DnsServiceEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static DnsServiceEnum fromValue(String value) {
      for (DnsServiceEnum b : DnsServiceEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_DNS_SERVICE = "dnsService";
  private DnsServiceEnum dnsService;

  public static final String JSON_PROPERTY_CLOUD_ACCOUNT_ID = "cloudAccountId";
  private UUID cloudAccountId;


  public DnsRecordUpdatePayload ip(String ip) {
    
    this.ip = ip;
    return this;
  }

   /**
   * IP address of the Virtual Machine
   * @return ip
  **/
  @ApiModelProperty(required = true, value = "IP address of the Virtual Machine")
  @JsonProperty(JSON_PROPERTY_IP)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getIp() {
    return ip;
  }


  @JsonProperty(JSON_PROPERTY_IP)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setIp(String ip) {
    this.ip = ip;
  }


  public DnsRecordUpdatePayload dnsName(String dnsName) {
    
    this.dnsName = dnsName;
    return this;
  }

   /**
   * DNS name of the Virtual Machine
   * @return dnsName
  **/
  @ApiModelProperty(required = true, value = "DNS name of the Virtual Machine")
  @JsonProperty(JSON_PROPERTY_DNS_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getDnsName() {
    return dnsName;
  }


  @JsonProperty(JSON_PROPERTY_DNS_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDnsName(String dnsName) {
    this.dnsName = dnsName;
  }


  public DnsRecordUpdatePayload domainName(String domainName) {
    
    this.domainName = domainName;
    return this;
  }

   /**
   * Domain name
   * @return domainName
  **/
  @ApiModelProperty(required = true, value = "Domain name")
  @JsonProperty(JSON_PROPERTY_DOMAIN_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getDomainName() {
    return domainName;
  }


  @JsonProperty(JSON_PROPERTY_DOMAIN_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDomainName(String domainName) {
    this.domainName = domainName;
  }


  public DnsRecordUpdatePayload ttl(Integer ttl) {
    
    this.ttl = ttl;
    return this;
  }

   /**
   * Time to live value for the DNS record
   * @return ttl
  **/
  @ApiModelProperty(required = true, value = "Time to live value for the DNS record")
  @JsonProperty(JSON_PROPERTY_TTL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getTtl() {
    return ttl;
  }


  @JsonProperty(JSON_PROPERTY_TTL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTtl(Integer ttl) {
    this.ttl = ttl;
  }


  public DnsRecordUpdatePayload region(String region) {
    
    this.region = region;
    return this;
  }

   /**
   * Cloud region
   * @return region
  **/
  @ApiModelProperty(required = true, value = "Cloud region")
  @JsonProperty(JSON_PROPERTY_REGION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getRegion() {
    return region;
  }


  @JsonProperty(JSON_PROPERTY_REGION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setRegion(String region) {
    this.region = region;
  }


  public DnsRecordUpdatePayload dnsService(DnsServiceEnum dnsService) {
    
    this.dnsService = dnsService;
    return this;
  }

   /**
   * DNS service being used
   * @return dnsService
  **/
  @ApiModelProperty(required = true, value = "DNS service being used")
  @JsonProperty(JSON_PROPERTY_DNS_SERVICE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public DnsServiceEnum getDnsService() {
    return dnsService;
  }


  @JsonProperty(JSON_PROPERTY_DNS_SERVICE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDnsService(DnsServiceEnum dnsService) {
    this.dnsService = dnsService;
  }


  public DnsRecordUpdatePayload cloudAccountId(UUID cloudAccountId) {
    
    this.cloudAccountId = cloudAccountId;
    return this;
  }

   /**
   * Cloud account ID for the account where DNS record is present
   * @return cloudAccountId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Cloud account ID for the account where DNS record is present")
  @JsonProperty(JSON_PROPERTY_CLOUD_ACCOUNT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public UUID getCloudAccountId() {
    return cloudAccountId;
  }


  @JsonProperty(JSON_PROPERTY_CLOUD_ACCOUNT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCloudAccountId(UUID cloudAccountId) {
    this.cloudAccountId = cloudAccountId;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DnsRecordUpdatePayload dnsRecordUpdatePayload = (DnsRecordUpdatePayload) o;
    return Objects.equals(this.ip, dnsRecordUpdatePayload.ip) &&
        Objects.equals(this.dnsName, dnsRecordUpdatePayload.dnsName) &&
        Objects.equals(this.domainName, dnsRecordUpdatePayload.domainName) &&
        Objects.equals(this.ttl, dnsRecordUpdatePayload.ttl) &&
        Objects.equals(this.region, dnsRecordUpdatePayload.region) &&
        Objects.equals(this.dnsService, dnsRecordUpdatePayload.dnsService) &&
        Objects.equals(this.cloudAccountId, dnsRecordUpdatePayload.cloudAccountId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(ip, dnsName, domainName, ttl, region, dnsService, cloudAccountId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DnsRecordUpdatePayload {\n");
    sb.append("    ip: ").append(toIndentedString(ip)).append("\n");
    sb.append("    dnsName: ").append(toIndentedString(dnsName)).append("\n");
    sb.append("    domainName: ").append(toIndentedString(domainName)).append("\n");
    sb.append("    ttl: ").append(toIndentedString(ttl)).append("\n");
    sb.append("    region: ").append(toIndentedString(region)).append("\n");
    sb.append("    dnsService: ").append(toIndentedString(dnsService)).append("\n");
    sb.append("    cloudAccountId: ").append(toIndentedString(cloudAccountId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

